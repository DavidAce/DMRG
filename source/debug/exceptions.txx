EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, int &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, int &&, int&&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, int &&, int&&, int&&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, int &&, int&&, int&&, int&&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, long &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, long &&, long&&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, long &&, long&&, long&&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, long &&, long&&, long&&, long&&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, size_t &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, size_t &&, size_t &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, size_t &&, size_t &&, size_t &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, size_t &&, size_t && , size_t &&, size_t &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, double &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, double &&, double &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, std::string &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, std::string &&, std::string &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, std::string_view &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, std::string_view &&, std::string_view&&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, char * &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, char * &&, char * &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, const char * &&);
EXCEPT_EXTERN template except::runtime_error::runtime_error(fmt::format_string<Args...>, const char * &&, const char * &&);


EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, int &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, int &&, int&&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, int &&, int&&, int&&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, int &&, int&&, int&&, int&&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, long &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, long &&, long&&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, long &&, long&&, long&&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, long &&, long&&, long&&, long&&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, size_t &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, size_t &&, size_t &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, size_t &&, size_t &&, size_t &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, size_t &&, size_t && , size_t &&, size_t &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, double &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, double &&, double &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, std::string &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, std::string &&, std::string &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, std::string_view &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, std::string_view &&, std::string_view&&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, char * &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, char * &&, char * &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, const char * &&);
EXCEPT_EXTERN template except::logic_error::logic_error(fmt::format_string<Args...>, const char * &&, const char * &&);

EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, int &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, int &&, int&&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, int &&, int&&, int&&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, int &&, int&&, int&&, int&&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, long &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, long &&, long&&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, long &&, long&&, long&&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, long &&, long&&, long&&, long&&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, size_t &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, size_t &&, size_t &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, size_t &&, size_t &&, size_t &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, size_t &&, size_t && , size_t &&, size_t &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, double &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, double &&, double &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, std::string &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, std::string &&, std::string &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, std::string_view &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, std::string_view &&, std::string_view&&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, char * &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, char * &&, char * &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, const char * &&);
EXCEPT_EXTERN template except::range_error::range_error(fmt::format_string<Args...>, const char * &&, const char * &&);