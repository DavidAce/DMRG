<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="n__tensor__extra_8h" kind="file" language="C++">
    <compoundname>n_tensor_extra.h</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">unsupported/Eigen/CXX11/Tensor</includes>
    <includes local="no">iterator</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includedby refid="class__environment_8h" local="no">source/class_environment.h</includedby>
    <includedby refid="class___m_p_s_8h" local="no">source/class_MPS.h</includedby>
    <includedby refid="class__storage_8h" local="no">source/class_storage.h</includedby>
    <includedby refid="class___s_v_d_8cpp" local="no">source/class_SVD.cpp</includedby>
    <includedby refid="class___s_v_d_8h" local="no">source/class_SVD.h</includedby>
    <includedby refid="class___two_site_hamiltonian_8h" local="no">source/class_TwoSiteHamiltonian.h</includedby>
    <includedby refid="n__model_8h" local="no">source/n_model.h</includedby>
    <includedby refid="n__tensor__extra_8cpp" local="no">source/n_tensor_extra.cpp</includedby>
    <incdepgraph>
      <node id="241">
        <label>iterator</label>
      </node>
      <node id="239">
        <label>Eigen/Core</label>
      </node>
      <node id="240">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="238">
        <label>source/n_tensor_extra.h</label>
        <link refid="n_tensor_extra.h"/>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="242">
        <label>vector</label>
      </node>
      <node id="243">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="250">
        <label>source/class_SVD.h</label>
        <link refid="class___s_v_d_8h_source"/>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>source/class_superblock.h</label>
        <link refid="class__superblock_8h_source"/>
        <childnode refid="247" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>source/n_model.h</label>
        <link refid="n__model_8h_source"/>
      </node>
      <node id="244">
        <label>source/n_tensor_extra.h</label>
        <link refid="n_tensor_extra.h"/>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
      </node>
      <node id="245">
        <label>source/class_environment.h</label>
        <link refid="class__environment_8h_source"/>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
      </node>
      <node id="247">
        <label>source/class_storage.h</label>
        <link refid="class__storage_8h_source"/>
      </node>
      <node id="248">
        <label>source/class_TwoSiteHamiltonian.h</label>
        <link refid="class___two_site_hamiltonian_8h_source"/>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="249">
        <label>source/class_MPS.h</label>
        <link refid="class___m_p_s_8h_source"/>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_textra">Textra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>6/7/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TEBD_EIGEN_N_TENSOR_EXTRA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEBD_EIGEN_N_TENSOR_EXTRA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unsupported/Eigen/CXX11/Tensor&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_textra" kindref="compound">Textra</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Scalar<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>double;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Tensor4<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,4,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Tensor3<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,3,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Tensor2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,2,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Tensor1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,1,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Tensor0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,0,Eigen::ColMajor&gt;;<sp/></highlight><highlight class="comment">//Scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_Tensor4<sp/>=<sp/>Eigen::Tensor&lt;const<sp/>Scalar,4,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_Tensor3<sp/>=<sp/>Eigen::Tensor&lt;const<sp/>Scalar,3,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_Tensor2<sp/>=<sp/>Eigen::Tensor&lt;const<sp/>Scalar,2,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_Tensor1<sp/>=<sp/>Eigen::Tensor&lt;const<sp/>Scalar,1,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>MatrixType<sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;Scalar,Eigen::Dynamic,Eigen::Dynamic,Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>VectorType<sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;Scalar,Eigen::Dynamic,<sp/>1,<sp/>Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>array4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::array&lt;long,<sp/>4&gt;;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>array3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::array&lt;long,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>array2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::array&lt;long,<sp/>2&gt;;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>array1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::array&lt;long,<sp/>1&gt;;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>idx2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::IndexPair&lt;int&gt;;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>idxlist1<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::array&lt;idx2,<sp/>1&gt;;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>idxlist2<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::array&lt;idx2,<sp/>2&gt;;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>idxlist3<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::array&lt;idx2,<sp/>3&gt;;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>idxlist4<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::array&lt;idx2,<sp/>4&gt;;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream&amp;<sp/>out,<sp/>const<sp/>Eigen::DSizes&lt;T,L&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!v.empty()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy<sp/>(v.begin(),<sp/>v.end(),<sp/>std::ostream_iterator&lt;T&gt;(out,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/>operator&lt;&lt;<sp/>(std::ostream&amp;<sp/>out,<sp/>const<sp/>Eigen::array&lt;T,L&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!v.empty()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy<sp/>(v.begin(),<sp/>v.end(),<sp/>std::ostream_iterator&lt;T&gt;(out,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Tensor3<sp/>reshape(MatrixType<sp/>matrix,<sp/>array3<sp/>dims);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Tensor2<sp/>asDiagonal<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::TensorRef&lt;const<sp/>Tensor1&gt;<sp/>tensor);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Tensor2<sp/>asInverseDiagonal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::TensorRef&lt;const<sp/>Tensor1&gt;<sp/>tensor);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Tensor1<sp/>matrix_to_tensor1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;const<sp/>MatrixType&gt;<sp/>matrix);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Tensor2<sp/>matrix_to_tensor2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;const<sp/>MatrixType&gt;<sp/>matrix);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Tensor2<sp/>matrix_to_tensor2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;const<sp/>MatrixType&gt;<sp/>matrix,<sp/>array2<sp/>dims);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Tensor3<sp/>matrix_to_tensor3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;const<sp/>MatrixType&gt;<sp/>matrix,<sp/>array3<sp/>dims);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>MatrixType<sp/>tensor2_to_matrix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor2<sp/>&amp;tensor);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//TEBD_EIGEN_N_TENSOR_EXTRA_H</highlight></codeline>
    </programlisting>
    <location file="source/n_tensor_extra.h"/>
  </compounddef>
</doxygen>
