function(get_num_threads num_threads)

    if(CMAKE_BUILD_PARALLEL_LEVEL)
#        message(STATUS "Using make -j ${CMAKE_BUILD_PARALLEL_LEVEL} (as defined in CMAKE_BUILD_PARALLEL_LEVEL)")
        set(${num_threads} ${CMAKE_BUILD_PARALLEL_LEVEL} PARENT_SCOPE)
        set(ENV{CMAKE_BUILD_PARALLEL_LEVEL} ${CMAKE_BUILD_PARALLEL_LEVEL})
        return()
    endif()
    if($ENV{CMAKE_BUILD_PARALLEL_LEVEL})
#        message(STATUS "Using make -j $ENV{CMAKE_BUILD_PARALLEL_LEVEL} (as defined in ENV CMAKE_BUILD_PARALLEL_LEVEL)")
        set(${num_threads} $ENV{CMAKE_BUILD_PARALLEL_LEVEL} PARENT_SCOPE)
        set(${CMAKE_BUILD_PARALLEL_LEVEL} $ENV{CMAKE_BUILD_PARALLEL_LEVEL})
        return()
    endif()


    cmake_host_system_information(RESULT _host_name   QUERY HOSTNAME)
    if(${_host_name} MATCHES "travis|TRAVIS|Travis|fv-")
        message(STATUS "Using make -j 2 (ci)")
        set(${num_threads} 2 PARENT_SCOPE)
        return()
    endif()


    if(${_host_name} MATCHES "ThinkStation")
#        message(STATUS "Using make -j 8 (${_host_name})")
        set(${num_threads} 8 PARENT_SCOPE)
        return()
    endif()
    if(${_host_name} MATCHES "raken")
#        message(STATUS "Using make -j 32 (${_host_name})")
        set(${num_threads} 32 PARENT_SCOPE)
        return()
    endif()

    if(DEFINED ENV{MAKEFLAGS})
        string(REGEX MATCH "-j[ ]*[0-9]+|--jobs[ ]*[0-9]+" REGMATCH "$ENV{MAKEFLAGS}")
        string(REGEX MATCH "[0-9]+" NUM "${REGMATCH}")
        if(NUM)
            message(STATUS "Using make -j ${NUM} (as defined in ENV MAKEFLAGS)")
            set(${num_threads} ${NUM} PARENT_SCOPE)
            return()
        endif()
    endif()
    if(MAKE_THREADS)
        string(REGEX MATCH "-j[ ]*[0-9]+|--jobs[ ]*[0-9]+" REGMATCH "${MAKE_THREADS}")
        string(REGEX MATCH "[0-9]+" NUM "${REGMATCH}")
        if(NUM)
            message(STATUS "Using make -j ${NUM} (as defined in MAKEFLAGS)")
            set(${num_threads} ${NUM} PARENT_SCOPE)
            return()
        endif()
    endif()
    include(ProcessorCount)
    ProcessorCount(NUM)
    if(NUM)
        message(STATUS "Using make -j ${NUM} (as defined in ProcessorCount)")
        set(${num_threads} ${NUM} PARENT_SCOPE)
        return()
    endif()


    set(${num_threads} 1 PARENT_SCOPE)

endfunction()