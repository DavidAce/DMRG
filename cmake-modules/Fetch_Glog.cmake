
include(cmake-modules/filterTarget.cmake)
find_package(glog 0.4 PATHS ${CMAKE_INSTALL_PREFIX}/glog $ENV{EBROOTGLOG} $ENV{GLOG_DIR} $ENV{glog_DIR} NO_DEFAULT_PATH)


if(TARGET glog::glog)
    message(STATUS "glog found")

    string(TOUPPER ${CMAKE_BUILD_TYPE} BUILD_TYPE)
    get_target_property(gloglib  glog::glog IMPORTED_LOCATION_${BUILD_TYPE})
    target_link_libraries(glog::glog INTERFACE ${gloglib})
    remove_shared(glog::glog)
    remove_pthread(glog::glog)
    include(cmake-modules/PrintTargetProperties.cmake)
    print_target_properties(gflags)


elseif(DOWNLOAD_MISSING)
    message(STATUS "glog will be installed into ${CMAKE_INSTALL_PREFIX}")
    include(${PROJECT_SOURCE_DIR}/cmake-modules/BuildDependency.cmake)
    list(APPEND GLOG_CMAKE_OPTIONS -Dgflags_DIR:PATH=${CMAKE_INSTALL_PREFIX}/gflags)
    build_dependency(glog "${GLOG_CMAKE_OPTIONS}")
    find_package(glog 0.4 PATHS ${CMAKE_INSTALL_PREFIX}/glog NO_DEFAULT_PATH REQUIRED)
    if(TARGET glog::glog)
        message(STATUS "glog installed successfully")
        string(TOUPPER ${CMAKE_BUILD_TYPE} BUILD_TYPE)
        get_target_property(gloglib  glog::glog IMPORTED_LOCATION_${BUILD_TYPE})
        target_link_libraries(glog::glog INTERFACE ${gloglib})
        remove_shared(glog::glog)
        remove_pthread(glog::glog)
        include(cmake-modules/PrintTargetProperties.cmake)
        print_target_properties(gflags)
    else()
        message(STATUS "config_result: ${config_result}")
        message(STATUS "build_result: ${build_result}")
        message(FATAL_ERROR "glog could not be downloaded.")
    endif()

else()
    message(FATAL_ERROR "Dependency glog not found and DOWNLOAD_MISSING is OFF")
endif()