
[console] #Console settings
loglevel      = 2                                 # Verbosity [0-6]. Level 0 prints everything, 6 nothing. Level 2 or 3 is recommended for normal use
logh5pp       = 2                                 # Verbosity of the h5pp library [0-6] Level 2 or 3 is recommended for normal use
timestamp     = true                              # (NOT IMPLEMENTED) Whether to put a timestamp on console outputs


[threading] # Parameters for Multithreading
num_threads                    = 1                                 # Number of threads in total: omp + std threads. Set to -1 for as many as possible. Use OMP_NUM_THREADS to control OpenMP threads.

[timer] #Parameters to control timers.
level                          = "highest"                         # How much detail to print on exit [ normal | higher |  highest ]

[input] # Input parameters (note that CLI parameters overrwide these)
seed                           = 1                                 # Main seed for the random number generator.

[storage] # Parameters for saving data to hdf5
output_filepath                  = "../../output/mbl.h5"             # Name of the output HDF5 file relative to the execution point
output_append_seed               = true                              # Append the seed for the random number generator to output_filepath
storage_interval                 = 1                                 # Write to file this often, in units of iterations. Applies to StorageEvent::Iteration.
use_temp_dir                     = true                              # If true uses a temporary directory for writes in the local drive (usually /tmp) and copies the results afterward
copy_from_temp_freq              = 10                                # How often, in units of iterations, to copy the hdf5 file in tmp dir to target destination
temp_dir                         = "/tmp"                            # Local temp directory on the local system. If it does not exist we default to /tmp instead (or whatever is the default)
compression_level                = 6                                 # GZip compression level in HDF5. Choose between [0-9] (0 = off, 9 = max compression)
file_collision_policy            = "REPLACE"                         # What to do when a prior output file is found. Choose between RESUME, REVIVE, BACKUP, RENAME, REPLACE
file_resume_policy               = "FAST"                            # Depends on dataset "common/finished_all=bool" FULL: Ignore bool -> Scan .cfg to add missing items. FAST: exit if true.
file_resume_name                 = ""                                # On file_collision_policy=RESUME|REVIVE: resume from state candidate matching this string. Empty implies any
file_resume_iter                 = -1                                # On file_collision_policy=RESUME|REVIVE: which iteration to resume from. -1ul implies resume from last available iteration

#  enum StoragePolicy:
#  - NONE    : Never store
#  - INIT    : Store only once during initialization e.g. model (usually in preprocessing)
#  - ITER    : Store after every iteration
#  - EMIN    : Store after finding the ground state (e.g. before xDMRG)
#  - EMAX    : Store after finding the highest energy eigenstate (e.g. before xDMRG)
#  - PROJ    : Store after projections
#  - BOND    : Store after bond updates
#  - TRNC    : Store after truncation error limit updates
#  - FAILURE : Store only if the simulation did not succeed (usually for debugging)
#  - SUCCESS : Store only if the simulation succeeded
#  - FINISH  : Store when the simulation has finished (regardless of failure or success)
#  - ALWAYS  : Store every chance you get
#  - REPLACE : Keep only the last event (i.e. replace previous events when possible)
mps.state_emid.policy                               = "NONE"           #
mps.state_emin.policy                               = "NONE"           #
mps.state_emax.policy                               = "NONE"           #
mps.state_real.policy                               = "NONE"           #
mps.state_lbit.policy                               = "NONE"           #
mpo.model.policy                                    = "NONE"           #
table.bonds.policy                                  = "NONE"           #
table.model.policy                                  = "INIT"           #
table.measurements.policy                           = "ITER"           #
table.status.policy                                 = "ITER|REPLACE"   #
table.memory.policy                                 = "ITER|REPLACE"   #
table.timers.level                                  = "normal"         # tid::level [normal, higher, highest]
table.timers.policy                                 = "FINISH"         #
table.entanglement_entropies.policy                 = "ITER"           #
table.truncation_errors.policy                      = "ITER|REPLACE"   #
table.bond_dimensions.policy                        = "ITER|REPLACE"   #
table.number_entropies.policy                       = "ITER"           #
table.renyi_entropies.policy                        = "ITER"           #
table.kvornings_marker.policy                       = "NONE"           #
table.expectation_values_spin_xyz.policy            = "NONE"           #
table.correlation_matrix_spin_xyz.policy            = "NONE"           #
table.random_unitary_circuit.policy                 = "INIT"           #
dataset.lbit_analysis.policy                        = "INIT"           #
dataset.subsystem_entanglement_entropies.policy     = "NONE"           #
dataset.subsystem_entanglement_entropies.chunksize  = 10               #
dataset.number_probabilities.policy                 = "ITER"           #
dataset.number_probabilities.chunksize              = 10               #
dataset.expectation_values_spin_xyz.policy          = "NONE"           #
dataset.expectation_values_spin_xyz.chunksize       = 10               #
dataset.correlation_matrix_spin_xyz.policy          = "NONE"           #
dataset.correlation_matrix_spin_xyz.chunksize       = 10               #

[solver] # Parmaters that control solvers such as eigs, svd and bfgs
eig_max_size                    = 3000                              # Maximum problem size before switching from eig to eigs.
eigs_iter_max                   = 50000                             # Maximum number of steps for eigenvalue solver.
eigs_tol_min                    = 1e-14                             # Minimum precision tolerance for halting the eigenvalue solver.
eigs_tol_max                    = 1e-10                             # Maximum (default) precision tolerance for halting the eigenvalue solver.
eigs_ncv                        = 4                                 # Parameter controlling the krylov/column space of the Arnoldi eigenvalue solver
eigs_max_size_shift_invert      = 4096                              # Maximum problem size allowed for partial diagonalization of the local (effective) hamiltonian matrix.
eigs_stuck_multiplier           = 4                                 # Increase number of iterations on BFGS/EIGS by this factor when stuck
svd_truncation_lim              = 1e-5                              # Truncation error limit, i.e. discard singular values while the truncation error is lower than this
svd_truncation_init             = 1e-5                              # If truncation error limit is updated (trnc_decrease_when != NEVER), start from this value
svd_switchsize_bdc              = 16                                # Linear size of a matrix, below which SVD will use slower but more precise JacobiSVD instead of BDC (default is 16 , good could be ~64)
svd_save_fail                   = false                             # Save failed SVD calculations to file


[strategy] # Options for strategy that affect convergence and targeted state
move_sites_when_stuck           = false                             # Try moving sites around when stuck
project_on_saturation           = 5                                 # Project to target axis/parity sector every nth iteration when saturated. (0 = turn off)
project_on_every_iter           = 0                                 # Project to target axis/parity sector at the end of every nth iteration. This implies doing it when stuck also.
project_on_bond_update          = false                             # Project to target axis/parity sector before the bond dimension limit is increased (only works if bond_increase_when != NEVER).
project_initial_state           = false                             # Project to target axis/parity sector when initializing a state.
project_final_state             = false                             # Project to target axis/parity sector before writing down the final state
randomize_on_bond_update        = false                             # Randomize MPS by flipping random spins when growing the bond dimension
randomize_early                 = false                             # Randomize MPS by flipping random spins before fully converging the first attempt (because the first attempt is biased)
use_eigenspinors                = true                              # Use random pauli-matrix eigenvectors when initializing each mps site along x,y or z
max_resets                      = 1                                 # Maximum number of resets to product state due to saturation. One must be allowed for initialization
max_stuck_iters                 = 5                                 # If stuck for this many iterations -> stop.
max_saturation_iters            = 25                                # If either variance or entanglement saturated this long -> algorithm saturated = true
min_saturation_iters            = 0                                 # Saturated at least this many iterations before stopping
min_converged_iters             = 2                                 # Converged at least this many iterations before success
max_env_expansion_alpha         = 1e-4                              # Maximum value of alpha used in environment expansion
multisite_opt_site_def          = 1                                 # Default number of sites in a multisite mps. More than ~8 is very expensive
multisite_opt_site_max          = 2                                 # Maximum number of sites in a multisite mps (used when stuck). More than ~8 is very expensive
multisite_opt_move              = "ONE"                             # How many sites to move after a multi-site dmrg step, choose between {ONE, MID, MAX}
multisite_opt_when              = "NEVER"                           # When to increase the number of sites in a DMRG step {NEVER, STUCK, SATURATED, ALWAYS}
multisite_opt_grow              = "ON"                              # OFF: Increase to max sites immediately when conditions are right, ON: grow up to max linearly with stuck/saturated iters
target_axis                     = "none"                            # Find an eigenstate with global spin component along this axis. Choose between Choose {none, (+-) x,y or z}
initial_axis                    = "+z"                              # Initialize state with global spin component along this axis. Choose {none, (+-) x,y or z}
initial_type                    = "REAL"                            # Initial state can be REAL/CPLX
initial_state                   = "PRODUCT_STATE_NEEL"              # Initial configuration for the spin chain (only for finite systems)
secondary_states                = "PRODUCT_STATE_NEEL"              # Spin configuration for subsequent states (only for finite systems)
initial_pattern                 = ""                                # Initial state can be REAL/CPLX
fes_rate                        = 0                                 # If |fes_rate| > 0, runs a finite entanglement scaling (fes) analysis with this step size in bond dimension, after finishing the main algorithm
bond_increase_when              = "NEVER"                           # If and when to increase the bond dimension limit {NEVER, TRUNCATED, STUCK, SATURATED, ITERATION}.
bond_increase_rate              = 64                                # Bond dimension growth rate. Factor if 1<x<=2, constant shift if x > 2, otherwise invalid.
trnc_decrease_when              = "NEVER"                           # If and when to decrease SVD truncation error limit {NEVER, TRUNCATED, STUCK, SATURATED, ITERATION}
trnc_decrease_rate              = 1e-2                              # Decrease SVD truncation error limit by this factor. Valid if 0 < x < 1

[precision] # Parmaters that control MPS precision
use_compressed_mpo_squared_all  = false                             # Use SVD to compress the bond dimensions of all H² mpos at the end of an iteration
use_compressed_mpo_on_the_fly   = false                             # Use SVD to compress the bond dimensions of the multisite H² mpo on-the-fly, just before an optimization step
use_energy_shifted_mpo          = false                             # Whether to subtract E/L from ALL mpos to avoid catastrophic cancellation when computing the variance
use_parity_shifted_mpo          = false                             # Lift degeneracy by redefining H --> (H + Q(σ)) where Q(σ) = 0.5(1 - prod(σ)) = P(-σ) is the (flipped sign) projection operator
use_parity_shifted_mpo_squared  = false                             # Lift degeneracy by redefining H² --> (H² + Q(σ)) where Q(σ) = 0.5(1 - prod(σ)) = P(-σ) is the (flipped sign) projection operator
variance_convergence_threshold  = 1e-13                             # Variance convergence threshold. The MPS state is considered good enough when its variance reaches below this value
variance_saturation_sensitivity = 1e-1                              # Energy variance saturates when its log stops changing below this order of magnitude between sweeps. Good values are 1e-1 to 1e-4
entropy_saturation_sensitivity  = 1e-3                              # Entanglement entropy saturates when it stops changing below this order of magnitude between sweeps. Good values are 1e-1 to 1e-4
target_subspace_error           = 1e-10                             # The target subspace error 1-Σ|<ϕ_i|ψ>|². Eigenvectors are found until reaching this value. Measures whether the incomplete basis of eigenstates spans the current state.
max_subspace_size               = 256                               # Maximum number of candidate eigenstates to keep for a subspace optimization step
max_size_multisite              = 1180000                           # Maximum problem size for multisite dmrg. If the linear size is larger than this, the algorithm prefers 1-site dmrg.
max_norm_error                  = 1e-10                             # Maximum norm deviation from unity during integrity checks

[model]
# Common parameters for the model Hamiltonian
model_type = "lbit"                                                   # Choice of model: {ising_tf_rf,ising_sdual, ising_majorana, lbit}
model_size = 16                                                       # Number of sites on the chain. Only relevant for finite algorithms: fDMRG and xDMRG

#Parameters for the transvese-field next-nearest neighbor Ising model with a random field
ising_tf_rf.J1                    = 1.0                               # Ferromagnetic coupling for nearest neighbors.
ising_tf_rf.J2                    = 0.0                               # Ferromagnetic coupling for next-nearest neighbors.
ising_tf_rf.h_tran                = 1.0                               # Transverse field strength
ising_tf_rf.h_mean                = 0.0                               # Random field mean of distribution
ising_tf_rf.h_wdth                = 0.0                               # Random field width of distribution
ising_tf_rf.spin_dim              = 2                                 # Spin dimension
ising_tf_rf.distribution          = "normal"                          # Random distribution for couplings and fields

# //Parameters for the selfdual transverse-field random-field next-nearest neighbor Ising model
ising_sdual.lambda                = 0.0                               # Width of the distribution for the J_rand coupling
ising_sdual.delta                 = 0.0                               # Width of the distribution for the h_rand on-site field
ising_sdual.spin_dim              = 2                                 # Spin dimension
ising_sdual.distribution          = "uniform"                         # Random distribution for couplings and fields

# Parameters for the Ising-Majorana model
ising_majorana.g                  = 0.5                               # Interaction parameter for nearest ZZ and next-nearest XX neighbor coupling
ising_majorana.delta              = 0.0                               # Delta defined as log(J_mean) - log(h_mean). We get J_mean and h_mean by fixing delta = 2lnW, W = J_wdth = 1/h_wdth
ising_majorana.spin_dim           = 2                                 # Spin dimension
ising_majorana.distribution       = "uniform"                         # Random distribution for couplings and fields

# Parameters for the l-bit Hamiltonian H
#     H =   Σ_i  J1(i)   * n_{i}
#         + Σ_ij J2(i,j) * n_{i} * n_{i+j}
#         + Σ_i  J3(i)   * n_{i} * n_{i+1} * n_{i+2}
#
#     J1 = Random(J1_mean,J1_wdth) * exp(-|i-j|/xi) with |i-j| = 0 since i == j
#     J2 = Random(J2_mean,J2_wdth) * exp(-|i-j|/xi) with |i-j| = r = 0,1,2,3...L-1 since i < j
#     J3 = Random(J3_mean,J3_wdth) * exp(-|i-j|/xi) with |i-j| = 2 since i + 2 = j
# If xi == 1, then the exponential factors are
#             * exp(0)  = 1 for J1,
#             * exp(-1) = 0.367 for J2 (nearest neighbors), and
#             * exp(-2) = 0.135 for J3

lbit.J1_mean                      = 0.00                              # Constant offset for on-site
lbit.J2_mean                      = 0.00                              # Constant offset for two-body interaction
lbit.J3_mean                      = 0.00                              # Constant offset for three-body interaction
lbit.J1_wdth                      = 1.00                              # Width of the distribution for on-site interactions.
lbit.J2_wdth                      = 1.00                              # Width of the distribution for two-body interaction.
lbit.J3_wdth                      = 1.00                              # Width of the distribution for three-body interaction.
lbit.J2_span                      = -1                                # Maximum allowed range for pairwise interactions, |i-j| <= J2_span. Use -1 for infinite. Note that J2_span + 1 MPOs are used
lbit.xi_Jcls                      = 1.00                              # Exp. decay rate xi of interactions: exp(-|i-j|/xi_Jcls) * Random(mean,wdth)
lbit.spin_dim                     = 2                                 # Spin dimension
lbit.distribution                 = "normal"                          # Random distribution for interaction strengths
lbit.u_depth                      = 16                                # Number of layers in the unitary circuit which transforms lbit <-> physical space
lbit.u_fmix                       = 0.2                               # Mixing factor for the gates in the unitary circuit
lbit.u_lambda                     = 1.0                               # lambda parameter used in the Hermitian matrix for the unitary circuit gates: controls the size of the sz_i*sz_j terms
lbit.u_wkind                      = "EXPDECAY"                        # Weights w_i in the unitary 2-site gates. Choose [IDENTITY, EXPDECAY] for 1 or exp(-2|h[i] - h[i+1]|), h are onsite fields in the Hamiltonian
lbit.u_mkind                      = "MATRIX_V3"                       # MATRIX_(V1|V2|V3) controls the kind of Hermitian matrix used in the unitary circuit gates
lbit.testarr                      = [1.5,0.0,0.0]                     # A comment string

[idmrg] # Settings for the infinite DMRG algorithm
on                                 = false                             # Turns iDMRG simulation on/off.
max_iters                          = 500                               # Maximum number of iDMRG iterations before forced termination
bond_max                           = 64                                # Bond dimension of the current position (maximum number of singular values to keep in SVD).
bond_init                          = 8                                 # Initial bond dimension limit. Only used when bond_grow == true.
print_freq                         = 1                                 # Print frequency for console output. In units of iterations.  (0 = off).


[itebd] # Settings for the imaginary-time infinite TEBD algorithm
on                                 = false                             # Turns iTEBD simulation on/off.
max_iters                          = 50                                # Maximum number of iTEBD iterations before forced termination
time_step_init_real                = 0.1                               # Real part of initial time step delta_t
time_step_init_imag                = 0.0                               # Imag part of initial time step delta_t
time_step_min                      = 0.0001                            # (Absolute value) Minimum and final time step for iTEBD time evolution.
suzuki_order                       = 4                                 # Order of the suzuki trotter decomposition (1,2 or 4)
bond_max                           = 16                                # Bond dimension of the current position (maximum number of singular values to keep in SVD).
bond_init                          = 16                                # Initial bond dimension limit. Only used when bond_grow == true.
print_freq                         = 1                                 # Print frequency for console output. In units of iterations. (0 = off).

[fdmrg] # Settings for the finite DMRG algorithm
on                                 = false                             # Turns fdmrg simulation on/off.
max_iters                          = 30                                # Max number of iterations. One iterations moves L steps.
min_iters                          = 6                                 # Min number of iterations. One iterations moves L steps.
bond_max                           = 128                               # Bond dimension of the current position (maximum number of singular values to keep in SVD).
bond_init                          = 16                                # Initial bond dimension limit. Only used when bond_grow == true.
print_freq                         = 1                                 # Print frequency for console output. In units of iterations. (0 = off).
store_wavefn                       = false                             # Whether to store the wavefunction. Runs out of memory quick, recommended is false for max_length > 14

[flbit] # Settings for the finite l-bit algorithm
on                                 = true                              # Turns flbit simulation on/off.
max_iters                          = 5000                              # Max number of iterations. One iterations moves L steps.
min_iters                          = 1                                 # Min number of iterations. One iterations moves L steps.
use_swap_gates                     = true                              # Use gate swapping for pairwise long-range interactions rather than building a large multisite operator
use_mpo_circuit                    = false                             # Cast the unitary circuit to compressed mpo form (this is not generally faster or more accurate, but good for testing)
bond_max                           = 8192                              # Bond dimension of the current position (maximum number of singular values to keep in SVD).
bond_init                          = 16                                # Initial bond dimension limit. Used during iter <= 1 or when bond_grow == true, or starting from an entangled state
time_scale                         = "LOGSPACED"                       # Choose linear or logarithmically spaced time points (LINSPACED|LOGSPACED)
time_start_real                    = 1e-1                              # Starting time point (real)
time_start_imag                    = 0                                 # Starting time point (imag)
time_final_real                    = 1e9                               # Finishing time point (real)
time_final_imag                    = 0                                 # Finishing time point (imag)
time_num_steps                     = 200                               # Number of steps from start to finish. Start and final times are included
print_freq                         = 1                                 # Print frequency for console output. In units of iterations. (0 = off).
store_wavefn                       = false                             # Whether to store the wavefunction. Runs out of memory quick, recommended is false for max_length > 14

# Settings for calculating the characteristic length-scale of lbits
cls.num_rnd_circuits              = 1                                 # Calculate the characteristic length-scale for this many realizations of the unitary circuit
cls.exit_when_done                = false                             # If true, the program exits after calculating cls. Otherwise, it starts the time evolution as usual
cls.randomize_hfields             = false                             # Randomize the on-site fields of the Hamiltonian that goes into each realization of the unitary circuits
cls.mpo_circuit_switchdepth       = 10                                # Cast the unitary circuit to an approximate compressed MPO form when the circuit depth (u_depth) is this value or more
cls.mpo_circuit_svd_bondlim       = 20                                # The bond dimension limit used in the SVD when casting the circuit to compressed MPO form (default=20)
cls.mpo_circuit_svd_trnclim       = 1e-14                             # The truncation error limit used in the SVD when casting the circuit to compressed MPO form

# Settings for calculating the averaged one-particle density matrix
opdm.num_rps                      = 10                                # Number of random product states (zero magnetization) to average over ( <=0 to disable)
opdm.exit_when_done               = false                             # If true, the program exits after calculating the opdm. Otherwise, it starts the time evolution as usual


[xdmrg] # Settings for the finite excited-state DMRG algorithm
on                                 = false                             # Turns xDMRG simulation on/off.
max_iters                          = 5000                              # Max number of iterations. One iterations moves L steps.
min_iters                          = 4                                 # Min number of iterations. One iterations moves L steps.
bond_max                           = 2048                              # Bond dimension of the current position (maximum number of singular values to keep in SVD).
bond_init                          = 8                                 # Initial bond dimension limit. Used during iter <= 1 or when bond_grow == true, or starting from an entangled state
opt_overlap_iters                  = 2                                 # Number of initial iterations selecting the candidate state with best overlap to the current state
opt_overlap_bond_lim               = 8                                 # Bond limit during initial OVERLAP optimization. set to <= 0 for unlimited
opt_subspace_iters                 = 0                                 # Number of iterations using the subspace optimization of variance, after the overlap iterations
opt_subspace_bond_lim              = 32                                # Bond limit during initial SUBSPACE optimization. set to <= 0 for unlimited
print_freq                         = 1                                 # Print frequency for console output. In units of iterations. (0 = off).
energy_density_target              = 0.5                               # Target energy in [0-1], where 0.5 means middle of spectrum.
energy_density_window              = 0.5                               # Accept states inside of energy_tgt_per_site +- energy_dens_window.
max_states                         = 1                                 # Max number of random states to find using xDMRG on a single disorder realization
store_wavefn                       = false                             # Whether to store the wavefunction. Runs out of memory quick, recommended is false for max_length > 14
finish_if_entanglm_saturated       = false                             # Finish early as soon as entanglement has saturated
finish_if_variance_saturated       = false                             # Finish early as soon as energy variance has saturated
