cmake_minimum_required(VERSION 3.12)
project(tests)
file(GLOB TESTS "*.cpp")
foreach (test ${TESTS})
    get_filename_component(test_src ${test} NAME)
    get_filename_component(test_nwe ${test} NAME_WE)
    set(test_tgt dmrg-${test_nwe})
    include(source_lists/${test_nwe}.txt)
    add_executable(${test_tgt} ${test_src} ${test_inc})
    target_link_libraries(${test_tgt} PUBLIC ${test_lnk})
    set_target_properties(${test_tgt} PROPERTIES LINK_WHAT_YOU_USE TRUE)
    target_include_directories(${test_tgt} PRIVATE ${CMAKE_SOURCE_DIR}/source)
    target_compile_definitions(${test_tgt} PRIVATE TEST_MATRIX_DIR="${PROJECT_SOURCE_DIR}/testmatrices")
    add_test(NAME ${test_tgt} WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} COMMAND ${test_tgt})
    if (MSVC)
        set_target_properties(${test_tgt} PROPERTIES LINK_FLAGS "/ignore:4099")
    endif ()
    if (DMRG_ENABLE_COVERAGE)
        target_compile_options(${test_tgt} PRIVATE --coverage)
        target_link_options(${test_tgt} PRIVATE --coverage)
    endif ()
    list(APPEND test_tgt_list ${test_tgt})
    target_link_libraries(${test_tgt} PUBLIC deps flags)
    # Speed up compilation with precompiled headers
    target_link_precompiled_headers(${test_tgt})
endforeach ()


add_custom_target(dmrg-test-all
        COMMENT "Building tests"
        DEPENDS ${test_tgt_list}
        )
set(dmrg-test-list ${test_tgt_list} PARENT_SCOPE)

# Speed up compilation with ccache
if(DMRG_ENABLE_CCACHE)
    find_program(CCACHE_PROGRAM ccache)
    if(CCACHE_PROGRAM)
        foreach (tgt ${test_tgt_list})
            set_target_properties(${tgt} PROPERTIES CXX_COMPILER_LAUNCHER ${CCACHE_PROGRAM})
        endforeach()
        message(STATUS "Tests using ccache ${CCACHE_PROGRAM}")
        if(DMRG_ENABLE_PCH AND COMMAND target_precompile_headers)
            message(DEBUG "Detected ccache + pch: Remember to set --> sloppiness = include_file_mtime,pch_defines,time_macros <-- in your ccache.conf")
        endif()
    else()
        message(STATUS "ccache program could not be found")
    endif()
endif()

