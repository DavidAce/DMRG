ID         = $(Process)
NAME       = mbl
universe   = vanilla
executable = ../build/Release/DMRG++
arguments  = $(inputfiles)




########################################################
# List your CPU, MEMORY and DISK requirements below.
# Note that numeric requirements are not enclosed by "".
# * cpus are the number of
# * memory in units of MB
# * disk in units of MB
########################################################
request_cpus   = 1
request_memory = 1000
request_disk   = 200



########################################################
# List your requirements below. Uncomment to activate.
# Note that numeric requirements are not enclosed by "".
########################################################
#requirements = TARGET.Machine == "Dell-T7400"
#requirements = $(requirements) && TARGET.OpSysAndVer    == "Ubuntu18"
#requirements = $(requirements) && TARGET.OpSysName      == "Ubuntu"
#requirements = $(requirements) && TARGET.OpSysMajorVer  == 18
#requirements = $(requirements) && TARGET.Arch           == "X86_64"
#requirements = $(requirements) && TARGET.OpSys          == "LINUX"



#########################################################
# Use lines below when there is no shared NFS filesystem
#########################################################
#should_transfer_files = yes
#when_to_transfer_output = on_exit_or_evict
#transfer_input_files = $(inputfiles)
#transfer_output_files = output/
#transfer_output_remaps = "output.h5 = ../output/output_$(ID).h5"


###############################################################################################
# getenv = True will copy the environment variables of the submit machines to the other nodes
# environment = "myvar=someval" will set the environment variable at the node
# Note that file locking is not working on NFS so you must disable it on HDF5.
# Do that with
#               environment = "HDF5_USE_FILE_LOCKING=FALSE"
################################################################################################
#environment = "HDF5_USE_FILE_LOCKING=FALSE"

getenv = true

logsplit = split($(inputfiles),'/.')
logbase  = logsplit[1]

log        = logs/$(logbase).log
output     = logs/$(logbase).out
error      = logs/$(logbase).error
queue inputfiles matching files input/$(NAME)_*.cfg
