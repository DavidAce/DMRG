<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classclass__arpackpp__wrapper" kind="class" language="C++" prot="public">
    <compoundname>class_arpackpp_wrapper</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classclass__arpackpp__wrapper_1af9af5882f06abec3f1b30a2916b12c5f" prot="private" static="no">
        <type>std::map&lt; arpack::Ritz, std::string &gt;</type>
        <definition>using class_arpackpp_wrapper::MapType =  std::map&lt;arpack::Ritz, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>MapType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="31" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classclass__arpackpp__wrapper_1ad8a2ab2dc45d0af934b2c431fb236c2c" prot="private" static="no">
        <type>Eigen::Matrix&lt; T, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
        <definition>using class_arpackpp_wrapper::MatrixType =  Eigen::Matrix&lt;T,Eigen::Dynamic, Eigen::Dynamic&gt;</definition>
        <argsstring></argsstring>
        <name>MatrixType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="36" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classclass__arpackpp__wrapper_1afd4df720398daf185d9d4c59a160f382" prot="private" static="no">
        <type>Eigen::Matrix&lt; T, Eigen::Dynamic, 1 &gt;</type>
        <definition>using class_arpackpp_wrapper::VectorType =  Eigen::Matrix&lt;T,Eigen::Dynamic, 1&gt;</definition>
        <argsstring></argsstring>
        <name>VectorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="38" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classclass__arpackpp__wrapper_1ab0f2dea3c106d51065a8082226319f41" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_arpackpp_wrapper::eigThreshold</definition>
        <argsstring></argsstring>
        <name>eigThreshold</name>
        <initializer>= 1e-14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="28" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__arpackpp__wrapper_1a95aa18a73d988c7dc78a810082f44885" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int class_arpackpp_wrapper::eigMaxIter</definition>
        <argsstring></argsstring>
        <name>eigMaxIter</name>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="29" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__arpackpp__wrapper_1aab81ac891ec2f25e32260e8974a67317" prot="private" static="no" mutable="no">
        <type>MapType</type>
        <definition>MapType class_arpackpp_wrapper::RitzToString</definition>
        <argsstring></argsstring>
        <name>RitzToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="32" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classclass__arpackpp__wrapper_1a8bf26a326d7ebd7853493dc6398405a0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>return_eigenvectors</declname>
            <defname>return_eigenvectors</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto class_arpackpp_wrapper::retrieve_solution</definition>
        <argsstring>(Derived &amp;solution, int nev)</argsstring>
        <name>retrieve_solution</name>
        <param>
          <type>Derived &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="43" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="43" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classclass__arpackpp__wrapper_1acd082b643939effd763e627a8a76f112" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>class_arpackpp_wrapper::class_arpackpp_wrapper</definition>
        <argsstring>()</argsstring>
        <name>class_arpackpp_wrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="79" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="79" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classclass__arpackpp__wrapper_1a1be729722627d19fabd5f1f297f748d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>arpack::Form</type>
            <declname>form</declname>
            <defname>form</defname>
          </param>
          <param>
            <type>arpack::Ritz</type>
            <declname>ritz</declname>
            <defname>ritz</defname>
          </param>
          <param>
            <type>arpack::Side</type>
            <declname>side</declname>
            <defname>side</defname>
            <defval>arpack::Side::R</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>return_eigenvectors</declname>
            <defname>return_eigenvectors</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename Scalar</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto class_arpackpp_wrapper::solve_dominant</definition>
        <argsstring>(Scalar *data, int rows, int cols, const int nev)</argsstring>
        <name>solve_dominant</name>
        <param>
          <type>Scalar *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_arpackpp_wrapper.h" line="97" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="97" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="source/general/class_arpackpp_wrapper.h" line="26" column="1" bodyfile="source/general/class_arpackpp_wrapper.h" bodystart="26" bodyend="130"/>
    <listofallmembers>
      <member refid="classclass__arpackpp__wrapper_1acd082b643939effd763e627a8a76f112" prot="public" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>class_arpackpp_wrapper</name></member>
      <member refid="classclass__arpackpp__wrapper_1a95aa18a73d988c7dc78a810082f44885" prot="private" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>eigMaxIter</name></member>
      <member refid="classclass__arpackpp__wrapper_1ab0f2dea3c106d51065a8082226319f41" prot="private" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>eigThreshold</name></member>
      <member refid="classclass__arpackpp__wrapper_1af9af5882f06abec3f1b30a2916b12c5f" prot="private" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>MapType</name></member>
      <member refid="classclass__arpackpp__wrapper_1ad8a2ab2dc45d0af934b2c431fb236c2c" prot="private" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>MatrixType</name></member>
      <member refid="classclass__arpackpp__wrapper_1a8bf26a326d7ebd7853493dc6398405a0" prot="private" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>retrieve_solution</name></member>
      <member refid="classclass__arpackpp__wrapper_1aab81ac891ec2f25e32260e8974a67317" prot="private" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>RitzToString</name></member>
      <member refid="classclass__arpackpp__wrapper_1a1be729722627d19fabd5f1f297f748d6" prot="public" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>solve_dominant</name></member>
      <member refid="classclass__arpackpp__wrapper_1afd4df720398daf185d9d4c59a160f382" prot="private" virt="non-virtual"><scope>class_arpackpp_wrapper</scope><name>VectorType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
