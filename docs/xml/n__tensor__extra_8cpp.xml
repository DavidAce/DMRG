<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="n__tensor__extra_8cpp" kind="file" language="C++">
    <compoundname>n_tensor_extra.cpp</compoundname>
    <includes refid="n__tensor__extra_8h" local="no">n_tensor_extra.h</includes>
    <incdepgraph>
      <node id="234">
        <label>iterator</label>
      </node>
      <node id="232">
        <label>Eigen/Core</label>
      </node>
      <node id="233">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="231">
        <label>n_tensor_extra.h</label>
        <link refid="n__tensor__extra_8h_source"/>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="235">
        <label>vector</label>
      </node>
      <node id="236">
        <label>iostream</label>
      </node>
      <node id="230">
        <label>source/n_tensor_extra.cpp</label>
        <link refid="n_tensor_extra.cpp"/>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_textra">Textra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>6/7/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;n_tensor_extra.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_textra" kindref="compound">Textra</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor3<sp/>reshape(MatrixType<sp/>matrix,<sp/>array3<sp/>dims)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::TensorMap&lt;Tensor3&gt;(matrix.data(),<sp/>dims);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor2<sp/>asDiagonal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::TensorRef&lt;const<sp/>Tensor1&gt;<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatrixType<sp/>mat<sp/>=<sp/>Eigen::Map&lt;const<sp/>VectorType&gt;(tensor.data(),<sp/>tensor.size()).asDiagonal();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::TensorMap&lt;Tensor2&gt;(mat.data(),<sp/>mat.rows(),<sp/>mat.cols());</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor2<sp/>asInverseDiagonal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::TensorRef&lt;const<sp/>Tensor1&gt;<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asDiagonal((Tensor1)tensor.inverse());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor1<sp/>matrix_to_tensor1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;const<sp/>MatrixType&gt;<sp/>matrix)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::TensorMap&lt;const_Tensor1&gt;(matrix.data(),<sp/>array1{matrix.size()});</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor2<sp/>matrix_to_tensor2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;const<sp/>MatrixType&gt;<sp/>matrix,<sp/>array2<sp/>dims)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::TensorMap&lt;const_Tensor2&gt;(matrix.data(),<sp/>dims);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor2<sp/>matrix_to_tensor2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;const<sp/>MatrixType&gt;<sp/>matrix)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::TensorMap&lt;const_Tensor2&gt;(matrix.data(),<sp/>array2{matrix.rows(),matrix.cols()});</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor3<sp/>matrix_to_tensor3(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Ref&lt;const<sp/>MatrixType&gt;<sp/>matrix,<sp/>array3<sp/>dims)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::TensorMap&lt;const_Tensor3&gt;(matrix.data(),<sp/>dims);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixType<sp/>tensor2_to_matrix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor2<sp/>&amp;tensor)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;const<sp/>MatrixType&gt;(tensor.data(),<sp/>tensor.dimension(0),<sp/>tensor.dimension(1));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="source/n_tensor_extra.cpp"/>
  </compounddef>
</doxygen>
