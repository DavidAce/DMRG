<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classclass__eig" kind="class" language="C++" prot="public">
    <compoundname>class_eig</compoundname>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Scalar</declname>
        <defname>Scalar</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classclass__eig_1a982f6238df0e9dd15e75a98ba40a0224" prot="private" static="no">
        <type>Eigen::Map&lt; const Eigen::Matrix&lt; Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor &gt; &gt;</type>
        <definition>using class_eig&lt; Scalar &gt;::MatMapR =  Eigen::Map&lt;const Eigen::Matrix&lt;Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MatMapR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="29" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classclass__eig_1a954c0b9831830e0671ffbe47f4ff2a63" prot="private" static="no">
        <type>Eigen::Map&lt; const Eigen::Matrix&lt; Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor &gt; &gt;</type>
        <definition>using class_eig&lt; Scalar &gt;::MatMapL =  Eigen::Map&lt;const Eigen::Matrix&lt;Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MatMapL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="30" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classclass__eig_1a9d0ead9f5a95d2938aca677614de6f06" prot="private" static="no">
        <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor &gt;</type>
        <definition>using class_eig&lt; Scalar &gt;::MatrixType =  Eigen::Matrix&lt;Scalar, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor&gt;</definition>
        <argsstring></argsstring>
        <name>MatrixType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="31" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classclass__eig_1adbb058ac1f9b07660a9acd795b015dae" prot="private" static="no">
        <type>std::pair&lt; Textra::Tensor&lt; Scalar, rank1 &gt;, Textra::Tensor&lt; Scalar, rank2 &gt; &gt;</type>
        <definition>using class_eig&lt; Scalar &gt;::TensorPair =  std::pair&lt;Textra::Tensor&lt;Scalar,rank1&gt;, Textra::Tensor&lt;Scalar,rank2&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>TensorPair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="33" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classclass__eig_1ad23261619a2bade2919e617adde1a574" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_eig&lt; Scalar &gt;::eigThreshold</definition>
        <argsstring></argsstring>
        <name>eigThreshold</name>
        <initializer>= 1e-12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="25" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__eig_1a19faaf7ee07692793e9b307b7fff98f3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int class_eig&lt; Scalar &gt;::eigMaxIter</definition>
        <argsstring></argsstring>
        <name>eigMaxIter</name>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="26" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__eig_1afefa80178e3ffb0bea4dd39370e71eca" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int class_eig&lt; Scalar &gt;::ncv</definition>
        <argsstring></argsstring>
        <name>ncv</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="27" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classclass__eig_1a7f8bfe4839200b4b807064037cea267e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void class_eig&lt; Scalar &gt;::setThreshold</definition>
        <argsstring>(double new_eigThreshold)</argsstring>
        <name>setThreshold</name>
        <param>
          <type>double</type>
          <declname>new_eigThreshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="37" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classclass__eig_1a87ddcf350d7fe30ff75644778549c8c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void class_eig&lt; Scalar &gt;::setMaxIter</definition>
        <argsstring>(double new_eigMaxIter)</argsstring>
        <name>setMaxIter</name>
        <param>
          <type>double</type>
          <declname>new_eigMaxIter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="38" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classclass__eig_1a3ffbdb9901ea279b3102f667ba8941ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void class_eig&lt; Scalar &gt;::setncv</definition>
        <argsstring>(double new_ncv)</argsstring>
        <name>setncv</name>
        <param>
          <type>double</type>
          <declname>new_ncv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="39" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classclass__eig_1a514d3579eefda1fec6991a71fe2962c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Textra::Tensor&lt; Scalar, 2 &gt;</type>
        <definition>Textra::Tensor&lt; Scalar, 2 &gt; class_eig&lt; Scalar &gt;::squareRoot</definition>
        <argsstring>(const Textra::Tensor&lt; Scalar, 2 &gt; &amp;tensor)</argsstring>
        <name>squareRoot</name>
        <param>
          <type>const Textra::Tensor&lt; Scalar, 2 &gt; &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="41" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classclass__eig_1abec74ccbbfe2dd5ff89307bd158e3d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TensorPair&lt; 2, 2 &gt;</type>
        <definition>class_eig&lt; Scalar &gt;::template TensorPair&lt; 2, 2 &gt; class_eig&lt; Scalar &gt;::squareRoot_w_inverse</definition>
        <argsstring>(const Textra::Tensor&lt; Scalar, 2 &gt; &amp;tensor)</argsstring>
        <name>squareRoot_w_inverse</name>
        <param>
          <type>const Textra::Tensor&lt; Scalar, 2 &gt; &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="42" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classclass__eig_1adc300f4829a44fe9c4e0765dd3f1ade0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TensorPair&lt; 2, 1 &gt;</type>
        <definition>class_eig&lt; Scalar &gt;::template TensorPair&lt; 2, 1 &gt; class_eig&lt; Scalar &gt;::solve_gen</definition>
        <argsstring>(const Textra::Tensor&lt; Scalar, 2 &gt; &amp;tensor)</argsstring>
        <name>solve_gen</name>
        <param>
          <type>const Textra::Tensor&lt; Scalar, 2 &gt; &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="43" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classclass__eig_1a53b022f41a67a3ec57e6ab7dddf45da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TensorPair&lt; 2, 1 &gt;</type>
        <definition>class_eig&lt; Scalar &gt;::template TensorPair&lt; 2, 1 &gt; class_eig&lt; Scalar &gt;::solve_sym</definition>
        <argsstring>(const Textra::Tensor&lt; Scalar, 2 &gt; &amp;tensor)</argsstring>
        <name>solve_sym</name>
        <param>
          <type>const Textra::Tensor&lt; Scalar, 2 &gt; &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="44" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classclass__eig_1aad55151f2e8e102440f062d0048d2fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Spectra::Form</type>
            <declname>form</declname>
            <defname>form</defname>
          </param>
          <param>
            <type>Spectra::Ritz</type>
            <declname>mode</declname>
            <defname>mode</defname>
          </param>
          <param>
            <type>Spectra::Side</type>
            <declname>side</declname>
            <defname>side</defname>
            <defval>Spectra::Side::R</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto class_eig&lt; Scalar &gt;::solve_dominant</definition>
        <argsstring>(const Textra::Tensor&lt; Scalar, 2 &gt; &amp;tensor, const int num, Textra::array2 size)</argsstring>
        <name>solve_dominant</name>
        <param>
          <type>const Textra::Tensor&lt; Scalar, 2 &gt; &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>Textra::array2</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/class_eig_spectra_wrapper.h" line="47" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="98" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="source/general/class_eig_spectra_wrapper.h" line="23" column="1" bodyfile="source/general/class_eig_spectra_wrapper.h" bodystart="23" bodyend="49"/>
    <listofallmembers>
      <member refid="classclass__eig_1a19faaf7ee07692793e9b307b7fff98f3" prot="private" virt="non-virtual"><scope>class_eig</scope><name>eigMaxIter</name></member>
      <member refid="classclass__eig_1ad23261619a2bade2919e617adde1a574" prot="private" virt="non-virtual"><scope>class_eig</scope><name>eigThreshold</name></member>
      <member refid="classclass__eig_1a954c0b9831830e0671ffbe47f4ff2a63" prot="private" virt="non-virtual"><scope>class_eig</scope><name>MatMapL</name></member>
      <member refid="classclass__eig_1a982f6238df0e9dd15e75a98ba40a0224" prot="private" virt="non-virtual"><scope>class_eig</scope><name>MatMapR</name></member>
      <member refid="classclass__eig_1a9d0ead9f5a95d2938aca677614de6f06" prot="private" virt="non-virtual"><scope>class_eig</scope><name>MatrixType</name></member>
      <member refid="classclass__eig_1afefa80178e3ffb0bea4dd39370e71eca" prot="private" virt="non-virtual"><scope>class_eig</scope><name>ncv</name></member>
      <member refid="classclass__eig_1a87ddcf350d7fe30ff75644778549c8c7" prot="public" virt="non-virtual"><scope>class_eig</scope><name>setMaxIter</name></member>
      <member refid="classclass__eig_1a3ffbdb9901ea279b3102f667ba8941ca" prot="public" virt="non-virtual"><scope>class_eig</scope><name>setncv</name></member>
      <member refid="classclass__eig_1a7f8bfe4839200b4b807064037cea267e" prot="public" virt="non-virtual"><scope>class_eig</scope><name>setThreshold</name></member>
      <member refid="classclass__eig_1aad55151f2e8e102440f062d0048d2fd4" prot="public" virt="non-virtual"><scope>class_eig</scope><name>solve_dominant</name></member>
      <member refid="classclass__eig_1adc300f4829a44fe9c4e0765dd3f1ade0" prot="public" virt="non-virtual"><scope>class_eig</scope><name>solve_gen</name></member>
      <member refid="classclass__eig_1a53b022f41a67a3ec57e6ab7dddf45da8" prot="public" virt="non-virtual"><scope>class_eig</scope><name>solve_sym</name></member>
      <member refid="classclass__eig_1a514d3579eefda1fec6991a71fe2962c3" prot="public" virt="non-virtual"><scope>class_eig</scope><name>squareRoot</name></member>
      <member refid="classclass__eig_1abec74ccbbfe2dd5ff89307bd158e3d80" prot="public" virt="non-virtual"><scope>class_eig</scope><name>squareRoot_w_inverse</name></member>
      <member refid="classclass__eig_1adbb058ac1f9b07660a9acd795b015dae" prot="private" virt="non-virtual"><scope>class_eig</scope><name>TensorPair</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
