<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacern" kind="namespace" language="C++">
    <compoundname>rn</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nmspc__random__numbers_8cpp_1a3ef7cecaf695dc6bd5b521a805cceb98" prot="public" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 rn::rng</definition>
        <argsstring></argsstring>
        <name>rng</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.cpp" line="9" column="1" bodyfile="source/general/nmspc_random_numbers.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nmspc__random__numbers_8h_1a3e9807cd3ac7bb7b0d52e8046fc5d772" prot="public" static="no" mutable="no">
        <type>int const int</type>
        <definition>int const int rn::max</definition>
        <argsstring></argsstring>
        <name>max</name>
        <initializer>{
        std::uniform_int_distribution&lt;&gt;  rand_int(min,max)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.h" line="23" column="1" bodyfile="source/general/nmspc_random_numbers.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nmspc__random__numbers_8cpp_1a7ace7d5a4b63f8332f590564052ced0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayXd</type>
        <definition>ArrayXd rn::random_with_replacement</definition>
        <argsstring>(const ArrayXd &amp;in)</argsstring>
        <name>random_with_replacement</name>
        <param>
          <type>const ArrayXd &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.cpp" line="11" column="1" bodyfile="source/general/nmspc_random_numbers.cpp" bodystart="11" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="nmspc__random__numbers_8cpp_1ac0dffdd0e420abeadea4dfc6bdf54c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArrayXd</type>
        <definition>ArrayXd rn::random_with_replacement</definition>
        <argsstring>(const ArrayXd &amp;in, const int n)</argsstring>
        <name>random_with_replacement</name>
        <param>
          <type>const ArrayXd &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.cpp" line="18" column="1" bodyfile="source/general/nmspc_random_numbers.cpp" bodystart="18" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="nmspc__random__numbers_8cpp_1a5d02c31ce3de37df2bfae4737711dc71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rn::gaussian_truncated</definition>
        <argsstring>(const double lowerLimit, const double upperLimit, const double mean, const double std)</argsstring>
        <name>gaussian_truncated</name>
        <param>
          <type>const double</type>
          <declname>lowerLimit</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>upperLimit</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>std</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.cpp" line="27" column="1" bodyfile="source/general/nmspc_random_numbers.cpp" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="nmspc__random__numbers_8h_1ac966c25e715d2ad43d716db9a111885d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>std::complex&lt; double &gt; rn::__attribute__</definition>
        <argsstring>((hot)) uniform_integer_1()</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(hot)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.h" line="18" column="1" bodyfile="source/general/nmspc_random_numbers.h" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="nmspc__random__numbers_8h_1a505ae1b984e3b3889cd670dcecc42c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>return</type>
        <definition>return rn::rand_int</definition>
        <argsstring>(rng)</argsstring>
        <name>rand_int</name>
        <param>
          <type>rng</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nmspc__random__numbers_8h_1a9c2f32006765f0cd276cf3296f868255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::ArrayXd</type>
        <definition>Eigen::ArrayXd rn::random_with_replacement</definition>
        <argsstring>(const Eigen::ArrayXd &amp;indata)</argsstring>
        <name>random_with_replacement</name>
        <param>
          <type>const Eigen::ArrayXd &amp;</type>
          <declname>indata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nmspc__random__numbers_8h_1ab1ff96fded7890b771bfee2e40b661d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::ArrayXd</type>
        <definition>Eigen::ArrayXd rn::random_with_replacement</definition>
        <argsstring>(const Eigen::ArrayXd &amp;indata, const int num_choose)</argsstring>
        <name>random_with_replacement</name>
        <param>
          <type>const Eigen::ArrayXd &amp;</type>
          <declname>indata</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>num_choose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/general/nmspc_random_numbers.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="source/general/nmspc_random_numbers.cpp" line="8" column="1"/>
  </compounddef>
</doxygen>
