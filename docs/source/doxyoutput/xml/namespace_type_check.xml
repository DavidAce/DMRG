<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespace_type_check" kind="namespace" language="C++">
    <compoundname>TypeCheck</compoundname>
    <innerclass refid="struct_type_check_1_1is__eigen__array" prot="public">TypeCheck::is_eigen_array</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__array_3_01_eigen_1_1_array_3_01_t_00_01rows_00_01cols_00_01_storage_order_01_4_01_4" prot="public">TypeCheck::is_eigen_array&lt; Eigen::Array&lt; T, rows, cols, StorageOrder &gt; &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__matrix" prot="public">TypeCheck::is_eigen_matrix</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__matrix_3_01_eigen_1_1_matrix_3_01_t_00_01rows_00_01cols_00_01_storage_order_01_4_01_4" prot="public">TypeCheck::is_eigen_matrix&lt; Eigen::Matrix&lt; T, rows, cols, StorageOrder &gt; &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__tensor" prot="public">TypeCheck::is_eigen_tensor</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__tensor_3_01_eigen_1_1_tensor_3_01_scalar_00_01rank_00_01storage_00_01_index_type_01_4_01_4" prot="public">TypeCheck::is_eigen_tensor&lt; Eigen::Tensor&lt; Scalar, rank, storage, IndexType &gt; &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1is__specialization" prot="public">TypeCheck::is_specialization</innerclass>
    <innerclass refid="struct_type_check_1_1is__specialization_3_01_ref_3_01_args_8_8_8_01_4_00_01_ref_01_4" prot="public">TypeCheck::is_specialization&lt; Ref&lt; Args... &gt;, Ref &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1is__vector" prot="public">TypeCheck::is_vector</innerclass>
    <innerclass refid="struct_type_check_1_1is__vector_3_01std_1_1vector_3_01_t_01_4_01_4" prot="public">TypeCheck::is_vector&lt; std::vector&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1print__type__and__exit__compile__time" prot="public">TypeCheck::print_type_and_exit_compile_time</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_type_check_1a5c4b13e9f3e58d562c848d4e043b3021" prot="public" static="no">
        <type>decltype(std::declval&lt; T &gt;().data())</type>
        <definition>using TypeCheck::Data_t = typedef decltype(std::declval&lt;T&gt;().data())</definition>
        <argsstring></argsstring>
        <name>Data_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="12" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1a5b48e055ebff354780d37d85b614501c" prot="public" static="no">
        <type>decltype(std::declval&lt; T &gt;().size())</type>
        <definition>using TypeCheck::Size_t = typedef decltype(std::declval&lt;T&gt;().size())</definition>
        <argsstring></argsstring>
        <name>Size_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="13" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1ae5e7bf3df22f575d35d78a45b9a8f54d" prot="public" static="no">
        <type>decltype(std::declval&lt; T &gt;().c_str())</type>
        <definition>using TypeCheck::Cstr_t = typedef decltype(std::declval&lt;T&gt;().c_str())</definition>
        <argsstring></argsstring>
        <name>Cstr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="14" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1a8a65c248e341fece2d466cca8e6c4090" prot="public" static="no">
        <type>decltype(std::declval&lt; T &gt;().imag())</type>
        <definition>using TypeCheck::Imag_t = typedef decltype(std::declval&lt;T&gt;().imag())</definition>
        <argsstring></argsstring>
        <name>Imag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="15" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1afba6d111f934a518472743c1c85aa450" prot="public" static="no">
        <type>typename <ref refid="infinite_2measure_8cpp_1a131d20d737c4fa1cb2d53d136f8c57ea" kindref="member">T::Scalar</ref></type>
        <definition>using TypeCheck::Scal_t = typedef typename T::Scalar</definition>
        <argsstring></argsstring>
        <name>Scal_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="16" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1af7c6e5e9d9492ac1f52808cc0cf82847" prot="public" static="no">
        <type>typename T::value_type</type>
        <definition>using TypeCheck::Valt_t = typedef typename T::value_type</definition>
        <argsstring></argsstring>
        <name>Valt_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="17" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1a7fab9bae09a9a1780d5811a39d65e1ce" prot="public" static="no">
        <type>std::experimental::is_detected&lt; <ref refid="namespace_type_check_1a5c4b13e9f3e58d562c848d4e043b3021" kindref="member">Data_t</ref>, T &gt;</type>
        <definition>using TypeCheck::has_member_data = typedef std::experimental::is_detected&lt;Data_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_member_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="19" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1adf9e7896f673211b9a8e09aa6a2f7d50" prot="public" static="no">
        <type>std::experimental::is_detected&lt; <ref refid="namespace_type_check_1a5b48e055ebff354780d37d85b614501c" kindref="member">Size_t</ref>, T &gt;</type>
        <definition>using TypeCheck::has_member_size = typedef std::experimental::is_detected&lt;Size_t, T&gt;</definition>
        <argsstring></argsstring>
        <name>has_member_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="20" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1a9c01daf500c30c3a32e465c2903fa19a" prot="public" static="no">
        <type>std::experimental::is_detected&lt; <ref refid="namespace_type_check_1afba6d111f934a518472743c1c85aa450" kindref="member">Scal_t</ref>, T &gt;</type>
        <definition>using TypeCheck::has_member_scalar = typedef std::experimental::is_detected&lt;Scal_t , T&gt;</definition>
        <argsstring></argsstring>
        <name>has_member_scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="21" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1a11011470526cd2f482b0a2c34ee32a69" prot="public" static="no">
        <type>std::experimental::is_detected&lt; <ref refid="namespace_type_check_1af7c6e5e9d9492ac1f52808cc0cf82847" kindref="member">Valt_t</ref>, T &gt;</type>
        <definition>using TypeCheck::has_member_value_type = typedef std::experimental::is_detected&lt;Valt_t , T&gt;</definition>
        <argsstring></argsstring>
        <name>has_member_value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="22" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1ab056ae61761e6fdaded77a48d75dbf95" prot="public" static="no">
        <type>std::experimental::is_detected&lt; <ref refid="namespace_type_check_1ae5e7bf3df22f575d35d78a45b9a8f54d" kindref="member">Cstr_t</ref>, T &gt;</type>
        <definition>using TypeCheck::has_member_c_str = typedef std::experimental::is_detected&lt;Cstr_t , T&gt;</definition>
        <argsstring></argsstring>
        <name>has_member_c_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="23" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_type_check_1add291358dc6306095fdf5a45f3e750a9" prot="public" static="no">
        <type>std::experimental::is_detected&lt; <ref refid="namespace_type_check_1a8a65c248e341fece2d466cca8e6c4090" kindref="member">Imag_t</ref>, T &gt;</type>
        <definition>using TypeCheck::has_member_imag = typedef std::experimental::is_detected&lt;Imag_t , T&gt;</definition>
        <argsstring></argsstring>
        <name>has_member_imag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="24" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_type_check_1a9db1936a588f77f1f13e313da75f9529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool TypeCheck::is_eigen_matrix_or_array</definition>
        <argsstring>()</argsstring>
        <name>is_eigen_matrix_or_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="50" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespace_type_check_1a4f1389c4b1ca35b5c941cfdc99169149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr std::string_view</type>
        <definition>constexpr std::string_view TypeCheck::type_name</definition>
        <argsstring>()</argsstring>
        <name>type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="69" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" bodystart="69" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h" line="11" column="1"/>
  </compounddef>
</doxygen>
