<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classclass__model__factory" kind="class" language="C++" prot="public">
    <compoundname>class_model_factory</compoundname>
    <includes refid="class__model__factory_8h" local="no">class_model_factory.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classclass__model__factory_1abcf6ff6ee79d5ef9af4a219d2ade32d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classclass__model__base" kindref="compound">class_model_base</ref> &gt;</type>
        <definition>std::shared_ptr&lt; class_model_base &gt; class_model_factory::create_mpo</definition>
        <argsstring>(size_t position, std::string model_type_str)</argsstring>
        <name>create_mpo</name>
        <param>
          <type>size_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>model_type_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.h" line="15" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.cpp" bodystart="14" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classclass__model__factory_1a81bfc4c1c7577deaafb6344e5f5d0c53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="classclass__model__base" kindref="compound">class_model_base</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;class_model_base&gt; class_model_factory::create_mpo</definition>
        <argsstring>(size_t position, std::string model_type_str, T... args)</argsstring>
        <name>create_mpo</name>
        <param>
          <type>size_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>model_type_str</declname>
        </param>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.h" line="18" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.h" bodystart="18" bodyend="22"/>
        <references refid="classclass__model__factory_1abcf6ff6ee79d5ef9af4a219d2ade32d3" compoundref="class__model__factory_8cpp" startline="14" endline="30">create_mpo</references>
        <references refid="classclass__model__factory_1a9715c828aa0ede548f52d530e11f4929" compoundref="class__model__factory_8cpp" startline="34" endline="36">clone</references>
      </memberdef>
      <memberdef kind="function" id="classclass__model__factory_1a9715c828aa0ede548f52d530e11f4929" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classclass__model__base" kindref="compound">class_model_base</ref> &gt;</type>
        <definition>std::shared_ptr&lt; class_model_base &gt; class_model_factory::clone</definition>
        <argsstring>(std::shared_ptr&lt; class_model_base &gt; other)</argsstring>
        <name>clone</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classclass__model__base" kindref="compound">class_model_base</ref> &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.h" line="24" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.h" line="13" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.h" bodystart="13" bodyend="25"/>
    <listofallmembers>
      <member refid="classclass__model__factory_1a9715c828aa0ede548f52d530e11f4929" prot="public" virt="non-virtual"><scope>class_model_factory</scope><name>clone</name></member>
      <member refid="classclass__model__factory_1abcf6ff6ee79d5ef9af4a219d2ade32d3" prot="public" virt="non-virtual"><scope>class_model_factory</scope><name>create_mpo</name></member>
      <member refid="classclass__model__factory_1a81bfc4c1c7577deaafb6344e5f5d0c53" prot="public" virt="non-virtual"><scope>class_model_factory</scope><name>create_mpo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
