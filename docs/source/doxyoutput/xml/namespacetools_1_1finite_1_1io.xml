<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacetools_1_1finite_1_1io" kind="namespace" language="C++">
    <compoundname>tools::finite::io</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1acdc713a846e83777d81ad198f32ab9ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_all_state</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>write_all_state</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="129" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="22" bodyend="44"/>
        <references refid="namespacesettings_1_1hdf5_1ad844524c5a813073cc1cd8aed6e07537" compoundref="nmspc__settings_8h" startline="139">settings::hdf5::storage_level</references>
        <references refid="nmspc__settings_8h_1ab7c7349414d78d7a1f590dc61f9594adab50339a10e1de285ac99d4c3990b8693">NONE</references>
        <references refid="nmspc__settings_8h_1ab7c7349414d78d7a1f590dc61f9594adaf8589806bbf66241917092b2a6e18c6f">LIGHT</references>
        <references refid="namespacetools_1_1finite_1_1io_1a39adb979856f2d742ec2cd369592b7bc" compoundref="finite_2h5pp_8cpp" startline="63" endline="70">write_bond_matrix</references>
        <references refid="namespacetools_1_1finite_1_1io_1a086dd348f818387215dd3f8faa4ab15d" compoundref="finite_2h5pp_8cpp" startline="101" endline="120">write_hamiltonian_params</references>
        <references refid="nmspc__settings_8h_1ab7c7349414d78d7a1f590dc61f9594ada1e23852820b9154316c7c06e2b7ba051">NORMAL</references>
        <references refid="namespacetools_1_1finite_1_1io_1a271379071bc831aa82387359c13aa361" compoundref="finite_2h5pp_8cpp" startline="47" endline="60">write_bond_matrices</references>
        <references refid="nmspc__settings_8h_1ab7c7349414d78d7a1f590dc61f9594adaba7de5bc6888294e5884b024a4c894f1">FULL</references>
        <references refid="namespacetools_1_1finite_1_1io_1a143466d428874b3639a446a4c1f06be7" compoundref="finite_2h5pp_8cpp" startline="72" endline="82">write_full_mps</references>
        <references refid="namespacetools_1_1finite_1_1io_1a373f60a0cbc36580cb4aa2c44fb80805" compoundref="finite_2h5pp_8cpp" startline="87" endline="99">write_full_mpo</references>
        <references refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" compoundref="class__finite__state_8cpp" startline="46" endline="46">class_finite_state::get_position</references>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="45" endline="45">class_finite_state::get_length</references>
        <references refid="namespacesettings_1_1model_1a47bbe476211c0ae22d348e80df47193b" compoundref="nmspc__settings_8h" startline="35">settings::model::model_type</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1a271379071bc831aa82387359c13aa361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_bond_matrices</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>write_bond_matrices</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes down all the &quot;Lambda&quot; bond matrices (singular value matrices), so we can obtain the entanglement spectrum easily. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="130" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="47" bodyend="60"/>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="45" endline="45">class_finite_state::get_length</references>
        <references refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" compoundref="class__finite__state_8cpp" startline="154" endline="159">class_finite_state::get_L</references>
        <references refid="classclass__finite__state_1ac698101229f4b0af09c22a12a45fc5c1" compoundref="class__finite__state_8h" startline="119">class_finite_state::truncation_error</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1a39adb979856f2d742ec2cd369592b7bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_bond_matrix</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>write_bond_matrix</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes down all the &quot;Lambda&quot; bond matrices (singular value matrices), so we can obtain the entanglement spectrum easily. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="131" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="63" bodyend="70"/>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="45" endline="45">class_finite_state::get_length</references>
        <references refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" compoundref="class__finite__state_8cpp" startline="154" endline="159">class_finite_state::get_L</references>
        <references refid="classclass__finite__state_1ac698101229f4b0af09c22a12a45fc5c1" compoundref="class__finite__state_8h" startline="119">class_finite_state::truncation_error</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1a143466d428874b3639a446a4c1f06be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_full_mps</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>write_full_mps</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes down the full MPS in &quot;L-G-L-G- LC -G-L-G-L&quot; notation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="132" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="72" bodyend="82"/>
        <references refid="namespacetools_1_1finite_1_1io_1a271379071bc831aa82387359c13aa361" compoundref="finite_2h5pp_8cpp" startline="47" endline="60">write_bond_matrices</references>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="45" endline="45">class_finite_state::get_length</references>
        <references refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" compoundref="class__finite__state_8cpp" startline="146" endline="148">class_finite_state::get_G</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1a373f60a0cbc36580cb4aa2c44fb80805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_full_mpo</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>write_full_mpo</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="133" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="87" bodyend="99"/>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="45" endline="45">class_finite_state::get_length</references>
        <references refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" compoundref="class__finite__state_8cpp" startline="125" endline="137">class_finite_state::get_MPO</references>
        <references refid="classclass__model__base_1a0789119b3413f70affbdbc5f7b15e829" compoundref="class__model__base_8cpp" startline="14" endline="20">class_model_base::MPO</references>
        <references refid="classclass__model__base_1aed5208f88cae90c68966c58c1b42526b">class_model_base::get_parameter_values</references>
        <references refid="classclass__model__base_1a2c8ca66dc1a83c1ddb5ea91aec7fe1ed">class_model_base::get_parameter_names</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1a086dd348f818387215dd3f8faa4ab15d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_hamiltonian_params</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>write_hamiltonian_params</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="134" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="101" bodyend="120"/>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="45" endline="45">class_finite_state::get_length</references>
        <references refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" compoundref="class__finite__state_8cpp" startline="125" endline="137">class_finite_state::get_MPO</references>
        <references refid="classclass__model__base_1aed5208f88cae90c68966c58c1b42526b">class_model_base::get_parameter_values</references>
        <references refid="classclass__finite__state_1ad41b34016714e6b3d3aa67368aacbe64" compoundref="class__finite__state_8h" startline="56">class_finite_state::MPO_L</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1aa53d35b4d3e060795763644d4bd91351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_entanglement</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>write_entanglement</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1adce7e1b64a6f8506341d927df05bd7e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_all_measurements</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>write_all_measurements</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="136" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="122" bodyend="135"/>
        <references refid="classclass__finite__state_1abe811f34bf53c45089eb7878f7dccdc4" compoundref="class__finite__state_8cpp" startline="11" endline="26">class_finite_state::do_all_measurements</references>
        <references refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" compoundref="class__finite__state_8h" startline="139">class_finite_state::measurements</references>
        <references refid="structclass__finite__state_1_1_measurements_1a318ad377c472789df9713294b59788f1" compoundref="class__finite__state_8h" startline="122">class_finite_state::Measurements::length</references>
        <references refid="structclass__finite__state_1_1_measurements_1afa6883ebbbbe1bff5f922d499a19aab4" compoundref="class__finite__state_8h" startline="126">class_finite_state::Measurements::norm</references>
        <references refid="structclass__finite__state_1_1_measurements_1aa65086fe9e146d381d987e1fd2941dc8" compoundref="class__finite__state_8h" startline="125">class_finite_state::Measurements::bond_dimensions</references>
        <references refid="structclass__finite__state_1_1_measurements_1a7d515b15cfdd205b7ca1bf6e51ebbd15" compoundref="class__finite__state_8h" startline="128">class_finite_state::Measurements::energy_per_site</references>
        <references refid="structclass__finite__state_1_1_measurements_1a5d9b8e22eb2c5fbb1532ac82658e7157" compoundref="class__finite__state_8h" startline="130">class_finite_state::Measurements::energy_variance_per_site</references>
        <references refid="structclass__finite__state_1_1_measurements_1a581133f1d7650f3045392243e6b9537c" compoundref="class__finite__state_8h" startline="137">class_finite_state::Measurements::entanglement_entropies</references>
        <references refid="structclass__finite__state_1_1_measurements_1a8b1e7873a5a64430a1adba5dd7e5d3c3" compoundref="class__finite__state_8h" startline="134">class_finite_state::Measurements::spin_components</references>
        <references refid="structclass__finite__state_1_1_measurements_1ae75dc052623898022331f61e69471206" compoundref="class__finite__state_8h" startline="131">class_finite_state::Measurements::spin_component_sx</references>
        <references refid="structclass__finite__state_1_1_measurements_1a65c4716cd1cdc1a8e755c45fd4e57ced" compoundref="class__finite__state_8h" startline="132">class_finite_state::Measurements::spin_component_sy</references>
        <references refid="structclass__finite__state_1_1_measurements_1abcb5fb3c2166b630c67f43e038f69ce0" compoundref="class__finite__state_8h" startline="133">class_finite_state::Measurements::spin_component_sz</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1ad13ed6335eb5e57dc1d3fceb451d68a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::write_closest_parity_projection</definition>
        <argsstring>(const class_finite_state &amp;state, h5pp::File &amp;h5ppFile, std::string sim_name, std::string paulistring)</argsstring>
        <name>write_closest_parity_projection</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>paulistring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="137" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="138" bodyend="144"/>
        <references refid="namespacetools_1_1finite_1_1ops_1a92dc2122fa719b004025f43bec82e154" compoundref="ops_8cpp" startline="141" endline="149">tools::finite::ops::get_closest_parity_state</references>
        <references refid="namespacetools_1_1finite_1_1io_1acdc713a846e83777d81ad198f32ab9ef" compoundref="finite_2h5pp_8cpp" startline="22" endline="44">write_all_state</references>
        <references refid="namespacetools_1_1finite_1_1io_1adce7e1b64a6f8506341d927df05bd7e3" compoundref="finite_2h5pp_8cpp" startline="122" endline="135">write_all_measurements</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1a4dbbf0353261250bcb74a394ca78a3c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::io::load_from_hdf5</definition>
        <argsstring>(const h5pp::File &amp;h5ppFile, class_finite_state &amp;state, class_simulation_status &amp;sim_status, std::string sim_name)</argsstring>
        <name>load_from_hdf5</name>
        <param>
          <type>const h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="classclass__simulation__status" kindref="compound">class_simulation_status</ref> &amp;</type>
          <declname>sim_status</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="138" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="147" bodyend="157"/>
        <references refid="namespacetools_1_1common_1_1io_1aac4b3c1baaf7cd9aecf350384d5d1752" compoundref="common_2h5pp_8cpp" startline="48" endline="90">tools::common::io::load_sim_status_from_hdf5</references>
        <references refid="namespacetools_1_1finite_1_1io_1a45281f878a720cd9d66e6cd17c851ab4" compoundref="finite_2h5pp_8cpp" startline="159" endline="210">load_state_from_hdf5</references>
        <references refid="classclass__finite__state_1aecbc8d3c32a92821f4bd8531d6c495b8" compoundref="class__finite__state_8h" startline="64" endline="64">class_finite_state::set_sweeps</references>
        <references refid="structstatus__data_1a0bf230f68ab2587ea9d80f4ef1aca4dc" compoundref="class__simulation__status_8h" startline="18">status_data::iteration</references>
        <references refid="namespacetools_1_1finite_1_1debug_1a8bfed5706f3a25e415f986d5c4bf7b73" compoundref="finite_2debug_8cpp" startline="13" endline="28">tools::finite::debug::check_integrity</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1io_1a45281f878a720cd9d66e6cd17c851ab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref></type>
        <definition>class_finite_state tools::finite::io::load_state_from_hdf5</definition>
        <argsstring>(const h5pp::File &amp;h5ppFile, std::string sim_name)</argsstring>
        <name>load_state_from_hdf5</name>
        <param>
          <type>const h5pp::File &amp;</type>
          <declname>h5ppFile</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sim_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="140" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/h5pp.cpp" bodystart="159" bodyend="210"/>
        <references refid="namespacesettings_1_1model_1a47bbe476211c0ae22d348e80df47193b" compoundref="nmspc__settings_8h" startline="35">settings::model::model_type</references>
        <references refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" compoundref="class__finite__state_8h" startline="49">class_finite_state::MPS_L</references>
        <references refid="classclass__finite__state_1ad41b34016714e6b3d3aa67368aacbe64" compoundref="class__finite__state_8h" startline="56">class_finite_state::MPO_L</references>
        <references refid="classclass__model__factory_1abcf6ff6ee79d5ef9af4a219d2ade32d3" compoundref="class__model__factory_8cpp" startline="14" endline="30">class_model_factory::create_mpo</references>
        <references refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" compoundref="class__finite__state_8h" startline="50">class_finite_state::MPS_R</references>
        <references refid="classclass__finite__state_1a0610c0cf4d336c15374c37c646138ab2" compoundref="class__finite__state_8h" startline="57">class_finite_state::MPO_R</references>
        <references refid="classclass__finite__state_1a781bc0bab32617bf299a11124ab136f6" compoundref="class__finite__state_8h" startline="51">class_finite_state::MPS_C</references>
        <references refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" compoundref="class__finite__state_8cpp" startline="46" endline="46">class_finite_state::get_position</references>
        <references refid="namespacetools_1_1finite_1_1mps_1a39333dfe4f63e99d175302ff77155464" compoundref="finite_2mps_8cpp" startline="56" endline="118">tools::finite::mps::rebuild_environments</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="128" column="1"/>
  </compounddef>
</doxygen>
