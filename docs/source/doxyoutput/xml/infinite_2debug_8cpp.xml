<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="infinite_2debug_8cpp" kind="file" language="C++">
    <compoundname>debug.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes refid="class__simulation__status_8h" local="no">simulation/class_simulation_status.h</includes>
    <includes refid="nmspc__tools_8h" local="no">tools/nmspc_tools.h</includes>
    <includes refid="class__state__infinite_8h" local="no">state/class_state_infinite.h</includes>
    <includes refid="nmspc__quantum__mechanics_8h" local="no">general/nmspc_quantum_mechanics.h</includes>
    <incdepgraph>
      <node id="2701">
        <label>list</label>
      </node>
      <node id="2691">
        <label>iomanip</label>
      </node>
      <node id="2716">
        <label>iterator</label>
      </node>
      <node id="2689">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/debug.cpp</label>
        <link refid="infinite_2debug_8cpp"/>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2692" relation="include">
        </childnode>
        <childnode refid="2699" relation="include">
        </childnode>
        <childnode refid="2711" relation="include">
        </childnode>
        <childnode refid="2725" relation="include">
        </childnode>
      </node>
      <node id="2717">
        <label>general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="2718" relation="include">
        </childnode>
        <childnode refid="2709" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
      </node>
      <node id="2709">
        <label>Eigen/Core</label>
      </node>
      <node id="2694">
        <label>string</label>
      </node>
      <node id="2698">
        <label>hdf5_hl.h</label>
      </node>
      <node id="2705">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="2706" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
      </node>
      <node id="2702">
        <label>io/nmspc_logger.h</label>
        <link refid="nmspc__logger_8h"/>
        <childnode refid="2703" relation="include">
        </childnode>
        <childnode refid="2704" relation="include">
        </childnode>
      </node>
      <node id="2720">
        <label>map</label>
      </node>
      <node id="2692">
        <label>simulation/class_simulation_status.h</label>
        <link refid="class__simulation__status_8h"/>
        <childnode refid="2693" relation="include">
        </childnode>
        <childnode refid="2694" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2696" relation="include">
        </childnode>
        <childnode refid="2697" relation="include">
        </childnode>
        <childnode refid="2698" relation="include">
        </childnode>
      </node>
      <node id="2718">
        <label>experimental/type_traits</label>
      </node>
      <node id="2699">
        <label>tools/nmspc_tools.h</label>
        <link refid="nmspc__tools_8h"/>
        <childnode refid="2693" relation="include">
        </childnode>
        <childnode refid="2694" relation="include">
        </childnode>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2702" relation="include">
        </childnode>
        <childnode refid="2705" relation="include">
        </childnode>
        <childnode refid="2707" relation="include">
        </childnode>
        <childnode refid="2709" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
      </node>
      <node id="2710">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="2704">
        <label>spdlog/fmt/bundled/ranges.h</label>
      </node>
      <node id="2722">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="2715">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2724">
        <label>simulation/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="2707">
        <label>tools/finite/opt-internals/enum_classes.h</label>
        <link refid="enum__classes_8h"/>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2708" relation="include">
        </childnode>
      </node>
      <node id="2703">
        <label>spdlog/logger.h</label>
      </node>
      <node id="2714">
        <label>general/nmspc_omp.h</label>
        <link refid="nmspc__omp_8h"/>
        <childnode refid="2710" relation="include">
        </childnode>
      </node>
      <node id="2711">
        <label>state/class_state_infinite.h</label>
        <link refid="class__state__infinite_8h"/>
        <childnode refid="2693" relation="include">
        </childnode>
        <childnode refid="2712" relation="include">
        </childnode>
        <childnode refid="2713" relation="include">
        </childnode>
        <childnode refid="2705" relation="include">
        </childnode>
        <childnode refid="2719" relation="include">
        </childnode>
        <childnode refid="2723" relation="include">
        </childnode>
        <childnode refid="2702" relation="include">
        </childnode>
      </node>
      <node id="2712">
        <label>optional</label>
      </node>
      <node id="2695">
        <label>vector</label>
      </node>
      <node id="2721">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="2696">
        <label>array</label>
      </node>
      <node id="2708">
        <label>sstream</label>
      </node>
      <node id="2697">
        <label>hdf5.h</label>
      </node>
      <node id="2690">
        <label>iostream</label>
      </node>
      <node id="2719">
        <label>math/nmspc_eigutils.h</label>
        <link refid="nmspc__eigutils_8h"/>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2696" relation="include">
        </childnode>
        <childnode refid="2720" relation="include">
        </childnode>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2721" relation="include">
        </childnode>
        <childnode refid="2722" relation="include">
        </childnode>
      </node>
      <node id="2706">
        <label>chrono</label>
      </node>
      <node id="2725">
        <label>general/nmspc_quantum_mechanics.h</label>
        <link refid="nmspc__quantum__mechanics_8h"/>
        <childnode refid="2709" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
      </node>
      <node id="2700">
        <label>complex</label>
      </node>
      <node id="2723">
        <label>simulation/nmspc_settings.h</label>
        <link refid="nmspc__settings_8h"/>
        <childnode refid="2694" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2724" relation="include">
        </childnode>
      </node>
      <node id="2713">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="2714" relation="include">
        </childnode>
        <childnode refid="2709" relation="include">
        </childnode>
        <childnode refid="2715" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
        <childnode refid="2716" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2717" relation="include">
        </childnode>
      </node>
      <node id="2693">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-06-24.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__simulation__status_8h" kindref="compound">simulation/class_simulation_status.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__tools_8h" kindref="compound">tools/nmspc_tools.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__infinite_8h" kindref="compound">state/class_state_infinite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__quantum__mechanics_8h" kindref="compound">general/nmspc_quantum_mechanics.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespacetools_1_1infinite_1_1debug_1a94e0f187500838d0617ada50766a7a6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1infinite_1_1debug_1a94e0f187500838d0617ada50766a7a6d" kindref="member">tools::infinite::debug::check_integrity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Checking<sp/>integrity...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.<ref refid="classclass__state__infinite_1a0870c12501c560befa97ed273c464394" kindref="member">assert_positions</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1debug_1a198d86e79c9df9fc014f3c38846b1428" kindref="member">check_integrity_of_mps</ref>(state);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::exception<sp/>&amp;<sp/>ex){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1print_1a3bed2549c51f324b355c2679b168a55c" kindref="member">tools::infinite::print::print_state</ref>(state)<sp/>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Integrity<sp/>check<sp/>of<sp/>state<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(ex.what()));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespacetools_1_1infinite_1_1debug_1aba45f70626be5b7f72bc3a8908b91a5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1infinite_1_1debug_1aba45f70626be5b7f72bc3a8908b91a5a" kindref="member">tools::infinite::debug::check_integrity_of_mps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Checking<sp/>integrity<sp/>of<sp/>MPS...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Checking<sp/>norms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>norm_block<sp/>=<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a2c553c8536fb81c5cf371b12e35c8f5d" kindref="member">tools::infinite::measure::norm</ref>(state);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(norm_block<sp/>-<sp/>1.0)<sp/>&gt;<sp/>1e-10)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Norm<sp/>of<sp/>state<sp/>far<sp/>from<sp/>unity:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>norm_block);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Norm<sp/>of<sp/>state<sp/>too<sp/>far<sp/>from<sp/>unity:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(norm_block));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;MPS<sp/>OK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/debug.cpp"/>
  </compounddef>
</doxygen>
