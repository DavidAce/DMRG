<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classclass__algorithm__finite" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>class_algorithm_finite</compoundname>
    <basecompoundref refid="classclass__algorithm__base" prot="public" virt="non-virtual">class_algorithm_base</basecompoundref>
    <derivedcompoundref refid="classclass__fdmrg" prot="public" virt="non-virtual">class_fdmrg</derivedcompoundref>
    <derivedcompoundref refid="classclass__flbit" prot="public" virt="non-virtual">class_flbit</derivedcompoundref>
    <derivedcompoundref refid="classclass__xdmrg" prot="public" virt="non-virtual">class_xdmrg</derivedcompoundref>
    <includes refid="class__algorithm__finite_8h" local="no">class_algorithm_finite.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" prot="public" static="no" mutable="no">
        <type><ref refid="classclass__tensors__finite" kindref="compound">class_tensors_finite</ref></type>
        <definition>class_tensors_finite class_algorithm_finite::tensors</definition>
        <argsstring></argsstring>
        <name>tensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="19" column="26" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a8cd8f956556aebf98f6ed5b35ef1df4a" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::excited_state_number</definition>
        <argsstring></argsstring>
        <name>excited_state_number</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Keeps track of found excited states. Convention: &quot;0&quot; is the biased seed, and others become unbiased by randomizing from state 0 (or any other). Therefore, this number is only incremented when randomizing the current state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="21" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a5f272b18fd4eb5fee0f35f231b2dfb89" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::max_stuck_iters</definition>
        <argsstring></argsstring>
        <name>max_stuck_iters</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="26" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a8908aad72db98c88a37d4d0696c1a330" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::max_saturation_iters</definition>
        <argsstring></argsstring>
        <name>max_saturation_iters</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="27" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a72360228d7c045aee8c2ae3b7c7a8a4f" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::min_saturation_iters</definition>
        <argsstring></argsstring>
        <name>min_saturation_iters</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="28" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a0dd164b1d3efdeef2be6febc6f92c583" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::min_converged_iters</definition>
        <argsstring></argsstring>
        <name>min_converged_iters</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converged at least this many iters before success </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="29" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a72b4aa7bd0e8d16a2a98a13d8770dd58" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool class_algorithm_finite::has_projected</definition>
        <argsstring></argsstring>
        <name>has_projected</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if projection has already been tried </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="31" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a1f1777e94b4f4385bb13f9bef95c61dc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool class_algorithm_finite::has_expanded</definition>
        <argsstring></argsstring>
        <name>has_expanded</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if full expansion has already been tried </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="32" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1afe739ece30be039df7bb6333da5acf39" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool class_algorithm_finite::has_damped</definition>
        <argsstring></argsstring>
        <name>has_damped</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if damping of hamiltonian parameters is ongoing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="33" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a1e63eab967c9d9340d9205c3dc7507ce" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::chi_quench_steps</definition>
        <argsstring></argsstring>
        <name>chi_quench_steps</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of steps left doing chi-quenching </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="34" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a57bbed424c2236370bd488cc54600f0a" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::num_chi_quenches</definition>
        <argsstring></argsstring>
        <name>num_chi_quenches</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of bond dimension quench trials that have occurred </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="35" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a7ccd0bb5100ff67ce4df7c4478bcb319" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::max_chi_quenches</definition>
        <argsstring></argsstring>
        <name>max_chi_quenches</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of bond dimension quench trials allowed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="36" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a2adefbd0f1620458a28f24ec0044ed7f" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long class_algorithm_finite::chi_lim_quench_ahead</definition>
        <argsstring></argsstring>
        <name>chi_lim_quench_ahead</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bond dimension during a quench </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="37" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1aaf13bc89f3c463a4c9ab5a460f82e874" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long class_algorithm_finite::chi_lim_quench_trail</definition>
        <argsstring></argsstring>
        <name>chi_lim_quench_trail</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bond dimension during a quench </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="38" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a070190f822e54d4aec142238a47d1f09" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::num_perturbations</definition>
        <argsstring></argsstring>
        <name>num_perturbations</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of perturbation trials done </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="39" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a8862acc0cbf67cb0ec5329eafbc7a715" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::max_perturbations</definition>
        <argsstring></argsstring>
        <name>max_perturbations</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of perturbation trials allowed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="40" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a48c182668fed94c08ce984956b0ec6c1" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::perturbation_steps</definition>
        <argsstring></argsstring>
        <name>perturbation_steps</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of steps left doing perturbation of MPOs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="41" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a7810e9c213482dd4863a7d14cb8e0346" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::damping_steps</definition>
        <argsstring></argsstring>
        <name>damping_steps</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of steps left doing disorder damping of MPOs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="42" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a291b852dab91aa7f869d9c4250dab429" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::num_dampings</definition>
        <argsstring></argsstring>
        <name>num_dampings</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of damping trials done </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="43" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a184e1fc5c38564d1eff775fa9555e562" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::max_dampings</definition>
        <argsstring></argsstring>
        <name>max_dampings</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of damping trials allowed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="44" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a59a18d1613c3d26af1d5a8d39f39bf2e" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::iter_discard</definition>
        <argsstring></argsstring>
        <name>iter_discard</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iteration when last discard occurred </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="45" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1ae599a2883b5e576b0b69f03faca28b8c" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::num_discards</definition>
        <argsstring></argsstring>
        <name>num_discards</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Counter for number of times discarding the smallest schmidt values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="46" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1ad5f7168d2eec06732eb74e4b97d8805c" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::max_discards</definition>
        <argsstring></argsstring>
        <name>max_discards</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of times to discard the smallest schmidt values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="47" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1aaea5faef0f1bcc68820e7f86a77ac82d" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::num_expansion_iters</definition>
        <argsstring></argsstring>
        <name>num_expansion_iters</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Counter for number of iterations of subspace expansion </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="48" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1ae154da6dd4bb4836a6577505abed6b25" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t class_algorithm_finite::max_expansion_iters</definition>
        <argsstring></argsstring>
        <name>max_expansion_iters</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of iterations doing subspace expansion </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="49" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a6a1ae08373b06f01d4b746dd0f7c2e90" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double class_algorithm_finite::max_expansion_alpha</definition>
        <argsstring></argsstring>
        <name>max_expansion_alpha</name>
        <initializer>= 0.2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum value of subspace expansion factor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="50" column="29" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a9cf692068daac2fb334ada83a0603886" prot="public" static="no" mutable="no">
        <type>std::optional&lt; double &gt;</type>
        <definition>std::optional&lt;double&gt; class_algorithm_finite::sub_expansion_alpha</definition>
        <argsstring></argsstring>
        <name>sub_expansion_alpha</name>
        <initializer>= std::nullopt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current value of the subspace expansion factor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="51" column="21" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; class_algorithm_finite::damping_exponents</definition>
        <argsstring></argsstring>
        <name>damping_exponents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exponents for for the damping trials </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="52" column="21" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a1a2ed7db66089814ced016d0f93ccd7b" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="config_2enums_8h_1a10bb7f1069ec16368388eec633330948" kindref="member">OptMode</ref> &gt;</type>
        <definition>std::optional&lt;OptMode&gt; class_algorithm_finite::last_optmode</definition>
        <argsstring></argsstring>
        <name>last_optmode</name>
        <initializer>= std::nullopt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="53" column="20" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a7dce1f378997193fffda76e73314db75" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="config_2enums_8h_1acadb01aad139a240f01ce7faf6d38fab" kindref="member">OptSpace</ref> &gt;</type>
        <definition>std::optional&lt;OptSpace&gt; class_algorithm_finite::last_optspace</definition>
        <argsstring></argsstring>
        <name>last_optspace</name>
        <initializer>= std::nullopt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="54" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a7f82f92ac61f4efae5486ce310077088" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; class_algorithm_finite::var_mpo_step</definition>
        <argsstring></argsstring>
        <name>var_mpo_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="93" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a15cff998705259e12405380d943d26bb" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; class_algorithm_finite::var_mpo_iter</definition>
        <argsstring></argsstring>
        <name>var_mpo_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="94" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__finite_1a96d01fcfd2c06e9b4ecf2e1da197b2a9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;double&gt; &gt; class_algorithm_finite::entropy_iter</definition>
        <argsstring></argsstring>
        <name>entropy_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="95" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classclass__algorithm__finite_1a82a008615f845f5ad5a40e25f5abc671" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>class_algorithm_finite::class_algorithm_finite</definition>
        <argsstring>(std::shared_ptr&lt; h5pp::File &gt; h5ppFile_, AlgorithmType algo_type)</argsstring>
        <name>class_algorithm_finite</name>
        <param>
          <type>std::shared_ptr&lt; h5pp::File &gt;</type>
          <declname>h5ppFile_</declname>
        </param>
        <param>
          <type><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9" kindref="member">AlgorithmType</ref></type>
          <declname>algo_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="18" column="14" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="24" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a14fc566b3920b5c8541f776a822fe0a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void class_algorithm_finite::run_algorithm</definition>
        <argsstring>()=0</argsstring>
        <name>run_algorithm</name>
        <reimplementedby refid="classclass__fdmrg_1ac77e5e28355aa9daad26c36c22ea60ec">run_algorithm</reimplementedby>
        <reimplementedby refid="classclass__flbit_1aae944505c997a6ab271cffcd7cb17e4b">run_algorithm</reimplementedby>
        <reimplementedby refid="classclass__xdmrg_1aa0e667b49b59b265db5ca81a14cd4c66">run_algorithm</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="57" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1ac1b7db3efa95c1240c457eb29825120a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void class_algorithm_finite::run_preprocessing</definition>
        <argsstring>()=0</argsstring>
        <name>run_preprocessing</name>
        <reimplementedby refid="classclass__fdmrg_1aba688522fb56d970f42fbab9e42e1f7e">run_preprocessing</reimplementedby>
        <reimplementedby refid="classclass__flbit_1a73b462aad62d92e8f70e9e5d304d7b87">run_preprocessing</reimplementedby>
        <reimplementedby refid="classclass__xdmrg_1aa5ced2cb9baabb219c001af2216b35da">run_preprocessing</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="58" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a37993b5dd8c0999078d23f699d533efc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::run_postprocessing</definition>
        <argsstring>()</argsstring>
        <name>run_postprocessing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="59" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="93" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a93360714317e0a3b24af983b007221b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool class_algorithm_finite::cfg_store_wave_function</definition>
        <argsstring>()=0</argsstring>
        <name>cfg_store_wave_function</name>
        <reimplementedby refid="classclass__fdmrg_1a4521da1a8170f4e6e1abf5926b0c989d">cfg_store_wave_function</reimplementedby>
        <reimplementedby refid="classclass__flbit_1a9b4bda5bc1d34c12ea2698a570046c49">cfg_store_wave_function</reimplementedby>
        <reimplementedby refid="classclass__xdmrg_1a52d445beee22b1dd7431f075d2cb7796">cfg_store_wave_function</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="60" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1aa9fc4a0111ae78e0a61e5b97223eda8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void class_algorithm_finite::resume</definition>
        <argsstring>()=0</argsstring>
        <name>resume</name>
        <reimplementedby refid="classclass__fdmrg_1aaa6f2a22ac8bbced6c506d006bad0438">resume</reimplementedby>
        <reimplementedby refid="classclass__flbit_1a8acf039e80796d7f06d2fee51a6a0693">resume</reimplementedby>
        <reimplementedby refid="classclass__xdmrg_1a4a1fce229af24e378c4cc23c676d5daa">resume</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="61" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a449bdbc5c87a4f8bb46509278a1e0688" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void class_algorithm_finite::run_default_task_list</definition>
        <argsstring>()=0</argsstring>
        <name>run_default_task_list</name>
        <reimplementedby refid="classclass__fdmrg_1aefe41cbe1ed1ed8c776c5ff9dad95c4b">run_default_task_list</reimplementedby>
        <reimplementedby refid="classclass__flbit_1a530e68305ed3bfeb8a7dada331739b31">run_default_task_list</reimplementedby>
        <reimplementedby refid="classclass__xdmrg_1a11be71d7d313a8f03afa71691b61413e">run_default_task_list</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="62" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a4f369185f794545116447b1a3a587625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::try_projection</definition>
        <argsstring>(std::optional&lt; std::string &gt; target_sector=std::nullopt)</argsstring>
        <name>try_projection</name>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>target_sector</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="63" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="311" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a42c3ba8f6917186a93577844aed4392b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::try_full_expansion</definition>
        <argsstring>()</argsstring>
        <name>try_full_expansion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="64" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="375" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a661ad455699f881c2ff834bbc0388f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::try_discard_small_schmidt</definition>
        <argsstring>()</argsstring>
        <name>try_discard_small_schmidt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="65" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="391" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a31675464960455f0e8fc7294a8f14c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::try_bond_dimension_quench</definition>
        <argsstring>()</argsstring>
        <name>try_bond_dimension_quench</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="66" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="405" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a92c41533b4b93b564a710bedd3eb98a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::try_hamiltonian_perturbation</definition>
        <argsstring>()</argsstring>
        <name>try_hamiltonian_perturbation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="67" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="446" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1afb58057c87ac28cb03296240205ab7d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::try_disorder_damping</definition>
        <argsstring>()</argsstring>
        <name>try_disorder_damping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="68" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="465" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1aa51f43031831b46cef58fabde7410452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::move_center_point</definition>
        <argsstring>(std::optional&lt; long &gt; num_moves=std::nullopt)</argsstring>
        <name>move_center_point</name>
        <param>
          <type>std::optional&lt; long &gt;</type>
          <declname>num_moves</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="69" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="104" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a18d4f093525edb51068e78656195370c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::reduce_mpo_energy</definition>
        <argsstring>()</argsstring>
        <name>reduce_mpo_energy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="70" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="154" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1af9b89cf9cc5921e4fce483944eb0ce15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::rebuild_mpo_squared</definition>
        <argsstring>()</argsstring>
        <name>rebuild_mpo_squared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="71" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1ad4868cc94f2a7dc1e543fcaf10a79296" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::update_variance_max_digits</definition>
        <argsstring>(std::optional&lt; double &gt; energy=std::nullopt) final</argsstring>
        <name>update_variance_max_digits</name>
        <reimplements refid="classclass__algorithm__base_1a245737c384ff850e145dc0f9f29b70cf">update_variance_max_digits</reimplements>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>energy</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="72" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="173" bodyend="186"/>
        <references refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" compoundref="debug_8h" startline="7">settings::debug</references>
        <references refid="namespacesettings_1_1precision_1af241365d45c25fd1f464b664f358e982" compoundref="nmspc__settings_8h" startline="173">settings::precision::use_reduced_energy</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1af95402763a137d45e2b25ceecc9252af" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::update_bond_dimension_limit</definition>
        <argsstring>(std::optional&lt; long &gt; tmp_bond_limit=std::nullopt) final</argsstring>
        <name>update_bond_dimension_limit</name>
        <reimplements refid="classclass__algorithm__base_1a9a60e6393090895c4960d04b83621c62">update_bond_dimension_limit</reimplements>
        <param>
          <type>std::optional&lt; long &gt;</type>
          <declname>tmp_bond_limit</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="73" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="188" bodyend="246"/>
        <references refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" compoundref="debug_8h" startline="7">settings::debug</references>
        <references refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" compoundref="nmspc__settings_8h" startline="170">settings::precision::svd_threshold</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a3f9c4aa638fb9ca80033657be16903b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::randomize_model</definition>
        <argsstring>()</argsstring>
        <name>randomize_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="74" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="248" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a9bc7b209ddc5b1c246038d33ca327640" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::run</definition>
        <argsstring>() final</argsstring>
        <name>run</name>
        <reimplements refid="classclass__algorithm__base_1a41b199782e43aeaccf607b8191c3a027">run</reimplements>
        <briefdescription>
<para>Dispatches finite DMRG stages. This function manages the stages of simulation differently depending on whether the data already existed in hdf5 storage or not. </para>
        </briefdescription>
        <detaileddescription>
<para>We start by searching the HDF5 group tree looking for</para>
<para>These are the scenarios: 1) The hdf5 file existed already and contains a) nothing recognizable (previous crash?) <ndash/> delete the file -&gt; run full simulation from scratch. b) a converged simulation but no MPS <ndash/> run full simulation from scratch. c) a not-yet-converged MPS <ndash/> resume simulation, reset the number of sweeps first. d) a converged MPS <ndash/> not much to do... run postprocessing 2) The hdf5 file did not exist <ndash/> run full simulation from scratch. <verbatim> D1: output file exists: check option in settings::output::create_mode:
     - case OPEN:        Load config and simulation state -&gt; continue simulation
     - case RENAME:      Rename output file -&gt; go to D2
     - case TRUNCATE:    Delete output file -&gt; go to D2

 D2: output file does not exist: Check if coming from A2
     - Yes: load simulation state from given hdf5 file -&gt; continue simulation
     - No: start new simulation
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="75" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="45" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::clear_convergence_status</definition>
        <argsstring>() override</argsstring>
        <name>clear_convergence_status</name>
        <reimplements refid="classclass__algorithm__base_1a9209394aae1cb1f7a7ef4fe3c41d30b6">clear_convergence_status</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="76" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="592" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a39433db5a7d4de5b17d342f8cd6e9be8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::randomize_state</definition>
        <argsstring>(ResetReason reason, StateInit state_init, std::optional&lt; StateInitType &gt; state_type=std::nullopt, std::optional&lt; std::string &gt; sector=std::nullopt, std::optional&lt; long &gt; chi_lim=std::nullopt, std::optional&lt; bool &gt; use_eigenspinors=std::nullopt, std::optional&lt; long &gt; bitfield=std::nullopt, std::optional&lt; double &gt; svd_threshold=std::nullopt)</argsstring>
        <name>randomize_state</name>
        <param>
          <type><ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11" kindref="member">ResetReason</ref></type>
          <declname>reason</declname>
        </param>
        <param>
          <type><ref refid="config_2enums_8h_1adbe3cea8d0d506925fa70531119e2976" kindref="member">StateInit</ref></type>
          <declname>state_init</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="config_2enums_8h_1ab9aca94621ab32fee58ebbbd4dbdcc0b" kindref="member">StateInitType</ref> &gt;</type>
          <declname>state_type</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>sector</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; long &gt;</type>
          <declname>chi_lim</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>use_eigenspinors</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; long &gt;</type>
          <declname>bitfield</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>svd_threshold</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="77" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="254" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::write_to_file</definition>
        <argsstring>(StorageReason storage_reason=StorageReason::CHECKPOINT, std::optional&lt; CopyPolicy &gt; copy_file=std::nullopt) override</argsstring>
        <name>write_to_file</name>
        <reimplements refid="classclass__algorithm__base_1a505f7dadceb3bfa9f06ff19a5f1ec158">write_to_file</reimplements>
        <reimplementedby refid="classclass__flbit_1a56315877a71d047d817d4c56f087bea6">write_to_file</reimplementedby>
        <param>
          <type><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref></type>
          <declname>storage_reason</declname>
          <defval><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a0f15e1247e93ddfa95c008106eb0d22f" kindref="member">StorageReason::CHECKPOINT</ref></defval>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5" kindref="member">CopyPolicy</ref> &gt;</type>
          <declname>copy_file</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="82" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="692" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a36a983fdccbfe7f72e5bdf81fe06c23d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::print_status_update</definition>
        <argsstring>() override</argsstring>
        <name>print_status_update</name>
        <reimplements refid="classclass__algorithm__base_1a803b366e66ffaef47479278cbdb1a738">print_status_update</reimplements>
        <reimplementedby refid="classclass__flbit_1ab1a6aeb2da67e707e37e2619cab57009">print_status_update</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="83" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="789" bodyend="838"/>
        <references refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" compoundref="debug_8h" startline="7">settings::debug</references>
        <references refid="namespacesettings_1_1strategy_1aeb593f360e13adb30f9e1b5a1d4a98d0" compoundref="nmspc__settings_8h" startline="155">settings::strategy::multisite_mps_size_max</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a31460024ef07df92bc57719b2234a725" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::print_status_full</definition>
        <argsstring>() final</argsstring>
        <name>print_status_full</name>
        <reimplements refid="classclass__algorithm__base_1a96f34d67e881abd4d1ec4dd2d89728ad">print_status_full</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="84" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="840" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a9e5ff92799e6f46ed6e32d544e59d981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::check_convergence_variance</definition>
        <argsstring>(std::optional&lt; double &gt; threshold=std::nullopt, std::optional&lt; double &gt; saturation_sensitivity=std::nullopt)</argsstring>
        <name>check_convergence_variance</name>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>threshold</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>saturation_sensitivity</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="85" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="496" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1aeaabc1b9ca94f6d5bef1462941718687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::check_convergence_entg_entropy</definition>
        <argsstring>(std::optional&lt; double &gt; saturation_sensitivity=std::nullopt)</argsstring>
        <name>check_convergence_entg_entropy</name>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>saturation_sensitivity</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="86" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="529" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a8afbac16dc34dd49f2ad7decc965b98a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::check_convergence_spin_parity_sector</definition>
        <argsstring>(const std::string &amp;target_sector, double threshold=1e-12)</argsstring>
        <name>check_convergence_spin_parity_sector</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>target_sector</declname>
        </param>
        <param>
          <type>double</type>
          <declname>threshold</declname>
          <defval>1e-12</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="87" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="577" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a8acca60239cbdd96b5d36d3d63b0c499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::setup_prefix</definition>
        <argsstring>(const StorageReason &amp;storage_reason, StorageLevel &amp;storage_level, const std::string &amp;state_name, std::string &amp;state_prefix, std::string &amp;model_prefix, std::vector&lt; std::string &gt; &amp;table_prefxs)</argsstring>
        <name>setup_prefix</name>
        <param>
          <type>const <ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref> &amp;</type>
          <declname>storage_reason</declname>
        </param>
        <param>
          <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref> &amp;</type>
          <declname>storage_level</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>state_name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>state_prefix</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>model_prefix</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>table_prefxs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="88" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="614" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a11374bc0a7b530f8dbb6409db71f261e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_finite::write_to_file</definition>
        <argsstring>(StorageReason storage_reason, const class_state_finite &amp;state, std::optional&lt; CopyPolicy &gt; copy_policy=std::nullopt)</argsstring>
        <name>write_to_file</name>
        <param>
          <type><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref></type>
          <declname>storage_reason</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5" kindref="member">CopyPolicy</ref> &gt;</type>
          <declname>copy_policy</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="90" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="696" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a174599c66d34bffb32d466f1fc68c2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void class_algorithm_finite::write_to_file</definition>
        <argsstring>(StorageReason storage_reason, const T &amp;data, const std::string &amp;name, std::optional&lt; CopyPolicy &gt; copy_policy=std::nullopt)</argsstring>
        <name>write_to_file</name>
        <param>
          <type><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref></type>
          <declname>storage_reason</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5" kindref="member">CopyPolicy</ref> &gt;</type>
          <declname>copy_policy</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="92" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp" bodystart="768" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1a35e482872c1dec9372c74c40a82208d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>class_algorithm_base::class_algorithm_base</definition>
        <argsstring>()=default</argsstring>
        <name>class_algorithm_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="17" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__finite_1ab8dd45b96c3bc6d6dac3164741d9dae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>class_algorithm_base::class_algorithm_base</definition>
        <argsstring>(std::shared_ptr&lt; h5pp::File &gt; h5ppFile_, AlgorithmType algo_type_)</argsstring>
        <name>class_algorithm_base</name>
        <param>
          <type>std::shared_ptr&lt; h5pp::File &gt;</type>
          <declname>h5ppFile_</declname>
        </param>
        <param>
          <type><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9" kindref="member">AlgorithmType</ref></type>
          <declname>algo_type_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="17" column="5" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_base.cpp" bodystart="18" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>class_fdmrg</label>
        <link refid="classclass__fdmrg"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>class_xdmrg</label>
        <link refid="classclass__xdmrg"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>class_algorithm_finite</label>
        <link refid="classclass__algorithm__finite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>class_algorithm_base</label>
        <link refid="classclass__algorithm__base"/>
      </node>
      <node id="4">
        <label>class_flbit</label>
        <link refid="classclass__flbit"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12">
        <label>class_model_finite::Cache</label>
        <link refid="structclass__model__finite_1_1_cache"/>
      </node>
      <node id="38">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="24">
        <label>class_env_base</label>
        <link refid="classclass__env__base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>tag</edgelabel>
          <edgelabel>side</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>block</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>class_tensors_finite</label>
        <link refid="classclass__tensors__finite"/>
        <childnode refid="9" relation="usage">
          <edgelabel>measurements</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>edges</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>active_sites</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::shared_ptr&lt; h5pp::File &gt;</label>
      </node>
      <node id="28">
        <label>class_env_ene</label>
        <link refid="classclass__env__ene"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>class_mpo_site</label>
        <link refid="classclass__mpo__site"/>
        <childnode refid="16" relation="usage">
          <edgelabel>extent2</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>extent4</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::unique_ptr&lt; class_model_finite &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>state_measure_finite</label>
        <link refid="structstate__measure__finite"/>
      </node>
      <node id="17">
        <label>std::array&lt; long, 4 &gt;</label>
      </node>
      <node id="31">
        <label>std::vector&lt; std::unique_ptr&lt; class_mps_site &gt; &gt;</label>
        <childnode refid="32" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>class_model_finite</label>
        <link refid="classclass__model__finite"/>
        <childnode refid="12" relation="usage">
          <edgelabel>cache</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>MPO</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>active_sites</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>std::unique_ptr&lt; class_env_ene &gt;</label>
        <childnode refid="28" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>std::unique_ptr&lt; class_edges_finite &gt;</label>
        <childnode refid="20" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>tensors_measure_finite</label>
        <link refid="structtensors__measure__finite"/>
      </node>
      <node id="4">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="37">
        <label>std::vector&lt; std::vector&lt; double &gt; &gt;</label>
        <childnode refid="38" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::complex&lt; double &gt;</label>
      </node>
      <node id="35">
        <label>class_state_finite::Cache</label>
        <link refid="structclass__state__finite_1_1_cache"/>
      </node>
      <node id="22">
        <label>std::unique_ptr&lt; class_env_var &gt;</label>
        <childnode refid="23" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>class_mps_site</label>
        <link refid="classclass__mps__site"/>
        <childnode refid="3" relation="usage">
          <edgelabel>label</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::vector&lt; std::unique_ptr&lt; class_mpo_site &gt; &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::unique_ptr&lt; class_mps_site &gt;</label>
        <childnode refid="33" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>class_state_finite</label>
        <link refid="classclass__state__finite"/>
        <childnode refid="31" relation="usage">
          <edgelabel>mps_sites</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>measurements</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>cache</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>active_sites</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>tag_normalized_sites</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>class_env_var</label>
        <link refid="classclass__env__var"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>class_edges_finite</label>
        <link refid="classclass__edges__finite"/>
        <childnode refid="21" relation="usage">
          <edgelabel>varL</edgelabel>
          <edgelabel>varR</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>eneL</edgelabel>
          <edgelabel>eneR</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>active_sites</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>class_algorithm_finite</label>
        <link refid="classclass__algorithm__finite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>tensors</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>entropy_iter</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>var_mpo_iter</edgelabel>
          <edgelabel>damping_exponents</edgelabel>
          <edgelabel>var_mpo_step</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>std::vector&lt; std::unique_ptr&lt; class_env_ene &gt; &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>std::vector&lt; std::unique_ptr&lt; class_env_var &gt; &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>class_algorithm_base</label>
        <link refid="classclass__algorithm__base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>algo_name</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>status</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>h5pp_file</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::unique_ptr&lt; class_state_finite &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::unique_ptr&lt; Eigen::Tensor&lt; Scalar, 3 &gt; &gt;</label>
      </node>
      <node id="36">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="14">
        <label>std::unique_ptr&lt; class_mpo_site &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>class_algorithm_status</label>
        <link refid="classclass__algorithm__status"/>
        <childnode refid="6" relation="usage">
          <edgelabel>delta_t</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::vector&lt; size_t &gt;</label>
      </node>
      <node id="16">
        <label>std::array&lt; long, 2 &gt;</label>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" line="14" column="57" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.h" bodystart="14" bodyend="97"/>
    <listofallmembers>
      <member refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>algo_name</name></member>
      <member refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>algo_type</name></member>
      <member refid="classclass__algorithm__base_1ab3e9bfaa0a5cf0810c3c7a074cfa9d69" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>cfg_algorithm_is_on</name></member>
      <member refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>cfg_chi_lim_grow</name></member>
      <member refid="classclass__algorithm__base_1a02248bae999554bcbbc84ba8bbaf6eb0" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>cfg_chi_lim_init</name></member>
      <member refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>cfg_chi_lim_max</name></member>
      <member refid="classclass__algorithm__base_1a1ff5ab0d312d132dd30243885d07dbd1" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>cfg_print_freq</name></member>
      <member refid="classclass__algorithm__finite_1a93360714317e0a3b24af983b007221b4" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>cfg_store_wave_function</name></member>
      <member refid="classclass__algorithm__base_1a6d37e1472c3e74f8e50a11c71a8b03ee" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>check_convergence</name></member>
      <member refid="classclass__algorithm__finite_1aeaabc1b9ca94f6d5bef1462941718687" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>check_convergence_entg_entropy</name></member>
      <member refid="classclass__algorithm__finite_1a8afbac16dc34dd49f2ad7decc965b98a" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>check_convergence_spin_parity_sector</name></member>
      <member refid="classclass__algorithm__finite_1a9e5ff92799e6f46ed6e32d544e59d981" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>check_convergence_variance</name></member>
      <member refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" prot="protected" virt="non-virtual"><scope>class_algorithm_finite</scope><name>check_saturation</name></member>
      <member refid="classclass__algorithm__finite_1a2adefbd0f1620458a28f24ec0044ed7f" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>chi_lim_quench_ahead</name></member>
      <member refid="classclass__algorithm__finite_1aaf13bc89f3c463a4c9ab5a460f82e874" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>chi_lim_quench_trail</name></member>
      <member refid="classclass__algorithm__finite_1a1e63eab967c9d9340d9205c3dc7507ce" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>chi_quench_steps</name></member>
      <member refid="classclass__algorithm__finite_1a35e482872c1dec9372c74c40a82208d0" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>class_algorithm_base</name></member>
      <member refid="classclass__algorithm__finite_1ab8dd45b96c3bc6d6dac3164741d9dae0" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>class_algorithm_base</name></member>
      <member refid="classclass__algorithm__base_1ab8dd45b96c3bc6d6dac3164741d9dae0" prot="public" virt="non-virtual" ambiguityscope="class_algorithm_base::"><scope>class_algorithm_finite</scope><name>class_algorithm_base</name></member>
      <member refid="classclass__algorithm__finite_1a82a008615f845f5ad5a40e25f5abc671" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>class_algorithm_finite</name></member>
      <member refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" prot="public" virt="virtual"><scope>class_algorithm_finite</scope><name>clear_convergence_status</name></member>
      <member refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>copy_from_tmp</name></member>
      <member refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" prot="protected" virt="non-virtual"><scope>class_algorithm_finite</scope><name>count_convergence</name></member>
      <member refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>damping_exponents</name></member>
      <member refid="classclass__algorithm__finite_1a7810e9c213482dd4863a7d14cb8e0346" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>damping_steps</name></member>
      <member refid="classclass__algorithm__finite_1a96d01fcfd2c06e9b4ecf2e1da197b2a9" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>entropy_iter</name></member>
      <member refid="classclass__algorithm__finite_1a8cd8f956556aebf98f6ed5b35ef1df4a" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>excited_state_number</name></member>
      <member refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>h5pp_file</name></member>
      <member refid="classclass__algorithm__finite_1afe739ece30be039df7bb6333da5acf39" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>has_damped</name></member>
      <member refid="classclass__algorithm__finite_1a1f1777e94b4f4385bb13f9bef95c61dc" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>has_expanded</name></member>
      <member refid="classclass__algorithm__finite_1a72b4aa7bd0e8d16a2a98a13d8770dd58" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>has_projected</name></member>
      <member refid="classclass__algorithm__base_1a0a68686f23b45bcdc7c833a7bf348b54" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>init_bond_dimension_limits</name></member>
      <member refid="classclass__algorithm__finite_1a59a18d1613c3d26af1d5a8d39f39bf2e" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>iter_discard</name></member>
      <member refid="classclass__algorithm__finite_1a1a2ed7db66089814ced016d0f93ccd7b" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>last_optmode</name></member>
      <member refid="classclass__algorithm__finite_1a7dce1f378997193fffda76e73314db75" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>last_optspace</name></member>
      <member refid="classclass__algorithm__finite_1a7ccd0bb5100ff67ce4df7c4478bcb319" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>max_chi_quenches</name></member>
      <member refid="classclass__algorithm__finite_1a184e1fc5c38564d1eff775fa9555e562" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>max_dampings</name></member>
      <member refid="classclass__algorithm__finite_1ad5f7168d2eec06732eb74e4b97d8805c" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>max_discards</name></member>
      <member refid="classclass__algorithm__finite_1a6a1ae08373b06f01d4b746dd0f7c2e90" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>max_expansion_alpha</name></member>
      <member refid="classclass__algorithm__finite_1ae154da6dd4bb4836a6577505abed6b25" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>max_expansion_iters</name></member>
      <member refid="classclass__algorithm__finite_1a8862acc0cbf67cb0ec5329eafbc7a715" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>max_perturbations</name></member>
      <member refid="classclass__algorithm__finite_1a8908aad72db98c88a37d4d0696c1a330" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>max_saturation_iters</name></member>
      <member refid="classclass__algorithm__finite_1a5f272b18fd4eb5fee0f35f231b2dfb89" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>max_stuck_iters</name></member>
      <member refid="classclass__algorithm__finite_1a0dd164b1d3efdeef2be6febc6f92c583" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>min_converged_iters</name></member>
      <member refid="classclass__algorithm__finite_1a72360228d7c045aee8c2ae3b7c7a8a4f" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>min_saturation_iters</name></member>
      <member refid="classclass__algorithm__finite_1aa51f43031831b46cef58fabde7410452" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>move_center_point</name></member>
      <member refid="classclass__algorithm__finite_1a57bbed424c2236370bd488cc54600f0a" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>num_chi_quenches</name></member>
      <member refid="classclass__algorithm__finite_1a291b852dab91aa7f869d9c4250dab429" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>num_dampings</name></member>
      <member refid="classclass__algorithm__finite_1ae599a2883b5e576b0b69f03faca28b8c" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>num_discards</name></member>
      <member refid="classclass__algorithm__finite_1aaea5faef0f1bcc68820e7f86a77ac82d" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>num_expansion_iters</name></member>
      <member refid="classclass__algorithm__finite_1a070190f822e54d4aec142238a47d1f09" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>num_perturbations</name></member>
      <member refid="classclass__algorithm__finite_1a48c182668fed94c08ce984956b0ec6c1" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>perturbation_steps</name></member>
      <member refid="classclass__algorithm__base_1affa46990d9763a23323280340fb62510" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>print_profiling_lap</name></member>
      <member refid="classclass__algorithm__finite_1a31460024ef07df92bc57719b2234a725" prot="public" virt="virtual"><scope>class_algorithm_finite</scope><name>print_status_full</name></member>
      <member refid="classclass__algorithm__finite_1a36a983fdccbfe7f72e5bdf81fe06c23d" prot="public" virt="virtual"><scope>class_algorithm_finite</scope><name>print_status_update</name></member>
      <member refid="classclass__algorithm__base_1aeec0f1d83000ef7ba92bbcdd74bdcabb" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>quietNaN</name></member>
      <member refid="classclass__algorithm__finite_1a3f9c4aa638fb9ca80033657be16903b8" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>randomize_model</name></member>
      <member refid="classclass__algorithm__finite_1a39433db5a7d4de5b17d342f8cd6e9be8" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>randomize_state</name></member>
      <member refid="classclass__algorithm__finite_1af9b89cf9cc5921e4fce483944eb0ce15" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>rebuild_mpo_squared</name></member>
      <member refid="classclass__algorithm__finite_1a18d4f093525edb51068e78656195370c" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>reduce_mpo_energy</name></member>
      <member refid="classclass__algorithm__finite_1aa9fc4a0111ae78e0a61e5b97223eda8b" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>resume</name></member>
      <member refid="classclass__algorithm__finite_1a9bc7b209ddc5b1c246038d33ca327640" prot="public" virt="virtual"><scope>class_algorithm_finite</scope><name>run</name></member>
      <member refid="classclass__algorithm__finite_1a14fc566b3920b5c8541f776a822fe0a4" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>run_algorithm</name></member>
      <member refid="classclass__algorithm__finite_1a449bdbc5c87a4f8bb46509278a1e0688" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>run_default_task_list</name></member>
      <member refid="classclass__algorithm__finite_1a37993b5dd8c0999078d23f699d533efc" prot="public" virt="virtual"><scope>class_algorithm_finite</scope><name>run_postprocessing</name></member>
      <member refid="classclass__algorithm__finite_1ac1b7db3efa95c1240c457eb29825120a" prot="public" virt="pure-virtual"><scope>class_algorithm_finite</scope><name>run_preprocessing</name></member>
      <member refid="classclass__algorithm__base_1ac2a5042c5337ef3b8c6d29a115e25843" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>Scalar</name></member>
      <member refid="classclass__algorithm__finite_1a8acca60239cbdd96b5d36d3d63b0c499" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>setup_prefix</name></member>
      <member refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>status</name></member>
      <member refid="classclass__algorithm__base_1a6d3e78c2e18dc5878763bbd914c0d490" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>stop_reason</name></member>
      <member refid="classclass__algorithm__finite_1a9cf692068daac2fb334ada83a0603886" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>sub_expansion_alpha</name></member>
      <member refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>tensors</name></member>
      <member refid="classclass__algorithm__finite_1a31675464960455f0e8fc7294a8f14c47" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>try_bond_dimension_quench</name></member>
      <member refid="classclass__algorithm__finite_1a661ad455699f881c2ff834bbc0388f99" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>try_discard_small_schmidt</name></member>
      <member refid="classclass__algorithm__finite_1afb58057c87ac28cb03296240205ab7d7" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>try_disorder_damping</name></member>
      <member refid="classclass__algorithm__finite_1a42c3ba8f6917186a93577844aed4392b" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>try_full_expansion</name></member>
      <member refid="classclass__algorithm__finite_1a92c41533b4b93b564a710bedd3eb98a2" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>try_hamiltonian_perturbation</name></member>
      <member refid="classclass__algorithm__finite_1a4f369185f794545116447b1a3a587625" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>try_projection</name></member>
      <member refid="classclass__algorithm__finite_1af95402763a137d45e2b25ceecc9252af" prot="public" virt="virtual"><scope>class_algorithm_finite</scope><name>update_bond_dimension_limit</name></member>
      <member refid="classclass__algorithm__finite_1ad4868cc94f2a7dc1e543fcaf10a79296" prot="public" virt="virtual"><scope>class_algorithm_finite</scope><name>update_variance_max_digits</name></member>
      <member refid="classclass__algorithm__finite_1a15cff998705259e12405380d943d26bb" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>var_mpo_iter</name></member>
      <member refid="classclass__algorithm__finite_1a7f82f92ac61f4efae5486ce310077088" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>var_mpo_step</name></member>
      <member refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" prot="public" virt="virtual"><scope>class_algorithm_finite</scope><name>write_to_file</name></member>
      <member refid="classclass__algorithm__finite_1a11374bc0a7b530f8dbb6409db71f261e" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>write_to_file</name></member>
      <member refid="classclass__algorithm__finite_1a174599c66d34bffb32d466f1fc68c2d1" prot="public" virt="non-virtual"><scope>class_algorithm_finite</scope><name>write_to_file</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
