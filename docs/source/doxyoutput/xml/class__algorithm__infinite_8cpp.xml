<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class__algorithm__infinite_8cpp" kind="file" language="C++">
    <compoundname>class_algorithm_infinite.cpp</compoundname>
    <includes refid="class__algorithm__infinite_8h" local="yes">class_algorithm_infinite.h</includes>
    <includes refid="nmspc__settings_8h" local="no">config/nmspc_settings.h</includes>
    <includes refid="num_8h" local="no">math/num.h</includes>
    <includes refid="class__state__infinite_8h" local="no">tensors/state/class_state_infinite.h</includes>
    <includes refid="common_2io_8h" local="no">tools/common/io.h</includes>
    <includes refid="log_8h" local="no">tools/common/log.h</includes>
    <includes refid="prof_8h" local="no">tools/common/prof.h</includes>
    <includes refid="infinite_2io_8h" local="no">tools/infinite/io.h</includes>
    <includes refid="infinite_2measure_8h" local="no">tools/infinite/measure.h</includes>
    <includes refid="infinite_2mps_8h" local="no">tools/infinite/mps.h</includes>
    <incdepgraph>
      <node id="25">
        <label>measure/tensors_measure_infinite.h</label>
        <link refid="tensors__measure__infinite_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>measure/state_measure_infinite.h</label>
        <link refid="state__measure__infinite_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>tools/infinite/io.h</label>
        <link refid="infinite_2io_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>limits</label>
      </node>
      <node id="29">
        <label>config/nmspc_settings.h</label>
        <link refid="nmspc__settings_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>iterator</label>
      </node>
      <node id="41">
        <label>io/spdlog.h</label>
        <link refid="spdlog_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>tools/infinite/mps.h</label>
        <link refid="infinite_2mps_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="15">
        <label>tensors/class_tensors_infinite.h</label>
        <link refid="class__tensors__infinite_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>cmath</label>
      </node>
      <node id="46">
        <label>tools/infinite/measure.h</label>
        <link refid="infinite_2measure_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="39">
        <label>tools/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>numeric</label>
      </node>
      <node id="40">
        <label>io/fmt.h</label>
        <link refid="io_2fmt_8h"/>
      </node>
      <node id="31">
        <label>math/num.h</label>
        <link refid="num_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="38">
        <label>map</label>
      </node>
      <node id="36">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="23">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h</label>
      </node>
      <node id="27">
        <label>math/svd/settings.h</label>
        <link refid="svd_2settings_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorMacros.h</label>
      </node>
      <node id="28">
        <label>fmt/core.h</label>
      </node>
      <node id="10">
        <label>string_view</label>
      </node>
      <node id="14">
        <label>optional</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="16">
        <label>general/eigen_tensor_fwd_decl.h</label>
        <link refid="eigen__tensor__fwd__decl_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>tools/common/prof.h</label>
        <link refid="prof_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>array</label>
      </node>
      <node id="21">
        <label>Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="22">
        <label>Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="37">
        <label>tools/common/io.h</label>
        <link refid="common_2io_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="44">
        <label>chrono</label>
      </node>
      <node id="19">
        <label>Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="3">
        <label>algorithms/class_algorithm_base.h</label>
        <link refid="class__algorithm__base_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>class_algorithm_infinite.h</label>
        <link refid="class__algorithm__infinite_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp</label>
        <link refid="class__algorithm__infinite_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="48">
        <label>set</label>
      </node>
      <node id="5">
        <label>complex</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="7">
        <label>config/enums.h</label>
        <link refid="config_2enums_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithms/class_algorithm_status.h</label>
        <link refid="class__algorithm__status_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>tensors/state/class_state_infinite.h</label>
        <link refid="class__state__infinite_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-06-24.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__algorithm__infinite_8h" kindref="compound">class_algorithm_infinite.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__settings_8h" kindref="compound">config/nmspc_settings.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="num_8h" kindref="compound">math/num.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__infinite_8h" kindref="compound">tensors/state/class_state_infinite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="common_2io_8h" kindref="compound">tools/common/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log_8h" kindref="compound">tools/common/log.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prof_8h" kindref="compound">tools/common/prof.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="infinite_2io_8h" kindref="compound">tools/infinite/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="infinite_2measure_8h" kindref="compound">tools/infinite/measure.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="infinite_2mps_8h" kindref="compound">tools/infinite/mps.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classclass__algorithm__infinite_1a0ad18e5b809b20e90df53c67e2421ef2" refkind="member"><highlight class="normal"><ref refid="classclass__algorithm__infinite_1a0ad18e5b809b20e90df53c67e2421ef2" kindref="member">class_algorithm_infinite::class_algorithm_infinite</ref>(std::shared_ptr&lt;h5pp::File&gt;<sp/>h5ppFile_,<sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9" kindref="member">AlgorithmType</ref><sp/>algo_type)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classclass__algorithm__base" kindref="compound">class_algorithm_base</ref>(std::move(h5ppFile_),<sp/>algo_type)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Constructing<sp/>algorithm<sp/>infinite&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1a8ca8dce1391de56de98f7d9ffa394859" kindref="member">initialize</ref>(<ref refid="namespacesettings_1_1model_1a3628af587c3663ba75c2a3d6db7e16e6" kindref="member">settings::model::model_type</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;set_algorithm(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classclass__algorithm__infinite_1ae14b72b2eb26ac37f453c24cd2c5a68c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1ae14b72b2eb26ac37f453c24cd2c5a68c" kindref="member">class_algorithm_infinite::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__base_1ab3e9bfaa0a5cf0810c3c7a074cfa9d69" kindref="member">cfg_algorithm_is_on</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">t_tot</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">tools::common::profile::t_tot</ref>-&gt;tic_token();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a2cabf133e43683569ef43b9639476dab" kindref="member">run_preprocessing</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1abdf68a4ae64f7302ad9e82a48d468e8a" kindref="member">run_simulation</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1aa7176e26e0dd793557a649fc6c0b75f1" kindref="member">run_postprocessing</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classclass__algorithm__infinite_1a2cabf133e43683569ef43b9639476dab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a2cabf133e43683569ef43b9639476dab" kindref="member">class_algorithm_infinite::run_preprocessing</ref>()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_pre<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" kindref="member">tools::common::profile::prof</ref>[<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>][</highlight><highlight class="stringliteral">&quot;t_pre&quot;</highlight><highlight class="normal">]-&gt;tic_token();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1acb3cddfa7b9f8e4657c92ee95f15352b" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a97d87cb8fcb7ddd09913e1cabdcd1394" kindref="member">randomize_model</ref>();<sp/></highlight><highlight class="comment">//<sp/>First<sp/>use<sp/>of<sp/>random!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a0a68686f23b45bcdc7c833a7bf348b54" kindref="member">init_bond_dimension_limits</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e" kindref="member">StorageReason::MODEL</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classclass__algorithm__infinite_1aa7176e26e0dd793557a649fc6c0b75f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1aa7176e26e0dd793557a649fc6c0b75f1" kindref="member">class_algorithm_infinite::run_postprocessing</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_pos<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" kindref="member">tools::common::profile::prof</ref>[<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>][</highlight><highlight class="stringliteral">&quot;t_pos&quot;</highlight><highlight class="normal">]-&gt;tic_token();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a2c616b2713e2e0aed04b4c4752c88133" kindref="member">StorageReason::FINISHED</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" kindref="member">copy_from_tmp</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a2c616b2713e2e0aed04b4c4752c88133" kindref="member">StorageReason::FINISHED</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a993724b938167db865be9b23f291b5d9" kindref="member">print_status_full</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1profile_1a7e72cdef9ec500e7110c9e2efa2be2d1" kindref="member">tools::common::profile::print_profiling</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classclass__algorithm__infinite_1a97d87cb8fcb7ddd09913e1cabdcd1394" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a97d87cb8fcb7ddd09913e1cabdcd1394" kindref="member">class_algorithm_infinite::randomize_model</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Randomizing<sp/>model&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1a5da46d4218b36d686d26e2075c2cb92f" kindref="member">randomize_model</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classclass__algorithm__infinite_1acb14ea81ee6e72bc06bd3fbd1627249b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1acb14ea81ee6e72bc06bd3fbd1627249b" kindref="member">class_algorithm_infinite::update_variance_max_digits</ref>(std::optional&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref>)<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref><sp/>=<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a2283571fb9ddaedbc3d50e89d946d522" kindref="member">tools::infinite::measure::energy_per_site_mpo</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>)*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1precision_1af241365d45c25fd1f464b664f358e982" kindref="member">settings::precision::use_reduced_energy</ref>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aecd580f42c5bc43cf968c3e540665463" kindref="member">energy_variance_max_digits</ref><sp/>=<sp/>std::floor(std::numeric_limits&lt;double&gt;::digits10<sp/>-<sp/>std::max(0.0,<sp/>std::log10(std::abs(<ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref>.value()))));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aecd580f42c5bc43cf968c3e540665463" kindref="member">energy_variance_max_digits</ref><sp/>=<sp/>std::floor(std::numeric_limits&lt;double&gt;::digits10<sp/>-<sp/>std::max(0.0,<sp/>std::log10(std::pow(<ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref>.value(),<sp/>2))));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a49499e18c7113953dc151e19b946c52d" kindref="member">energy_variance_prec_limit</ref><sp/>=<sp/>std::pow(10,-<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aecd580f42c5bc43cf968c3e540665463" kindref="member">energy_variance_max_digits</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classclass__algorithm__infinite_1a93e97af4e20920c9690ff47fe78ddd60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a93e97af4e20920c9690ff47fe78ddd60" kindref="member">class_algorithm_infinite::update_bond_dimension_limit</ref>(std::optional&lt;long&gt;<sp/>tmp_bond_limit)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp_bond_limit.has_value())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>=<sp/>tmp_bond_limit.value();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>chi_lim_now<sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chi_lim_now<sp/>&lt;<sp/><ref refid="classclass__algorithm__base_1a02248bae999554bcbbc84ba8bbaf6eb0" kindref="member">cfg_chi_lim_init</ref>())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Chi<sp/>limit<sp/>should<sp/>be<sp/>larger<sp/>than<sp/>chi<sp/>init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::exception<sp/>&amp;error)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>reached<sp/>this<sp/>stage,<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>chi_lim<sp/>is<sp/>not<sp/>initialized<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>chi_lim<sp/>is<sp/>initialized,<sp/>but<sp/>it<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>init<sp/>value<sp/>found<sp/>in<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>way,<sp/>we<sp/>should<sp/>set<sp/>chi_lim<sp/>to<sp/>be<sp/>chi_lim_init,<sp/>unless<sp/>cfg_chi_lim_init<sp/>is<sp/>larger<sp/>than<sp/>tmp_bond_limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Setting<sp/>initial<sp/>bond<sp/>dimension<sp/>limit:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a02248bae999554bcbbc84ba8bbaf6eb0" kindref="member">cfg_chi_lim_init</ref>());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__base_1a02248bae999554bcbbc84ba8bbaf6eb0" kindref="member">cfg_chi_lim_init</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa2a344f5ca3b3a6230d82fabd0936d92" kindref="member">chi_lim_init</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a02248bae999554bcbbc84ba8bbaf6eb0" kindref="member">cfg_chi_lim_init</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" kindref="member">chi_lim_has_reached_chi_max</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>&gt;=<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" kindref="member">chi_lim_has_reached_chi_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" kindref="member">cfg_chi_lim_grow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>the<sp/>settings<sp/>specify<sp/>to<sp/>grow<sp/>the<sp/>bond<sp/>dimension<sp/>limit<sp/>progressively<sp/>during<sp/>the<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>do<sp/>this<sp/>if<sp/>the<sp/>simulation<sp/>is<sp/>stuck.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Truncation<sp/>error<sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;get_truncation_error());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Bond<sp/>dimensions<sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;chiC());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;get_truncation_error()<sp/>&gt;<sp/>0.5<sp/>*<sp/><ref refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" kindref="member">settings::precision::svd_threshold</ref><sp/>and<sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;chiC()<sp/>&gt;=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>results<sp/>before<sp/>updating<sp/>bond<sp/>dimension<sp/>chi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backup_best_state(*state);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a897773140ef9a63d5de751d88edd0436" kindref="member">StorageReason::CHI_UPDATE</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>chi_new_limit<sp/>=<sp/>std::min(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Updating<sp/>bond<sp/>dimension<sp/>limit<sp/>{}<sp/>-&gt;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>,<sp/>chi_new_limit);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>=<sp/>chi_new_limit;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" kindref="member">chi_lim_has_reached_chi_max</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>==<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" kindref="member">copy_from_tmp</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;cfg_chi_lim_grow<sp/>is<sp/>ON,<sp/>and<sp/>simulation<sp/>is<sp/>stuck,<sp/>but<sp/>there<sp/>is<sp/>no<sp/>reason<sp/>to<sp/>increase<sp/>bond<sp/>dimension<sp/>-&gt;<sp/>Kept<sp/>current<sp/>bond<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dimension<sp/>limit<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Not<sp/>stuck<sp/>-&gt;<sp/>Kept<sp/>current<sp/>bond<sp/>dimension<sp/>limit<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>the<sp/>settings<sp/>specify<sp/>to<sp/>just<sp/>set<sp/>the<sp/>limit<sp/>to<sp/>maximum<sp/>chi<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Setting<sp/>bond<sp/>dimension<sp/>limit<sp/>to<sp/>maximum<sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Chi<sp/>limit<sp/>has<sp/>reached<sp/>max:<sp/>{}<sp/>-&gt;<sp/>Kept<sp/>current<sp/>bond<sp/>dimension<sp/>limit<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>(),<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>&gt;<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;chi_lim<sp/>is<sp/>larger<sp/>than<sp/>cfg_chi_lim_max!<sp/>{}<sp/>&gt;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>));</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>class_algorithm_infinite::update_bond_dimension_limit(std::optional&lt;long&gt;<sp/>max_bond_dim){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(not<sp/>max_bond_dim.has_value())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;debug(&quot;No<sp/>max<sp/>bond<sp/>dim<sp/>given,<sp/>setting<sp/>{}&quot;,<sp/>cfg_chi_lim_max());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_bond_dim<sp/>=<sp/>cfg_chi_lim_max();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>try{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>chi_lim_now<sp/>=<sp/>status.chi_lim;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(chi_lim_now<sp/>&lt;<sp/>cfg_chi_lim_init())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::logic_error(&quot;Chi<sp/>limit<sp/>should<sp/>be<sp/>larger<sp/>than<sp/>chi<sp/>init&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}catch(std::exception<sp/>&amp;error){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//If<sp/>we<sp/>reached<sp/>this<sp/>stage,<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>1)<sp/>chi_lim<sp/>is<sp/>not<sp/>initialized<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>2)<sp/>chi_lim<sp/>is<sp/>initialized,<sp/>but<sp/>it<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>init<sp/>value<sp/>found<sp/>in<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Either<sp/>way,<sp/>we<sp/>should<sp/>set<sp/>chi_lim<sp/>to<sp/>be<sp/>chi_lim_init,<sp/>unless<sp/>cfg_chi_lim_init<sp/>is<sp/>larger<sp/>than<sp/>max_bond_dim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;info(&quot;Setting<sp/>initial<sp/>bond<sp/>dimension<sp/>limit:<sp/>{}&quot;,<sp/>cfg_chi_lim_init());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors.state-&gt;set_chi_lim(std::min(max_bond_dim.value(),cfg_chi_lim_init()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.cfg_chi_lim_max<sp/>=<sp/>max_bond_dim.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.chi_lim<sp/>=<sp/>status.chi_lim;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>status.chi_lim_has_reached_chi_max<sp/>=<sp/>status.chi_lim<sp/>==<sp/>max_bond_dim;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(not<sp/>status.chi_lim_has_reached_chi_max){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(cfg_chi_lim_grow()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Here<sp/>the<sp/>settings<sp/>specify<sp/>to<sp/>grow<sp/>the<sp/>bond<sp/>dimension<sp/>limit<sp/>progressively<sp/>during<sp/>the<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Only<sp/>do<sp/>this<sp/>if<sp/>the<sp/>simulation<sp/>is<sp/>stuck.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(status.algorithm_has_got_stuck){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>chi_new_limit<sp/>=<sp/>std::min(max_bond_dim.value(),<sp/>status.chi_lim<sp/>*<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;debug(&quot;Updating<sp/>bond<sp/>dimension<sp/>limit<sp/>{}<sp/>-&gt;<sp/>{}&quot;,<sp/>status.chi_lim,<sp/>chi_new_limit);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors.state-&gt;set_chi_lim(chi_new_limit);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_convergence_status();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;debug(&quot;cfg_chi_lim_grow<sp/>is<sp/>ON<sp/>but<sp/>sim<sp/>is<sp/>not<sp/>stuck<sp/>-&gt;<sp/>Kept<sp/>current<sp/>bond<sp/>dimension<sp/>limit<sp/>{}&quot;,<sp/>status.chi_lim);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Here<sp/>the<sp/>settings<sp/>specify<sp/>to<sp/>just<sp/>set<sp/>the<sp/>limit<sp/>to<sp/>maximum<sp/>chi<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;debug(&quot;Setting<sp/>bond<sp/>dimension<sp/>limit<sp/>to<sp/>maximum<sp/>=<sp/>{}&quot;,<sp/>cfg_chi_lim_max());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors.state-&gt;set_chi_lim(max_bond_dim.value());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;debug(&quot;Chi<sp/>limit<sp/>has<sp/>reached<sp/>max:<sp/>{}<sp/>-&gt;<sp/>Kept<sp/>current<sp/>bond<sp/>dimension<sp/>limit<sp/>{}&quot;,<sp/>cfg_chi_lim_max(),state-&gt;get_chi_lim());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>status.cfg_chi_lim_max<sp/>=<sp/>max_bond_dim.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>status.chi_lim<sp/>=<sp/>status.chi_lim;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classclass__algorithm__infinite_1a2573591517d4f3874fa0ab7c6cbea2a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a2573591517d4f3874fa0ab7c6cbea2a8" kindref="member">class_algorithm_infinite::randomize_state</ref>(<ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11" kindref="member">ResetReason</ref><sp/>reason,<sp/>std::optional&lt;std::string&gt;<sp/>sector,<sp/>std::optional&lt;long&gt;<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref>,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;bool&gt;<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Resetting<sp/>to<sp/>random<sp/>product<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reason<sp/>==<sp/><ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11a5c290ac23e3d60150ad896708595fcb7" kindref="member">ResetReason::SATURATED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ad4b4ffe76b177cd283996700470a84de" kindref="member">num_resets</ref><sp/>&gt;=<sp/><ref refid="namespacesettings_1_1strategy_1a76327e2fce6635a9905107bf20ed8ae5" kindref="member">settings::strategy::max_resets</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Skipped<sp/>reset:<sp/>num<sp/>resets<sp/>{}<sp/>&gt;=<sp/>max<sp/>resets<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ad4b4ffe76b177cd283996700470a84de" kindref="member">num_resets</ref>,<sp/><ref refid="namespacesettings_1_1strategy_1a76327e2fce6635a9905107bf20ed8ae5" kindref="member">settings::strategy::max_resets</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ad4b4ffe76b177cd283996700470a84de" kindref="member">num_resets</ref>++;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>sector)<sp/>sector<sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref>)<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref><sp/>=<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">settings::input::bitfield</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref>)<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref><sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">settings::strategy::use_eigenspinors</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1a587457f03963fd8ee43f73eb166384c6" kindref="member">reset_to_random_product_state</ref>(sector.value(),<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref>.value(),<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref>.value());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Randomize<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" kindref="member">class_algorithm_infinite::clear_convergence_status</ref>()<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Clearing<sp/>saturation<sp/>status&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" kindref="member">var_mpo_iter</ref>.clear();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" kindref="member">var_ham_iter</ref>.clear();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" kindref="member">var_mom_iter</ref>.clear();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" kindref="member">entropy_iter</ref>.clear();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ab20a7a1af7d6f146f13dff0ad2d302b3" kindref="member">algorithm_has_finished</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" kindref="member">algorithm_has_succeeded</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0717b75fabecbe8f25b2d6b795ac0fde" kindref="member">algorithm_has_to_stop</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" kindref="member">algorithm_saturated_for</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a70442280f41b8930c1d4da6078dc3ea9" kindref="member">algorithm_converged_for</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" kindref="member">entanglement_converged_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" kindref="member">variance_mpo_converged_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a652bd0136323e931f1c01a30680c1fc3" kindref="member">variance_ham_converged_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0c91d6784e4ea3d5112f623fefc00dc3" kindref="member">variance_ham_saturated_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ac36092b2e1866813a3c7ab57758fffeb" kindref="member">variance_mom_converged_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ab0d0d580a505a8f12f8cb29c1f6812f9" kindref="member">variance_mom_saturated_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" kindref="member">chi_lim_has_reached_chi_max</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>class_algorithm_infinite::enlarge_environment()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tools::log-&gt;trace(&quot;Enlarging<sp/>environment&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tensors.insert_site_pair();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>class_algorithm_infinite::swap()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tools::log-&gt;trace(&quot;Swap<sp/>AB<sp/>sites<sp/>on<sp/>state&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tensors.state-&gt;enlarge();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classclass__algorithm__infinite_1a56ef1b5db54adc543de14e45914df2dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a56ef1b5db54adc543de14e45914df2dd" kindref="member">class_algorithm_infinite::check_convergence_variance_mpo</ref>(std::optional&lt;double&gt;<sp/>threshold,<sp/>std::optional&lt;double&gt;<sp/>sensitivity)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Checking<sp/>convergence<sp/>of<sp/>variance<sp/>mpo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>threshold)<sp/>threshold<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1ae7fb706e3fd5e6c63bd9ed074313224a" kindref="member">settings::precision::variance_convergence_threshold</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>sensitivity)<sp/>sensitivity<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a715185ed1f1d7ffce7a3f2837aca7223" kindref="member">settings::precision::variance_saturation_sensitivity</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" kindref="member">var_mpo_iter</ref>.emplace_back(<ref refid="namespacetools_1_1infinite_1_1measure_1a5fdaab6447c154cd9720d8b834170a6d" kindref="member">tools::infinite::measure::energy_variance_per_site_mpo</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" kindref="member">variance_mpo_converged_for</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" kindref="member">count_convergence</ref>(<ref refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" kindref="member">var_mpo_iter</ref>,threshold.value());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>report<sp/>=<sp/><ref refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" kindref="member">check_saturation</ref>(<ref refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" kindref="member">var_mpo_iter</ref>,<sp/>sensitivity.value());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(report.has_computed)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref><sp/>=<sp/>report.saturated_count;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classclass__algorithm__infinite_1a1981c6eb3dd36a72d4b9660a428124d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a1981c6eb3dd36a72d4b9660a428124d2" kindref="member">class_algorithm_infinite::check_convergence_variance_ham</ref>(std::optional&lt;double&gt;<sp/>threshold,<sp/>std::optional&lt;double&gt;<sp/>sensitivity)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>convergence<sp/>of<sp/>variance<sp/>ham&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>threshold)<sp/>threshold<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1ae7fb706e3fd5e6c63bd9ed074313224a" kindref="member">settings::precision::variance_convergence_threshold</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>sensitivity)<sp/>sensitivity<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a715185ed1f1d7ffce7a3f2837aca7223" kindref="member">settings::precision::variance_saturation_sensitivity</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" kindref="member">var_ham_iter</ref>.emplace_back(<ref refid="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" kindref="member">tools::infinite::measure::energy_variance_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a652bd0136323e931f1c01a30680c1fc3" kindref="member">variance_ham_converged_for</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" kindref="member">count_convergence</ref>(<ref refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" kindref="member">var_ham_iter</ref>,threshold.value());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>report<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" kindref="member">check_saturation</ref>(<ref refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" kindref="member">var_ham_iter</ref>,<sp/>sensitivity.value());</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(report.has_computed)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0c91d6784e4ea3d5112f623fefc00dc3" kindref="member">variance_ham_saturated_for</ref><sp/>=<sp/>report.saturated_count;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classclass__algorithm__infinite_1add59585709650152d0ab044fd88e715e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1add59585709650152d0ab044fd88e715e" kindref="member">class_algorithm_infinite::check_convergence_variance_mom</ref>(std::optional&lt;double&gt;<sp/>threshold,<sp/>std::optional&lt;double&gt;<sp/>sensitivity)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>convergence<sp/>of<sp/>variance<sp/>mom&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>threshold)<sp/>threshold<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1ae7fb706e3fd5e6c63bd9ed074313224a" kindref="member">settings::precision::variance_convergence_threshold</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>sensitivity)<sp/>sensitivity<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a715185ed1f1d7ffce7a3f2837aca7223" kindref="member">settings::precision::variance_saturation_sensitivity</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" kindref="member">var_mom_iter</ref>.emplace_back(<ref refid="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" kindref="member">tools::infinite::measure::energy_variance_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ac36092b2e1866813a3c7ab57758fffeb" kindref="member">variance_mom_converged_for</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" kindref="member">count_convergence</ref>(<ref refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" kindref="member">var_mom_iter</ref>,threshold.value());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>report<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" kindref="member">check_saturation</ref>(<ref refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" kindref="member">var_mom_iter</ref>,<sp/>sensitivity.value());</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(report.has_computed)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ab0d0d580a505a8f12f8cb29c1f6812f9" kindref="member">variance_mom_saturated_for</ref><sp/>=<sp/>report.saturated_count;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classclass__algorithm__infinite_1a678214cd778c2be70fc86cab66e406ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a678214cd778c2be70fc86cab66e406ae" kindref="member">class_algorithm_infinite::check_convergence_entg_entropy</ref>(std::optional&lt;double&gt;<sp/>sensitivity)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Checking<sp/>convergence<sp/>of<sp/>entanglement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>sensitivity)<sp/>sensitivity<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a34f76495a655f0d1f76755b8c5aa3633" kindref="member">settings::precision::entropy_saturation_sensitivity</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" kindref="member">entropy_iter</ref>.emplace_back(<ref refid="namespacetools_1_1infinite_1_1measure_1a5f7cd48eec3194c0d02aa53050d28f63" kindref="member">tools::infinite::measure::entanglement_entropy</ref>(*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>report<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" kindref="member">check_saturation</ref>(<ref refid="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" kindref="member">entropy_iter</ref>,<sp/>sensitivity.value());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(report.has_computed)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref><sp/>=<sp/>report.saturated_count;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" kindref="member">entanglement_converged_for</ref><sp/>=<sp/>report.saturated_count;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" kindref="member">class_algorithm_infinite::write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref><sp/>storage_reason,<sp/>std::optional&lt;CopyPolicy&gt;<sp/>copy_policy)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}/{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref>,<sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;get_name());<sp/></highlight><highlight class="comment">//<sp/>May<sp/>get<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_prefix<sp/>=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}/{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>table_prefxs<sp/>=<sp/>{fmt::format(</highlight><highlight class="stringliteral">&quot;{}/{}&quot;</highlight><highlight class="normal">,<sp/>state_prefix,<sp/></highlight><highlight class="stringliteral">&quot;tables&quot;</highlight><highlight class="normal">)};<sp/></highlight><highlight class="comment">//<sp/>Common<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(storage_reason)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a2c616b2713e2e0aed04b4c4752c88133" kindref="member">StorageReason::FINISHED</ref>:<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" kindref="member">algorithm_has_succeeded</ref>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a53db66979510d116e12e429852c23df7" kindref="member">settings::output::storage_level_good_state</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1ae406dc66f399d0c0e3902f7e9e81f8bc" kindref="member">settings::output::storage_level_fail_state</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/finished&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs.emplace_back(state_prefix);<sp/></highlight><highlight class="comment">//<sp/>Appends<sp/>to<sp/>its<sp/>own<sp/>table<sp/>as<sp/>well<sp/>as<sp/>the<sp/>common<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a083da148a19edd2e36a68d82c8e87377" kindref="member">StorageReason::SAVEPOINT</ref>:<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>,<sp/><ref refid="namespacesettings_1_1output_1ad5202a6741248d828cf767c4f4631bc8" kindref="member">settings::output::savepoint_frequency</ref>)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/savepoint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a3fd8aec52aa269851a694889bcccddce" kindref="member">settings::output::storage_level_savepoint</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1output_1a2856ae621b13993f89f10592ac0de3ba" kindref="member">settings::output::savepoint_keep_newest_only</ref>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/iter_last&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;/iter_{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs.emplace_back(state_prefix);<sp/></highlight><highlight class="comment">//<sp/>Appends<sp/>to<sp/>its<sp/>own<sp/>table<sp/>as<sp/>well<sp/>as<sp/>the<sp/>common<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a0f15e1247e93ddfa95c008106eb0d22f" kindref="member">StorageReason::CHECKPOINT</ref>:<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>,<sp/><ref refid="namespacesettings_1_1output_1ad85175fd319fb912f37941b0cc5117b5" kindref="member">settings::output::checkpoint_frequency</ref>)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/checkpoint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a3cbc247c13365395ccf3b64df8051dfc" kindref="member">settings::output::storage_level_checkpoint</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1output_1a8f8d5bc74d093621d32d071760fa35e7" kindref="member">settings::output::checkpoint_keep_newest_only</ref>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/iter_last&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;/iter_{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs.emplace_back(state_prefix);<sp/></highlight><highlight class="comment">//<sp/>Appends<sp/>to<sp/>its<sp/>own<sp/>table<sp/>as<sp/>well<sp/>as<sp/>the<sp/>common<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a897773140ef9a63d5de751d88edd0436" kindref="member">StorageReason::CHI_UPDATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" kindref="member">cfg_chi_lim_grow</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a3cbc247c13365395ccf3b64df8051dfc" kindref="member">settings::output::storage_level_checkpoint</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;/checkpoint/chi_{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Should<sp/>not<sp/>pollute<sp/>tables<sp/>other<sp/>than<sp/>its<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a786913b585b4a8a603375da88293b140" kindref="member">StorageReason::PROJ_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a5be0e26e29c2bb54e41789a5896583ca" kindref="member">settings::output::storage_level_proj_state</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/projection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Should<sp/>not<sp/>pollute<sp/>tables<sp/>other<sp/>than<sp/>its<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a67a088c9d3535b13104e21e618f59382" kindref="member">StorageReason::INIT_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a82a9057be394d13264d9213aa909ef5c" kindref="member">settings::output::storage_level_init_state</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/state_init&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Should<sp/>not<sp/>pollute<sp/>tables<sp/>other<sp/>than<sp/>its<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01aed63a7bd13e4906bc2e1bbe74f89ac5a" kindref="member">StorageReason::EMIN_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a9d632b055bf34f4a8cb2a8b393682774" kindref="member">settings::output::storage_level_emin_state</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/><sp/>=<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/state_emin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/><sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Should<sp/>not<sp/>pollute<sp/>tables<sp/>other<sp/>than<sp/>its<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01ae33d0e9926067a3fcfd37361b6b30f9f" kindref="member">StorageReason::EMAX_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a47e6a89a65d530cf23d22088b19f3150" kindref="member">settings::output::storage_level_emax_state</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/><sp/>=<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/state_emax&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/><sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Should<sp/>not<sp/>pollute<sp/>tables<sp/>other<sp/>than<sp/>its<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e" kindref="member">StorageReason::MODEL</ref>:<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a1f406e829d64fd245a9856b91025cdfb" kindref="member">settings::output::storage_level_model</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1io_1_1h5table_1ae7ca8e3c520b6c8b548d8338318bb8a2" kindref="member">tools::infinite::io::h5table::save_model</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>model_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/hamiltonian&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/>*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1a9d1de037ae9f00fa93ccab4703ea0ab4" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1io_1_1h5dset_1a6d959bea50d5c72f3acb66129ab7b391" kindref="member">tools::infinite::io::h5dset::save_model</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>model_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/mpo&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/>*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1a9d1de037ae9f00fa93ccab4703ea0ab4" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" kindref="member">copy_from_tmp</ref>(storage_reason,<sp/><ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5a59dfb83f7cac4e3c8ee91700ef2ad90d" kindref="member">CopyPolicy::TRY</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(storage_level<sp/>==<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693" kindref="member">StorageLevel::NONE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(state_prefix.empty())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;State<sp/>prefix<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Writing<sp/>to<sp/>file:<sp/>Reason<sp/>[{}]<sp/>|<sp/>Level<sp/>[{}]<sp/>|<sp/>hdf5<sp/>prefix<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(storage_reason),<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(storage_level),<sp/>state_prefix);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>saving<sp/>tensors<sp/>and<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1io_1_1h5dset_1af475da87a81f10ad432cc0fe9496e46f" kindref="member">tools::infinite::io::h5dset::save_state</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>state_prefix,<sp/>storage_level,<sp/>*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1io_1_1h5dset_1af66d5418871e252b8d543b4ed4c53c3f" kindref="member">tools::infinite::io::h5dset::save_edges</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>state_prefix,<sp/>storage_level,<sp/>*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1a993ea5f77d1fa220ca70c7c6c9508395" kindref="member">edges</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1io_1_1h5attr_1ad3d6b8303c5a1215fa858eb9c6329f7d" kindref="member">tools::common::io::h5attr::save_meta</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>storage_level,<sp/>storage_reason,<sp/><ref refid="namespacesettings_1_1model_1a3628af587c3663ba75c2a3d6db7e16e6" kindref="member">settings::model::model_type</ref>,<sp/><ref refid="namespacesettings_1_1model_1aabf0ff2a07a4b8ae7e4141b1bde089cd" kindref="member">settings::model::model_size</ref>,<sp/><ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;get_name(),<sp/>state_prefix,<sp/>model_prefix,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>storage<sp/>reasons<sp/>should<sp/>not<sp/>go<sp/>further.<sp/>Like<sp/>projection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(storage_reason<sp/>==<sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a786913b585b4a8a603375da88293b140" kindref="member">StorageReason::PROJ_STATE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>results<sp/>have<sp/>now<sp/>been<sp/>written.<sp/>Next<sp/>we<sp/>append<sp/>data<sp/>to<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;table_prefix<sp/>:<sp/>table_prefxs)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1io_1_1h5table_1a86c401e36a3f72cd6bc55dd3e622f636" kindref="member">tools::infinite::io::h5table::save_measurements</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>table_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/measurements&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1io_1_1h5table_1abefbaf505a95184bb7937d53aaf05f57" kindref="member">tools::infinite::io::h5table::save_sim_status</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>table_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/status&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1io_1_1h5table_1aeb25cdda20da592e9ab80794779f6dd2" kindref="member">tools::infinite::io::h5table::save_profiling</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>table_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/profiling&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1io_1_1h5table_1a9a465909d2a0f63a1287ad58ca0f1639" kindref="member">tools::infinite::io::h5table::save_mem_usage</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>table_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/mem_usage&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>from<sp/>temporary<sp/>location<sp/>to<sp/>destination<sp/>depending<sp/>on<sp/>given<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" kindref="member">copy_from_tmp</ref>(storage_reason,<sp/>copy_policy);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classclass__algorithm__infinite_1af232e6d037549f0aae338b402aa9c722" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1af232e6d037549f0aae338b402aa9c722" kindref="member">class_algorithm_infinite::print_status_update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>,<sp/><ref refid="classclass__algorithm__base_1a1ff5ab0d312d132dd30243885d07dbd1" kindref="member">cfg_print_freq</ref>())<sp/>!=<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a1ff5ab0d312d132dd30243885d07dbd1" kindref="member">cfg_print_freq</ref>()<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>compute_observables();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>report;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:&lt;}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;get_name());</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;iter:<sp/>{:&lt;4}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;step:<sp/>{:&lt;5}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0071e2c8a215558eadd08fe35d5591ef" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a9e28dfcb9c190549d7cf8ec4b986ea8f" kindref="member">AlgorithmType::iDMRG</ref>:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;E/L:<sp/>mpo<sp/>{:&lt;20.16f}<sp/>ham<sp/>{:&lt;20.16f}<sp/>mom<sp/>{:&lt;20.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a2283571fb9ddaedbc3d50e89d946d522" kindref="member">tools::infinite::measure::energy_per_site_mpo</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a5f97c023ac5900d6961a0f23a51123d5" kindref="member">tools::infinite::measure::energy_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>),<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a564124518e60fd2f24f8b50b55ac3b63" kindref="member">tools::infinite::measure::energy_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a0bb0414b61270ee9c22f21b2f93b8f0f" kindref="member">AlgorithmType::iTEBD</ref>:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;E/L:<sp/>ham<sp/>{:&lt;20.16f}<sp/>mom<sp/>{:&lt;20.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a5f97c023ac5900d6961a0f23a51123d5" kindref="member">tools::infinite::measure::energy_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>),</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a564124518e60fd2f24f8b50b55ac3b63" kindref="member">tools::infinite::measure::energy_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>simulation<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a9e28dfcb9c190549d7cf8ec4b986ea8f" kindref="member">AlgorithmType::iDMRG</ref>:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>σ²(E):<sp/>mpo<sp/>{:&lt;10.6f}<sp/>ham<sp/>{:&lt;10.6f}<sp/>mom<sp/>{:&lt;10.6f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a5fdaab6447c154cd9720d8b834170a6d" kindref="member">tools::infinite::measure::energy_variance_per_site_mpo</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>),</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" kindref="member">tools::infinite::measure::energy_variance_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>),<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" kindref="member">tools::infinite::measure::energy_variance_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a0bb0414b61270ee9c22f21b2f93b8f0f" kindref="member">AlgorithmType::iTEBD</ref>:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>σ²(E):<sp/>ham<sp/>{:&lt;10.6f}<sp/>mom<sp/>{:&lt;10.6f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" kindref="member">tools::infinite::measure::energy_variance_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>),</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" kindref="member">tools::infinite::measure::energy_variance_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>simulation<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;Sₑ(l):<sp/>{:&lt;10.8f}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a5f7cd48eec3194c0d02aa53050d28f63" kindref="member">tools::infinite::measure::entanglement_entropy</ref>(*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;χmax:<sp/>{:&lt;3}<sp/>χlim:<sp/>{:&lt;3}<sp/>χ:<sp/>{:&lt;3}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>(),<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a64e18edd16eb044bcaf44469bc885ecf" kindref="member">tools::infinite::measure::bond_dimension</ref>(*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>trunc:<sp/>{:&lt;10.4f}<sp/>&quot;</highlight><highlight class="normal">,<sp/>std::log10(<ref refid="namespacetools_1_1infinite_1_1measure_1a860d7ed08bbc15df634ab137a7b32eb7" kindref="member">tools::infinite::measure::truncation_error</ref>(*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>)));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;Sites:<sp/>{:6}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1af4d8290bbbb41fb3a1eddd94036691e5" kindref="member">get_length</ref>());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;stk:<sp/>{:&lt;1}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;sat:<sp/>[σ²<sp/>{:&lt;1}<sp/>Sₑ<sp/>{:&lt;1}]<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a9e28dfcb9c190549d7cf8ec4b986ea8f" kindref="member">AlgorithmType::iDMRG</ref>:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;sat:<sp/>[σ²<sp/>{:&lt;1}<sp/>Sₑ<sp/>{:&lt;1}]<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a0bb0414b61270ee9c22f21b2f93b8f0f" kindref="member">AlgorithmType::iTEBD</ref>:<sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;sat:<sp/>[Sₑ<sp/>{:&lt;1}]<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>simulation<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;con:<sp/>{:&lt;4}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a70442280f41b8930c1d4da6078dc3ea9" kindref="member">algorithm_converged_for</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;time:{:&gt;8.2f}s<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">tools::common::profile::t_tot</ref>-&gt;get_measured_time());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;mem:<sp/>[rss<sp/>{:&lt;.1f}<sp/>peak<sp/>{:&lt;.1f}<sp/>vm<sp/>{:&lt;.1f}]<sp/>MB<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1common_1_1profile_1a61312a9c72e719580b551122f0ac1e33" kindref="member">tools::common::profile::mem_rss_in_mb</ref>(),<sp/><ref refid="namespacetools_1_1common_1_1profile_1afd7671b1a2c5267039b7ebcac14e4f46" kindref="member">tools::common::profile::mem_hwm_in_mb</ref>(),</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1profile_1a6f1f875a4b0d19fe53aa9c97d11182c1" kindref="member">tools::common::profile::mem_vm_in_mb</ref>());</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(report);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="classclass__algorithm__infinite_1a993724b938167db865be9b23f291b5d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a993724b938167db865be9b23f291b5d9" kindref="member">class_algorithm_infinite::print_status_full</ref>()<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>compute_observables();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>-&gt;do_all_measurements();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1infinite_1_1measure" kindref="compound">tools::infinite::measure</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;---<sp/>Final<sp/>results<sp/><sp/>---<sp/>{}<sp/>---&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Iterations<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16d}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a9e28dfcb9c190549d7cf8ec4b986ea8f" kindref="member">AlgorithmType::iDMRG</ref>:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>MPO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a2283571fb9ddaedbc3d50e89d946d522" kindref="member">tools::infinite::measure::energy_per_site_mpo</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>HAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a5f97c023ac5900d6961a0f23a51123d5" kindref="member">tools::infinite::measure::energy_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>MOM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a564124518e60fd2f24f8b50b55ac3b63" kindref="member">tools::infinite::measure::energy_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a0bb0414b61270ee9c22f21b2f93b8f0f" kindref="member">AlgorithmType::iTEBD</ref>:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>HAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a5f97c023ac5900d6961a0f23a51123d5" kindref="member">tools::infinite::measure::energy_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>MOM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a564124518e60fd2f24f8b50b55ac3b63" kindref="member">tools::infinite::measure::energy_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>simulation<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a9e28dfcb9c190549d7cf8ec4b986ea8f" kindref="member">AlgorithmType::iDMRG</ref>:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>σ²(E)<sp/>MPO<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(<ref refid="namespacetools_1_1infinite_1_1measure_1a5fdaab6447c154cd9720d8b834170a6d" kindref="member">tools::infinite::measure::energy_variance_per_site_mpo</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>)));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>σ²(E)<sp/>HAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(<ref refid="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" kindref="member">tools::infinite::measure::energy_variance_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>)));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>σ²(E)<sp/>MOM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(<ref refid="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" kindref="member">tools::infinite::measure::energy_variance_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>)));</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a0bb0414b61270ee9c22f21b2f93b8f0f" kindref="member">AlgorithmType::iTEBD</ref>:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>σ²(E)<sp/>HAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(<ref refid="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" kindref="member">tools::infinite::measure::energy_variance_per_site_ham</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>)));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>σ²(E)<sp/>MOM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(<ref refid="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" kindref="member">tools::infinite::measure::energy_variance_per_site_mom</ref>(<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>)));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>simulation<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Entanglement<sp/>Entropy<sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a5f7cd48eec3194c0d02aa53050d28f63" kindref="member">tools::infinite::measure::entanglement_entropy</ref>(*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;χmax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16d}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>());</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;χ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16d}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1infinite_1_1measure_1a64e18edd16eb044bcaf44469bc885ecf" kindref="member">tools::infinite::measure::bond_dimension</ref>(*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>truncation:<sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/>log10(std::log10(<ref refid="namespacetools_1_1infinite_1_1measure_1a860d7ed08bbc15df634ab137a7b32eb7" kindref="member">tools::infinite::measure::truncation_error</ref>(*<ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>.<ref refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" kindref="member">state</ref>))));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a9e28dfcb9c190549d7cf8ec4b986ea8f" kindref="member">AlgorithmType::iDMRG</ref>:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a0bb0414b61270ee9c22f21b2f93b8f0f" kindref="member">AlgorithmType::iTEBD</ref>:<sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;δt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aeac0c89f563454766e7ca0aee016baf7" kindref="member">delta_t</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>simulation<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>succeeded<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" kindref="member">algorithm_has_succeeded</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>saturated<sp/>for<sp/><sp/>=<sp/>{:&lt;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" kindref="member">algorithm_saturated_for</ref>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>converged<sp/>for<sp/><sp/>=<sp/>{:&lt;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a70442280f41b8930c1d4da6078dc3ea9" kindref="member">algorithm_converged_for</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>has<sp/>stuck<sp/>for<sp/><sp/>=<sp/>{:&lt;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;σ²<sp/>MPO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Converged<sp/>:<sp/>{:&lt;4}<sp/><sp/>Saturated:<sp/>{:&lt;4}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" kindref="member">variance_mpo_converged_for</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;σ²<sp/>HAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Converged<sp/>:<sp/>{:&lt;4}<sp/><sp/>Saturated:<sp/>{:&lt;4}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a652bd0136323e931f1c01a30680c1fc3" kindref="member">variance_ham_converged_for</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0c91d6784e4ea3d5112f623fefc00dc3" kindref="member">variance_ham_saturated_for</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;σ²<sp/>MOM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Converged<sp/>:<sp/>{:&lt;4}<sp/><sp/>Saturated:<sp/>{:&lt;4}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ac36092b2e1866813a3c7ab57758fffeb" kindref="member">variance_mom_converged_for</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ab0d0d580a505a8f12f8cb29c1f6812f9" kindref="member">variance_mom_saturated_for</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Sₑ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Converged<sp/>:<sp/>{:&lt;4}<sp/><sp/>Saturated:<sp/>{:&lt;4}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" kindref="member">entanglement_converged_for</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;16.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">tools::common::profile::t_tot</ref>-&gt;get_age());</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Peak<sp/>memory<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;6.1f}<sp/>MB&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1common_1_1profile_1afd7671b1a2c5267039b7ebcac14e4f46" kindref="member">tools::common::profile::mem_hwm_in_mb</ref>());</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp"/>
  </compounddef>
</doxygen>
