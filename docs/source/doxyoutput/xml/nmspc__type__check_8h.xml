<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="nmspc__type__check_8h" kind="file" language="C++">
    <compoundname>nmspc_type_check.h</compoundname>
    <includes local="no">experimental/type_traits</includes>
    <includes local="no">Eigen/Core</includes>
    <includes local="no">unsupported/Eigen/CXX11/Tensor</includes>
    <includedby refid="nmspc__tensor__extra_8h" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_tensor_extra.h</includedby>
    <includedby refid="arpackpp__solver_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/math/arpack_extra/arpackpp_solver.cpp</includedby>
    <includedby refid="ceres__direct__functor_8h" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ceres_direct_functor.h</includedby>
    <incdepgraph>
      <node id="828">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="829" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="831" relation="include">
        </childnode>
      </node>
      <node id="830">
        <label>Eigen/Core</label>
      </node>
      <node id="829">
        <label>experimental/type_traits</label>
      </node>
      <node id="831">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="854">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp</label>
        <link refid="class__f_d_m_r_g_8cpp"/>
      </node>
      <node id="859">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/io/h5pp_tables.cpp</label>
        <link refid="finite_2io_2h5pp__tables_8cpp"/>
      </node>
      <node id="882">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/math/class_svd_wrapper.h</label>
        <link refid="class__svd__wrapper_8h"/>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
      </node>
      <node id="868">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ceres_direct_functor.cpp</label>
        <link refid="ceres__direct__functor_8cpp"/>
      </node>
      <node id="892">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp</label>
        <link refid="class__selfdual__tf__rf__ising__normal_8cpp"/>
      </node>
      <node id="835">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_algorithm_infinite.cpp</label>
        <link refid="class__algorithm__infinite_8cpp"/>
      </node>
      <node id="870">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ceres_subspace_functor.cpp</label>
        <link refid="ceres__subspace__functor_8cpp"/>
      </node>
      <node id="862">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/mps-internals.cpp</label>
        <link refid="mps-internals_8cpp"/>
      </node>
      <node id="865">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/ops.cpp</label>
        <link refid="ops_8cpp"/>
      </node>
      <node id="886">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_tf_ising.h</label>
        <link refid="class__tf__ising_8h"/>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
      </node>
      <node id="852">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_finite.h</label>
        <link refid="class__state__finite_8h"/>
        <childnode refid="853" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
      </node>
      <node id="866">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ceres_base.cpp</label>
        <link refid="ceres__base_8cpp"/>
      </node>
      <node id="860">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/measure.cpp</label>
        <link refid="finite_2measure_8cpp"/>
      </node>
      <node id="873">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt.cpp</label>
        <link refid="finite_2opt_8cpp"/>
      </node>
      <node id="885">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_base.cpp</label>
        <link refid="class__model__base_8cpp"/>
      </node>
      <node id="878">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_mps_2site.cpp</label>
        <link refid="class__mps__2site_8cpp"/>
      </node>
      <node id="856">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_finite.cpp</label>
        <link refid="class__state__finite_8cpp"/>
      </node>
      <node id="846">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/measure.cpp</label>
        <link refid="infinite_2measure_8cpp"/>
      </node>
      <node id="890">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising.cpp</label>
        <link refid="class__selfdual__tf__rf__ising_8cpp"/>
      </node>
      <node id="879">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_quantum_mechanics.cpp</label>
        <link refid="nmspc__quantum__mechanics_8cpp"/>
      </node>
      <node id="842">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/debug.cpp</label>
        <link refid="infinite_2debug_8cpp"/>
      </node>
      <node id="839">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_infinite.cpp</label>
        <link refid="class__state__infinite_8cpp"/>
      </node>
      <node id="832">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="840">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/common/views.cpp</label>
        <link refid="views_8cpp"/>
      </node>
      <node id="844">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/io/h5pp.cpp</label>
        <link refid="infinite_2io_2h5pp_8cpp"/>
      </node>
      <node id="838">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_iTEBD.cpp</label>
        <link refid="class__i_t_e_b_d_8cpp"/>
      </node>
      <node id="874">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/print.cpp</label>
        <link refid="finite_2print_8cpp"/>
      </node>
      <node id="894">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ceres_direct_functor.h</label>
        <link refid="ceres__direct__functor_8h"/>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
      </node>
      <node id="841">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/io/h5pp.cpp</label>
        <link refid="finite_2io_2h5pp_8cpp"/>
      </node>
      <node id="888">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_tf_ising.cpp</label>
        <link refid="class__tf__ising_8cpp"/>
      </node>
      <node id="858">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/io/h5pp_restore.cpp</label>
        <link refid="h5pp__restore_8cpp"/>
      </node>
      <node id="851">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_environment.h</label>
        <link refid="class__environment_8h"/>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
      </node>
      <node id="853">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_algorithm_finite.cpp</label>
        <link refid="class__algorithm__finite_8cpp"/>
      </node>
      <node id="876">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_environment.cpp</label>
        <link refid="class__environment_8cpp"/>
      </node>
      <node id="889">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising.h</label>
        <link refid="class__selfdual__tf__rf__ising_8h"/>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
      </node>
      <node id="855">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_xDMRG.cpp</label>
        <link refid="class__x_d_m_r_g_8cpp"/>
      </node>
      <node id="880">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/math/arpack_extra/matrix_product_hamiltonian.h</label>
        <link refid="matrix__product__hamiltonian_8h"/>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
      </node>
      <node id="845">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/io/h5pp_tables.cpp</label>
        <link refid="infinite_2io_2h5pp__tables_8cpp"/>
      </node>
      <node id="881">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/math/arpack_extra/arpackpp_solver.cpp</label>
        <link refid="arpackpp__solver_8cpp"/>
      </node>
      <node id="891">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h</label>
        <link refid="class__selfdual__tf__rf__ising__normal_8h"/>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="883">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/math/class_svd_wrapper.cpp</label>
        <link refid="class__svd__wrapper_8cpp"/>
      </node>
      <node id="834">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_infinite.h</label>
        <link refid="class__state__infinite_8h"/>
        <childnode refid="835" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
      </node>
      <node id="836">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_algorithm_launcher.cpp</label>
        <link refid="class__algorithm__launcher_8cpp"/>
      </node>
      <node id="887">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_model_factory.cpp</label>
        <link refid="class__model__factory_8cpp"/>
      </node>
      <node id="861">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/mpo.cpp</label>
        <link refid="finite_2mpo_8cpp"/>
      </node>
      <node id="871">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ceres_subspace_hamiltonian.cpp</label>
        <link refid="ceres__subspace__hamiltonian_8cpp"/>
      </node>
      <node id="877">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_mps_2site.h</label>
        <link refid="class__mps__2site_8h"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
      </node>
      <node id="867">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ceres_direct.cpp</label>
        <link refid="ceres__direct_8cpp"/>
      </node>
      <node id="848">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/mps.cpp</label>
        <link refid="infinite_2mps_8cpp"/>
      </node>
      <node id="869">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ceres_subspace.cpp</label>
        <link refid="ceres__subspace_8cpp"/>
      </node>
      <node id="843">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/env.cpp</label>
        <link refid="env_8cpp"/>
      </node>
      <node id="837">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_iDMRG.cpp</label>
        <link refid="class__i_d_m_r_g_8cpp"/>
      </node>
      <node id="857">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/debug.cpp</label>
        <link refid="finite_2debug_8cpp"/>
      </node>
      <node id="875">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/svd.cpp</label>
        <link refid="svd_8cpp"/>
      </node>
      <node id="850">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/print.cpp</label>
        <link refid="infinite_2print_8cpp"/>
      </node>
      <node id="864">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/multisite.cpp</label>
        <link refid="multisite_8cpp"/>
      </node>
      <node id="847">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/mpo.cpp</label>
        <link refid="infinite_2mpo_8cpp"/>
      </node>
      <node id="884">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/math/class_svd_wrapper_lapacke.cpp</label>
        <link refid="class__svd__wrapper__lapacke_8cpp"/>
      </node>
      <node id="833">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
      </node>
      <node id="872">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt-internals/ground_state.cpp</label>
        <link refid="ground__state_8cpp"/>
      </node>
      <node id="893">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_mps_site.cpp</label>
        <link refid="class__mps__site_8cpp"/>
      </node>
      <node id="863">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/mps.cpp</label>
        <link refid="finite_2mps_8cpp"/>
      </node>
      <node id="849">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/opt.cpp</label>
        <link refid="infinite_2opt_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_type_check_1_1is__vector" prot="public">TypeCheck::is_vector</innerclass>
    <innerclass refid="struct_type_check_1_1is__vector_3_01std_1_1vector_3_01_t_01_4_01_4" prot="public">TypeCheck::is_vector&lt; std::vector&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1is__specialization" prot="public">TypeCheck::is_specialization</innerclass>
    <innerclass refid="struct_type_check_1_1is__specialization_3_01_ref_3_01_args_8_8_8_01_4_00_01_ref_01_4" prot="public">TypeCheck::is_specialization&lt; Ref&lt; Args... &gt;, Ref &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__tensor" prot="public">TypeCheck::is_eigen_tensor</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__tensor_3_01_eigen_1_1_tensor_3_01_scalar_00_01rank_00_01storage_00_01_index_type_01_4_01_4" prot="public">TypeCheck::is_eigen_tensor&lt; Eigen::Tensor&lt; Scalar, rank, storage, IndexType &gt; &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__matrix" prot="public">TypeCheck::is_eigen_matrix</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__matrix_3_01_eigen_1_1_matrix_3_01_t_00_01rows_00_01cols_00_01_storage_order_01_4_01_4" prot="public">TypeCheck::is_eigen_matrix&lt; Eigen::Matrix&lt; T, rows, cols, StorageOrder &gt; &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__array" prot="public">TypeCheck::is_eigen_array</innerclass>
    <innerclass refid="struct_type_check_1_1is__eigen__array_3_01_eigen_1_1_array_3_01_t_00_01rows_00_01cols_00_01_storage_order_01_4_01_4" prot="public">TypeCheck::is_eigen_array&lt; Eigen::Array&lt; T, rows, cols, StorageOrder &gt; &gt;</innerclass>
    <innerclass refid="struct_type_check_1_1print__type__and__exit__compile__time" prot="public">TypeCheck::print_type_and_exit_compile_time</innerclass>
    <innernamespace refid="namespace_type_check">TypeCheck</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2018-02-06.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;experimental/type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unsupported/Eigen/CXX11/Tensor&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespace_type_check" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_type_check" kindref="compound">TypeCheck</ref>{</highlight></codeline>
<codeline lineno="12" refid="namespace_type_check_1a5c4b13e9f3e58d562c848d4e043b3021" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1a5c4b13e9f3e58d562c848d4e043b3021" kindref="member">Data_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>decltype(std::declval&lt;T&gt;().data());</highlight></codeline>
<codeline lineno="13" refid="namespace_type_check_1a5b48e055ebff354780d37d85b614501c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1a5b48e055ebff354780d37d85b614501c" kindref="member">Size_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>decltype(std::declval&lt;T&gt;().size());</highlight></codeline>
<codeline lineno="14" refid="namespace_type_check_1ae5e7bf3df22f575d35d78a45b9a8f54d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1ae5e7bf3df22f575d35d78a45b9a8f54d" kindref="member">Cstr_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>decltype(std::declval&lt;T&gt;().c_str());</highlight></codeline>
<codeline lineno="15" refid="namespace_type_check_1a8a65c248e341fece2d466cca8e6c4090" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1a8a65c248e341fece2d466cca8e6c4090" kindref="member">Imag_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>decltype(std::declval&lt;T&gt;().imag());</highlight></codeline>
<codeline lineno="16" refid="namespace_type_check_1afba6d111f934a518472743c1c85aa450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1afba6d111f934a518472743c1c85aa450" kindref="member">Scal_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class__algorithm__base_8cpp_1a528e55cc6b435f7efe6750d6faa36cd6" kindref="member">T::Scalar</ref>;</highlight></codeline>
<codeline lineno="17" refid="namespace_type_check_1af7c6e5e9d9492ac1f52808cc0cf82847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1af7c6e5e9d9492ac1f52808cc0cf82847" kindref="member">Valt_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::value_type;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespace_type_check_1a7fab9bae09a9a1780d5811a39d65e1ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1a7fab9bae09a9a1780d5811a39d65e1ce" kindref="member">has_member_data</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::experimental::is_detected&lt;Data_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="20" refid="namespace_type_check_1adf9e7896f673211b9a8e09aa6a2f7d50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1adf9e7896f673211b9a8e09aa6a2f7d50" kindref="member">has_member_size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::experimental::is_detected&lt;Size_t,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="21" refid="namespace_type_check_1a9c01daf500c30c3a32e465c2903fa19a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1a9c01daf500c30c3a32e465c2903fa19a" kindref="member">has_member_scalar</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::experimental::is_detected&lt;Scal_t<sp/>,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="22" refid="namespace_type_check_1a11011470526cd2f482b0a2c34ee32a69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1a11011470526cd2f482b0a2c34ee32a69" kindref="member">has_member_value_type</ref><sp/><sp/><sp/>=<sp/>std::experimental::is_detected&lt;Valt_t<sp/>,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="23" refid="namespace_type_check_1ab056ae61761e6fdaded77a48d75dbf95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1ab056ae61761e6fdaded77a48d75dbf95" kindref="member">has_member_c_str</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::experimental::is_detected&lt;Cstr_t<sp/>,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="24" refid="namespace_type_check_1add291358dc6306095fdf5a45f3e750a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1add291358dc6306095fdf5a45f3e750a9" kindref="member">has_member_imag</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::experimental::is_detected&lt;Imag_t<sp/>,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="struct_type_check_1_1is__vector" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__vector" kindref="compound">is_vector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="28" refid="struct_type_check_1_1is__vector_3_01std_1_1vector_3_01_t_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__vector" kindref="compound">is_vector</ref>&lt;<ref refid="namespacestd" kindref="compound">std</ref>::vector&lt;T&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Test,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Ref&gt;</highlight></codeline>
<codeline lineno="31" refid="struct_type_check_1_1is__specialization" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__specialization" kindref="compound">is_specialization</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Ref,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="33" refid="struct_type_check_1_1is__specialization_3_01_ref_3_01_args_8_8_8_01_4_00_01_ref_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__specialization" kindref="compound">is_specialization</ref>&lt;Ref&lt;Args...&gt;,<sp/>Ref&gt;:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="struct_type_check_1_1is__eigen__tensor" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__eigen__tensor" kindref="compound">is_eigen_tensor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>storage,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexType&gt;</highlight></codeline>
<codeline lineno="38" refid="struct_type_check_1_1is__eigen__tensor_3_01_eigen_1_1_tensor_3_01_scalar_00_01rank_00_01storage_00_01_index_type_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__eigen__tensor" kindref="compound">is_eigen_tensor</ref>&lt;<ref refid="namespace_eigen" kindref="compound">Eigen</ref>::Tensor&lt;Scalar,<sp/>rank,<sp/>storage,IndexType&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type{};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_type_check_1_1is__eigen__matrix" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__eigen__matrix" kindref="compound">is_eigen_matrix</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="44" refid="struct_type_check_1_1is__eigen__matrix_3_01_eigen_1_1_matrix_3_01_t_00_01rows_00_01cols_00_01_storage_order_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StorageOrder&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__eigen__matrix" kindref="compound">is_eigen_matrix</ref>&lt;Eigen::Matrix&lt;T,rows,cols,StorageOrder&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="struct_type_check_1_1is__eigen__array" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__eigen__array" kindref="compound">is_eigen_array</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="47" refid="struct_type_check_1_1is__eigen__array_3_01_eigen_1_1_array_3_01_t_00_01rows_00_01cols_00_01_storage_order_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StorageOrder&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1is__eigen__array" kindref="compound">is_eigen_array</ref>&lt;Eigen::Array&lt;T,rows,cols,StorageOrder&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="50" refid="namespace_type_check_1a9db1936a588f77f1f13e313da75f9529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1a9db1936a588f77f1f13e313da75f9529" kindref="member">is_eigen_matrix_or_array</ref>(){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(<ref refid="struct_type_check_1_1is__eigen__matrix" kindref="compound">is_eigen_matrix&lt;T&gt;::value</ref><sp/>or</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_type_check_1_1is__eigen__array" kindref="compound">is_eigen_array&lt;T&gt;::value</ref><sp/>){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="60" refid="namespace_type_check_1a64c1255e6eb16f0f11aa34653745a4b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespace_type_check_1a64c1255e6eb16f0f11aa34653745a4b7" kindref="member">is_complex</ref>(){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_type_check_1_1is__specialization" kindref="compound">is_specialization&lt;T,std::complex&gt;::value</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct_type_check_1_1print__type__and__exit__compile__time" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_type_check_1_1print__type__and__exit__compile__time" kindref="compound">print_type_and_exit_compile_time</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string_view</highlight></codeline>
<codeline lineno="72" refid="namespace_type_check_1a4f1389c4b1ca35b5c941cfdc99169149" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_type_check_1a4f1389c4b1ca35b5c941cfdc99169149" kindref="member">type_name</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_view<sp/>p<sp/>=<sp/>__PRETTY_FUNCTION__;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string_view(p.data()<sp/>+<sp/>34,<sp/>p.size()<sp/>-<sp/>34<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_view<sp/>p<sp/>=<sp/>__PRETTY_FUNCTION__;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/>if<sp/>__cplusplus<sp/>&lt;<sp/>201402</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string_view(p.data()<sp/>+<sp/>36,<sp/>p.size()<sp/>-<sp/>36<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string_view(p.data()<sp/>+<sp/>49,<sp/>p.find(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">,<sp/>49)<sp/>-<sp/>49);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_view<sp/>p<sp/>=<sp/>__FUNCSIG__;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>string_view(p.data()<sp/>+<sp/>84,<sp/>p.size()<sp/>-<sp/>84<sp/>-<sp/>7);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>does<sp/>not<sp/>work<sp/>for<sp/>&quot;non-type&quot;<sp/>class<sp/>template<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//In<sp/>fact<sp/>it<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>work<sp/>very<sp/>well<sp/>at<sp/>all...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template<sp/>&lt;<sp/>template<sp/>&lt;typename...&gt;<sp/>class<sp/>Template,<sp/>typename<sp/>Scalar_<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>struct<sp/>is_instance_of<sp/>:<sp/>std::false_type<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template<sp/>&lt;<sp/>template<sp/>&lt;typename...&gt;<sp/>class<sp/>Template,<sp/>typename...<sp/>Args<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>struct<sp/>is_instance_of&lt;<sp/>Template,<sp/>Template&lt;Args...&gt;<sp/>&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>Scalar_&gt;<sp/>using<sp/>is_ofEigen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>is_instance_of&lt;Eigen::EigenBase,Scalar_&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/nmspc_type_check.h"/>
  </compounddef>
</doxygen>
