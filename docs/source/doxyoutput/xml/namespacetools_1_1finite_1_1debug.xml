<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacetools_1_1finite_1_1debug" kind="namespace" language="C++">
    <compoundname>tools::finite::debug</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1a8bfed5706f3a25e415f986d5c4bf7b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::check_integrity</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>check_integrity</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/nmspc_tools.h" line="208" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/debug.cpp" bodystart="14" bodyend="29"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="classclass__finite__state_1a8f08867b1dd985e0428620b548443213" compoundref="class__finite__state_8cpp" startline="539" endline="541">class_finite_state::unset_measurements</references>
        <references refid="namespacetools_1_1finite_1_1debug_1ac04a2c7103eb4e428175e373c3b0100c" compoundref="finite_2debug_8cpp" startline="33" endline="237">check_integrity_of_mps</references>
        <references refid="namespacetools_1_1finite_1_1debug_1a07219dccaeaadeefa0b8e5034293fd97" compoundref="finite_2debug_8cpp" startline="240" endline="258">check_integrity_of_mpo</references>
        <references refid="namespacetools_1_1finite_1_1print_1ac44b254c32c87bad349477836b2b10f9" compoundref="finite_2print_8cpp" startline="33" endline="73">tools::finite::print::print_state</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1ac04a2c7103eb4e428175e373c3b0100c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::check_integrity_of_mps</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>check_integrity_of_mps</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/nmspc_tools.h" line="209" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/debug.cpp" bodystart="33" bodyend="237"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="namespacetools_1_1common_1_1profile_1aa80d483840fee9d8e485fce1c480bd34" compoundref="nmspc__tools_8h" startline="319">tools::common::profile::t_chk</references>
        <references refid="classclass__tic__toc_1a1924db6e1c9632114e713028e2beca74" compoundref="class__tic__toc_8cpp" startline="37" endline="41">class_tic_toc::tic</references>
        <references refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" compoundref="class__finite__state_8h" startline="56">class_finite_state::MPS_L</references>
        <references refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" compoundref="class__finite__state_8h" startline="57">class_finite_state::MPS_R</references>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="90" endline="90">class_finite_state::get_length</references>
        <references refid="classclass__finite__state_1a4cdeeeffc013c85f8cd657b2fd06fe0e" compoundref="class__finite__state_8h" startline="59">class_finite_state::ENV_L</references>
        <references refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" compoundref="class__finite__state_8h" startline="60">class_finite_state::ENV_R</references>
        <references refid="classclass__finite__state_1a4a6f7da1f22176f584726f3132ca01c9" compoundref="class__finite__state_8h" startline="61">class_finite_state::ENV2_L</references>
        <references refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" compoundref="class__finite__state_8h" startline="62">class_finite_state::ENV2_R</references>
        <references refid="classclass__environment_1a07a78fc055d953768e686ef522bb6d0c" compoundref="class__environment_8h" startline="45">class_environment::sites</references>
        <references refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" compoundref="class__finite__state_8cpp" startline="91" endline="91">class_finite_state::get_position</references>
        <references refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" compoundref="class__finite__state_8cpp" startline="174" endline="186">class_finite_state::get_MPS</references>
        <references refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" compoundref="class__finite__state_8cpp" startline="193" endline="205">class_finite_state::get_MPO</references>
        <references refid="classclass__vidal__site_1a647bc3bef44cc54c935c55c31e7a51f9" compoundref="class__vidal__site_8cpp" startline="9" endline="9">class_vidal_site::get_G</references>
        <references refid="classclass__vidal__site_1afe3069cfa9af24394840fd6d08cb154d" compoundref="class__vidal__site_8cpp" startline="10" endline="10">class_vidal_site::get_L</references>
        <references refid="classclass__vidal__site_1a84dea9ec6b9cf8d8dee09dc8e5168014" compoundref="class__vidal__site_8cpp" startline="27" endline="30">class_vidal_site::get_position</references>
        <references refid="classclass__model__base_1a691eb7ba6564b8bae48db9ae2e368603" compoundref="class__model__base_8cpp" startline="52" endline="55">class_model_base::get_position</references>
        <references refid="classclass__vidal__site_1a5508860d2e60dcc634d89fb0fc86fa53" compoundref="class__vidal__site_8cpp" startline="22" endline="22">class_vidal_site::get_chiR</references>
        <references refid="classclass__vidal__site_1a874b7bbe0e666637647e5772deaeaa37" compoundref="class__vidal__site_8cpp" startline="21" endline="21">class_vidal_site::get_chiL</references>
        <references refid="classclass__model__base_1a0789119b3413f70affbdbc5f7b15e829" compoundref="class__model__base_8cpp" startline="14" endline="20">class_model_base::MPO</references>
        <references refid="classclass__vidal__site_1a4e630c363c4ce0619593ba7c21f3a0e1" compoundref="class__vidal__site_8cpp" startline="20" endline="20">class_vidal_site::get_spin_dim</references>
        <references refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" compoundref="class__finite__state_8h" startline="63">class_finite_state::MPO_L</references>
        <references refid="classclass__environment_1a03977a3c06d86183f55b26af2c05509b" compoundref="class__environment_8h" startline="62" endline="65">class_environment::get_position</references>
        <references refid="classclass__environment_1a1b3e96fea0bbdd34c2e01e9427649fa4" compoundref="class__environment_8h" startline="46">class_environment::block</references>
        <references refid="classclass__environment__var_1abf95de609b4a669c32ae3258001d4e40" compoundref="class__environment_8h" startline="81">class_environment_var::block</references>
        <references refid="classclass__environment__var_1a290cc9c8a8a7afe481a5e7a9d06ac6f5" compoundref="class__environment_8h" startline="79">class_environment_var::sites</references>
        <references refid="classclass__environment__var_1a4f502fb6360204999b2431ba77f6128f" compoundref="class__environment_8h" startline="97" endline="100">class_environment_var::get_position</references>
        <references refid="classclass__finite__state_1ab95ffeb138dea0a739dcab7c59c44321" compoundref="class__finite__state_8h" startline="58">class_finite_state::MPS_C</references>
        <references refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" compoundref="class__finite__state_8h" startline="64">class_finite_state::MPO_R</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
        <references refid="namespacesettings_1_1precision_1a750367d57c28bed6cbe50b368b822d84" compoundref="nmspc__settings_8h" startline="103">settings::precision::MaxNormError</references>
        <references refid="classclass__tic__toc_1afde905f387b29b69afd6940a2a8e2268" compoundref="class__tic__toc_8cpp" startline="43" endline="48">class_tic_toc::toc</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1a07219dccaeaadeefa0b8e5034293fd97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::check_integrity_of_mpo</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>check_integrity_of_mpo</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/nmspc_tools.h" line="210" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/debug.cpp" bodystart="240" bodyend="258"/>
        <references refid="namespacetools_1_1common_1_1profile_1aa80d483840fee9d8e485fce1c480bd34" compoundref="nmspc__tools_8h" startline="319">tools::common::profile::t_chk</references>
        <references refid="classclass__tic__toc_1a1924db6e1c9632114e713028e2beca74" compoundref="class__tic__toc_8cpp" startline="37" endline="41">class_tic_toc::tic</references>
        <references refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" compoundref="class__finite__state_8h" startline="63">class_finite_state::MPO_L</references>
        <references refid="classclass__model__base_1a691eb7ba6564b8bae48db9ae2e368603" compoundref="class__model__base_8cpp" startline="52" endline="55">class_model_base::get_position</references>
        <references refid="classclass__model__base_1abaa56fa72f7d7c1019e1cf3bd74772b7" compoundref="class__model__base_8h" startline="25">class_model_base::all_mpo_parameters_have_been_set</references>
        <references refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" compoundref="class__finite__state_8h" startline="64">class_finite_state::MPO_R</references>
        <references refid="classclass__tic__toc_1afde905f387b29b69afd6940a2a8e2268" compoundref="class__tic__toc_8cpp" startline="43" endline="48">class_tic_toc::toc</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1a210027283c35bf168285d9def2c1b072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::check_normalization_routine</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>check_normalization_routine</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/nmspc_tools.h" line="211" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/debug.cpp" bodystart="306" bodyend="410"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="namespaceqm_1_1mpo_1aef01a3621428315dc34cdb8059851389" compoundref="nmspc__quantum__mechanics_8cpp" startline="187" endline="215">qm::mpo::pauli_mpo</references>
        <references refid="namespaceqm_1_1spin_one_half_1a2cda40cbed549d2f5bcae49e830f8456" compoundref="nmspc__quantum__mechanics_8cpp" startline="45">qm::spinOneHalf::Id</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
        <references refid="namespacetools_1_1finite_1_1ops_1ab0cdc843131076ca538724438171b6a1" compoundref="ops_8cpp" startline="197" endline="239">tools::finite::ops::overlap</references>
        <references refid="namespacetools_1_1finite_1_1ops_1ad8aed06310e3d183e78b4a198a6dc259" compoundref="ops_8cpp" startline="32" endline="35">tools::finite::ops::apply_mpo</references>
        <references refid="namespacetools_1_1finite_1_1mps_1ae814b3957f593984e10669d57c42093c" compoundref="svd_8cpp" startline="9" endline="87">tools::finite::mps::normalize</references>
        <references refid="namespaceqm_1_1mpo_1ae9dfc0e5c530087196a667e5203bf400" compoundref="nmspc__quantum__mechanics_8cpp" startline="269" endline="306">qm::mpo::parity_projector_mpos</references>
        <references refid="namespaceqm_1_1spin_one_half_1aa08808503c709f6c4c8ef7316ad9fc63" compoundref="nmspc__quantum__mechanics_8cpp" startline="36">qm::spinOneHalf::sx</references>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="90" endline="90">class_finite_state::get_length</references>
        <references refid="namespacetools_1_1finite_1_1ops_1af56c79ae1daf4237e672debdb3de29c4" compoundref="ops_8cpp" startline="39" endline="124">tools::finite::ops::apply_mpos</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1aeaa68596ec4e6eca1df203c60fecfa25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::print_parity_properties</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>print_parity_properties</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/nmspc_tools.h" line="212" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/debug.cpp" bodystart="261" bodyend="302"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="namespacetools_1_1finite_1_1measure_1a3a7fe5ba4c6d23320386871a3ba2b912" compoundref="finite_2measure_8cpp" startline="263" endline="320">tools::finite::measure::spin_component</references>
        <references refid="namespaceqm_1_1spin_one_half_1aa08808503c709f6c4c8ef7316ad9fc63" compoundref="nmspc__quantum__mechanics_8cpp" startline="36">qm::spinOneHalf::sx</references>
        <references refid="namespaceqm_1_1spin_one_half_1a3442e889c2875e1f02c558c202e72d65" compoundref="nmspc__quantum__mechanics_8cpp" startline="39">qm::spinOneHalf::sy</references>
        <references refid="namespaceqm_1_1spin_one_half_1a7a9925b3702c2b7519bda1069531255f" compoundref="nmspc__quantum__mechanics_8cpp" startline="42">qm::spinOneHalf::sz</references>
        <references refid="namespacetools_1_1finite_1_1ops_1a51c9c8a97ae2a7775928e6fcb4c805c3" compoundref="ops_8cpp" startline="158" endline="194">tools::finite::ops::get_projection_to_closest_parity_sector</references>
        <references refid="namespacetools_1_1finite_1_1ops_1ab0cdc843131076ca538724438171b6a1" compoundref="ops_8cpp" startline="197" endline="239">tools::finite::ops::overlap</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/nmspc_tools.h" line="207" column="1"/>
  </compounddef>
</doxygen>
