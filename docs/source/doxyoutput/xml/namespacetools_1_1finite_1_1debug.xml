<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacetools_1_1finite_1_1debug" kind="namespace" language="C++">
    <compoundname>tools::finite::debug</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1a8bfed5706f3a25e415f986d5c4bf7b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::check_integrity</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>check_integrity</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="157" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/debug.cpp" bodystart="13" bodyend="28"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="classclass__finite__state_1a8f08867b1dd985e0428620b548443213" compoundref="class__finite__state_8cpp" startline="346" endline="348">class_finite_state::unset_measurements</references>
        <references refid="namespacetools_1_1finite_1_1debug_1ac04a2c7103eb4e428175e373c3b0100c" compoundref="finite_2debug_8cpp" startline="32" endline="232">check_integrity_of_mps</references>
        <references refid="namespacetools_1_1finite_1_1debug_1a07219dccaeaadeefa0b8e5034293fd97" compoundref="finite_2debug_8cpp" startline="235" endline="249">check_integrity_of_mpo</references>
        <references refid="namespacetools_1_1finite_1_1print_1ac44b254c32c87bad349477836b2b10f9" compoundref="finite_2print_8cpp" startline="33" endline="73">tools::finite::print::print_state</references>
        <references refid="namespacetools_1_1finite_1_1debug_1aeaa68596ec4e6eca1df203c60fecfa25" compoundref="finite_2debug_8cpp" startline="252" endline="293">print_parity_properties</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1ac04a2c7103eb4e428175e373c3b0100c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::check_integrity_of_mps</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>check_integrity_of_mps</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="158" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/debug.cpp" bodystart="32" bodyend="232"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" compoundref="class__finite__state_8h" startline="49">class_finite_state::MPS_L</references>
        <references refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" compoundref="class__finite__state_8h" startline="50">class_finite_state::MPS_R</references>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="45" endline="45">class_finite_state::get_length</references>
        <references refid="classclass__finite__state_1a4cdeeeffc013c85f8cd657b2fd06fe0e" compoundref="class__finite__state_8h" startline="52">class_finite_state::ENV_L</references>
        <references refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" compoundref="class__finite__state_8h" startline="53">class_finite_state::ENV_R</references>
        <references refid="classclass__finite__state_1a4a6f7da1f22176f584726f3132ca01c9" compoundref="class__finite__state_8h" startline="54">class_finite_state::ENV2_L</references>
        <references refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" compoundref="class__finite__state_8h" startline="55">class_finite_state::ENV2_R</references>
        <references refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" compoundref="class__finite__state_8cpp" startline="46" endline="46">class_finite_state::get_position</references>
        <references refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" compoundref="class__finite__state_8cpp" startline="106" endline="118">class_finite_state::get_MPS</references>
        <references refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" compoundref="class__finite__state_8cpp" startline="125" endline="137">class_finite_state::get_MPO</references>
        <references refid="classclass__finite__state_1ad41b34016714e6b3d3aa67368aacbe64" compoundref="class__finite__state_8h" startline="56">class_finite_state::MPO_L</references>
        <references refid="classclass__finite__state_1a781bc0bab32617bf299a11124ab136f6" compoundref="class__finite__state_8h" startline="51">class_finite_state::MPS_C</references>
        <references refid="classclass__finite__state_1a0610c0cf4d336c15374c37c646138ab2" compoundref="class__finite__state_8h" startline="57">class_finite_state::MPO_R</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1a07219dccaeaadeefa0b8e5034293fd97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::check_integrity_of_mpo</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>check_integrity_of_mpo</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="159" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/debug.cpp" bodystart="235" bodyend="249"/>
        <references refid="classclass__finite__state_1ad41b34016714e6b3d3aa67368aacbe64" compoundref="class__finite__state_8h" startline="56">class_finite_state::MPO_L</references>
        <references refid="classclass__finite__state_1a0610c0cf4d336c15374c37c646138ab2" compoundref="class__finite__state_8h" startline="57">class_finite_state::MPO_R</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1a210027283c35bf168285d9def2c1b072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::check_normalization_routine</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>check_normalization_routine</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="160" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/debug.cpp" bodystart="297" bodyend="401"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="namespaceqm_1_1mpo_1aef01a3621428315dc34cdb8059851389" compoundref="nmspc__quantum__mechanics_8cpp" startline="187" endline="215">qm::mpo::pauli_mpo</references>
        <references refid="namespaceqm_1_1spin_one_half_1a09b3ac70f50c2cb92e9aa12baf229404" compoundref="nmspc__quantum__mechanics_8cpp" startline="45">qm::spinOneHalf::Id</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
        <references refid="namespacetools_1_1finite_1_1ops_1ab0cdc843131076ca538724438171b6a1" compoundref="ops_8cpp" startline="168" endline="210">tools::finite::ops::overlap</references>
        <references refid="namespacetools_1_1finite_1_1ops_1ad8aed06310e3d183e78b4a198a6dc259" compoundref="ops_8cpp" startline="32" endline="35">tools::finite::ops::apply_mpo</references>
        <references refid="namespacetools_1_1finite_1_1mps_1a87270670ae7c150d7d115c9bf8327278" compoundref="svd_8cpp" startline="9" endline="78">tools::finite::mps::normalize</references>
        <references refid="namespaceqm_1_1mpo_1ae9dfc0e5c530087196a667e5203bf400" compoundref="nmspc__quantum__mechanics_8cpp" startline="269" endline="306">qm::mpo::parity_projector_mpos</references>
        <references refid="namespaceqm_1_1spin_one_half_1ae795b267734a773efcfbc6b238078299" compoundref="nmspc__quantum__mechanics_8cpp" startline="36">qm::spinOneHalf::sx</references>
        <references refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" compoundref="class__finite__state_8cpp" startline="45" endline="45">class_finite_state::get_length</references>
        <references refid="namespacetools_1_1finite_1_1ops_1af56c79ae1daf4237e672debdb3de29c4" compoundref="ops_8cpp" startline="39" endline="124">tools::finite::ops::apply_mpos</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1debug_1aeaa68596ec4e6eca1df203c60fecfa25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::debug::print_parity_properties</definition>
        <argsstring>(const class_finite_state &amp;state)</argsstring>
        <name>print_parity_properties</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="161" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/debug.cpp" bodystart="252" bodyend="293"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="namespaceqm_1_1spin_one_half_1ae795b267734a773efcfbc6b238078299" compoundref="nmspc__quantum__mechanics_8cpp" startline="36">qm::spinOneHalf::sx</references>
        <references refid="namespacetools_1_1finite_1_1measure_1a3a7fe5ba4c6d23320386871a3ba2b912" compoundref="finite_2measure_8cpp" startline="257" endline="314">tools::finite::measure::spin_component</references>
        <references refid="namespaceqm_1_1spin_one_half_1a777bca15b9c80a4c91d1cc8e49536559" compoundref="nmspc__quantum__mechanics_8cpp" startline="39">qm::spinOneHalf::sy</references>
        <references refid="namespaceqm_1_1spin_one_half_1a6f58116f2a00a0ee5e00f64e66813b74" compoundref="nmspc__quantum__mechanics_8cpp" startline="42">qm::spinOneHalf::sz</references>
        <references refid="namespacetools_1_1finite_1_1ops_1a92dc2122fa719b004025f43bec82e154" compoundref="ops_8cpp" startline="141" endline="149">tools::finite::ops::get_closest_parity_state</references>
        <references refid="namespacetools_1_1finite_1_1ops_1ab0cdc843131076ca538724438171b6a1" compoundref="ops_8cpp" startline="168" endline="210">tools::finite::ops::overlap</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="156" column="1"/>
  </compounddef>
</doxygen>
