<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classclass__algorithm__infinite" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>class_algorithm_infinite</compoundname>
    <basecompoundref refid="classclass__algorithm__base" prot="public" virt="non-virtual">class_algorithm_base</basecompoundref>
    <derivedcompoundref refid="classclass__idmrg" prot="public" virt="non-virtual">class_idmrg</derivedcompoundref>
    <derivedcompoundref refid="classclass__itebd" prot="public" virt="non-virtual">class_itebd</derivedcompoundref>
    <includes refid="class__algorithm__infinite_8h" local="no">class_algorithm_infinite.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" prot="public" static="no" mutable="no">
        <type><ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref></type>
        <definition>class_tensors_infinite class_algorithm_infinite::tensors</definition>
        <argsstring></argsstring>
        <name>tensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="17" column="28" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; class_algorithm_infinite::var_mpo_iter</definition>
        <argsstring></argsstring>
        <name>var_mpo_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="45" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; class_algorithm_infinite::var_ham_iter</definition>
        <argsstring></argsstring>
        <name>var_ham_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="46" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; class_algorithm_infinite::var_mom_iter</definition>
        <argsstring></argsstring>
        <name>var_mom_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="47" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; class_algorithm_infinite::entropy_iter</definition>
        <argsstring></argsstring>
        <name>entropy_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="48" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classclass__algorithm__infinite_1a0ad18e5b809b20e90df53c67e2421ef2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>class_algorithm_infinite::class_algorithm_infinite</definition>
        <argsstring>(std::shared_ptr&lt; h5pp::File &gt; h5ppFile_, AlgorithmType algo_type)</argsstring>
        <name>class_algorithm_infinite</name>
        <param>
          <type>std::shared_ptr&lt; h5pp::File &gt;</type>
          <declname>h5ppFile_</declname>
        </param>
        <param>
          <type><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9" kindref="member">AlgorithmType</ref></type>
          <declname>algo_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="16" column="14" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="16" bodyend="21"/>
        <references refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" compoundref="class__algorithm__base_8h" startline="30">class_algorithm_base::algo_type</references>
        <references refid="classclass__tensors__infinite_1a8ca8dce1391de56de98f7d9ffa394859" compoundref="class__tensors__infinite_8cpp" startline="49" endline="53">class_tensors_infinite::initialize</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="namespacesettings_1_1model_1a3628af587c3663ba75c2a3d6db7e16e6" compoundref="nmspc__settings_8h" startline="95">settings::model::model_type</references>
        <references refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" compoundref="class__tensors__infinite_8h" startline="16">class_tensors_infinite::state</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1abdf68a4ae64f7302ad9e82a48d468e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void class_algorithm_infinite::run_simulation</definition>
        <argsstring>()=0</argsstring>
        <name>run_simulation</name>
        <reimplementedby refid="classclass__idmrg_1a815e0b3273427131195b2d9bb6925ce4">run_simulation</reimplementedby>
        <reimplementedby refid="classclass__itebd_1ab7b54d3b65fa2be0430b0c33ee532231">run_simulation</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="22" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a2cabf133e43683569ef43b9639476dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::run_preprocessing</definition>
        <argsstring>()</argsstring>
        <name>run_preprocessing</name>
        <reimplementedby refid="classclass__itebd_1afeae7d5e3a928ca1ca00b7df472d2345">run_preprocessing</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="23" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="31" bodyend="37"/>
        <references refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" compoundref="class__algorithm__base_8h" startline="30">class_algorithm_base::algo_type</references>
        <references refid="classclass__algorithm__status_1acb3cddfa7b9f8e4657c92ee95f15352b" compoundref="class__algorithm__status_8h" startline="52" endline="52">class_algorithm_status::clear</references>
        <references refid="classclass__algorithm__base_1a0a68686f23b45bcdc7c833a7bf348b54" compoundref="class__algorithm__base_8cpp" startline="59" endline="69">class_algorithm_base::init_bond_dimension_limits</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e">MODEL</references>
        <references refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" compoundref="prof_8h" startline="39">tools::common::profile::prof</references>
        <references refid="classclass__algorithm__infinite_1a97d87cb8fcb7ddd09913e1cabdcd1394" compoundref="class__algorithm__infinite_8cpp" startline="47" endline="51">randomize_model</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" compoundref="class__algorithm__infinite_8cpp" startline="273" endline="370">write_to_file</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1aa7176e26e0dd793557a649fc6c0b75f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::run_postprocessing</definition>
        <argsstring>()</argsstring>
        <name>run_postprocessing</name>
        <reimplementedby refid="classclass__itebd_1a87f7f8c17c034b5d58139174a7982741">run_postprocessing</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="24" column="18" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="39" bodyend="45"/>
        <references refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" compoundref="class__algorithm__base_8h" startline="30">class_algorithm_base::algo_type</references>
        <references refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" compoundref="class__algorithm__base_8cpp" startline="28" endline="57">class_algorithm_base::copy_from_tmp</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a2c616b2713e2e0aed04b4c4752c88133">FINISHED</references>
        <references refid="namespacetools_1_1common_1_1profile_1a7e72cdef9ec500e7110c9e2efa2be2d1" compoundref="prof_8cpp" startline="80" endline="107">tools::common::profile::print_profiling</references>
        <references refid="classclass__algorithm__infinite_1a993724b938167db865be9b23f291b5d9" compoundref="class__algorithm__infinite_8cpp" startline="426" endline="481">print_status_full</references>
        <references refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" compoundref="prof_8h" startline="39">tools::common::profile::prof</references>
        <references refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" compoundref="class__algorithm__infinite_8cpp" startline="273" endline="370">write_to_file</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1ae14b72b2eb26ac37f453c24cd2c5a68c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::run</definition>
        <argsstring>() final</argsstring>
        <name>run</name>
        <reimplements refid="classclass__algorithm__base_1a41b199782e43aeaccf607b8191c3a027">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="27" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="23" bodyend="29"/>
        <references refid="classclass__algorithm__base_1ab3e9bfaa0a5cf0810c3c7a074cfa9d69">class_algorithm_base::cfg_algorithm_is_on</references>
        <references refid="classclass__algorithm__infinite_1aa7176e26e0dd793557a649fc6c0b75f1" compoundref="class__algorithm__infinite_8cpp" startline="39" endline="45">run_postprocessing</references>
        <references refid="classclass__algorithm__infinite_1a2cabf133e43683569ef43b9639476dab" compoundref="class__algorithm__infinite_8cpp" startline="31" endline="37">run_preprocessing</references>
        <references refid="classclass__algorithm__infinite_1abdf68a4ae64f7302ad9e82a48d468e8a">run_simulation</references>
        <references refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" compoundref="prof_8h" startline="12">tools::common::profile::t_tot</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1acb14ea81ee6e72bc06bd3fbd1627249b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::update_variance_max_digits</definition>
        <argsstring>(std::optional&lt; double &gt; energy=std::nullopt) final</argsstring>
        <name>update_variance_max_digits</name>
        <reimplements refid="classclass__algorithm__base_1a245737c384ff850e145dc0f9f29b70cf">update_variance_max_digits</reimplements>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>energy</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="28" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="53" bodyend="61"/>
        <references refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" compoundref="finite_2measure_8cpp" startline="353" endline="369">tools::finite::measure::energy</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a2283571fb9ddaedbc3d50e89d946d522" compoundref="infinite_2measure_8cpp" startline="98" endline="101">tools::infinite::measure::energy_per_site_mpo</references>
        <references refid="classclass__algorithm__status_1aecd580f42c5bc43cf968c3e540665463" compoundref="class__algorithm__status_8h" startline="29">class_algorithm_status::energy_variance_max_digits</references>
        <references refid="classclass__algorithm__status_1a49499e18c7113953dc151e19b946c52d" compoundref="class__algorithm__status_8h" startline="30">class_algorithm_status::energy_variance_prec_limit</references>
        <references refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" compoundref="class__algorithm__status_8h" startline="11">class_algorithm_status::iter</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="namespacesettings_1_1precision_1af241365d45c25fd1f464b664f358e982" compoundref="nmspc__settings_8h" startline="173">settings::precision::use_reduced_energy</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a93e97af4e20920c9690ff47fe78ddd60" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::update_bond_dimension_limit</definition>
        <argsstring>(std::optional&lt; long &gt; max_bond_dim=std::nullopt) final</argsstring>
        <name>update_bond_dimension_limit</name>
        <reimplements refid="classclass__algorithm__base_1a9a60e6393090895c4960d04b83621c62">update_bond_dimension_limit</reimplements>
        <param>
          <type>std::optional&lt; long &gt;</type>
          <declname>max_bond_dim</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="29" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="64" bodyend="123"/>
        <references refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" compoundref="class__algorithm__status_8h" startline="38">class_algorithm_status::algorithm_has_stuck_for</references>
        <references refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9">class_algorithm_base::cfg_chi_lim_grow</references>
        <references refid="classclass__algorithm__base_1a02248bae999554bcbbc84ba8bbaf6eb0">class_algorithm_base::cfg_chi_lim_init</references>
        <references refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455">class_algorithm_base::cfg_chi_lim_max</references>
        <references refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" compoundref="class__algorithm__status_8h" startline="19">class_algorithm_status::chi_lim</references>
        <references refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" compoundref="class__algorithm__status_8h" startline="49">class_algorithm_status::chi_lim_has_reached_chi_max</references>
        <references refid="classclass__algorithm__status_1aa2a344f5ca3b3a6230d82fabd0936d92" compoundref="class__algorithm__status_8h" startline="18">class_algorithm_status::chi_lim_init</references>
        <references refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" compoundref="class__algorithm__status_8h" startline="17">class_algorithm_status::chi_lim_max</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a897773140ef9a63d5de751d88edd0436">CHI_UPDATE</references>
        <references refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" compoundref="class__algorithm__infinite_8cpp" startline="192" endline="214">clear_convergence_status</references>
        <references refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" compoundref="class__algorithm__base_8cpp" startline="28" endline="57">class_algorithm_base::copy_from_tmp</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" compoundref="class__tensors__infinite_8h" startline="16">class_tensors_infinite::state</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" compoundref="nmspc__settings_8h" startline="170">settings::precision::svd_threshold</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" compoundref="class__algorithm__infinite_8cpp" startline="273" endline="370">write_to_file</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a97d87cb8fcb7ddd09913e1cabdcd1394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::randomize_model</definition>
        <argsstring>()</argsstring>
        <name>randomize_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="30" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="47" bodyend="51"/>
        <references refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" compoundref="class__algorithm__infinite_8cpp" startline="192" endline="214">clear_convergence_status</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="classclass__tensors__infinite_1a5da46d4218b36d686d26e2075c2cb92f" compoundref="class__tensors__infinite_8cpp" startline="55" endline="59">class_tensors_infinite::randomize_model</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a2573591517d4f3874fa0ab7c6cbea2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::randomize_state</definition>
        <argsstring>(ResetReason reason, std::optional&lt; std::string &gt; sector=std::nullopt, std::optional&lt; long &gt; bitfield=std::nullopt, std::optional&lt; bool &gt; use_eigenspinors=std::nullopt)</argsstring>
        <name>randomize_state</name>
        <param>
          <type><ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11" kindref="member">ResetReason</ref></type>
          <declname>reason</declname>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>sector</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; long &gt;</type>
          <declname>bitfield</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; bool &gt;</type>
          <declname>use_eigenspinors</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="31" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="171" bodyend="189"/>
        <references refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" compoundref="nmspc__settings_8h" startline="37">settings::input::bitfield</references>
        <references refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" compoundref="class__algorithm__infinite_8cpp" startline="192" endline="214">clear_convergence_status</references>
        <references refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" compoundref="class__algorithm__status_8h" startline="11">class_algorithm_status::iter</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="namespacesettings_1_1strategy_1a76327e2fce6635a9905107bf20ed8ae5" compoundref="nmspc__settings_8h" startline="153">settings::strategy::max_resets</references>
        <references refid="classclass__algorithm__status_1ad4b4ffe76b177cd283996700470a84de" compoundref="class__algorithm__status_8h" startline="15">class_algorithm_status::num_resets</references>
        <references refid="classclass__tensors__infinite_1a587457f03963fd8ee43f73eb166384c6" compoundref="class__tensors__infinite_8cpp" startline="61" endline="66">class_tensors_infinite::reset_to_random_product_state</references>
        <references refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11a5c290ac23e3d60150ad896708595fcb7">SATURATED</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" compoundref="nmspc__settings_8h" startline="161">settings::strategy::target_sector</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" compoundref="nmspc__settings_8h" startline="152">settings::strategy::use_eigenspinors</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::clear_convergence_status</definition>
        <argsstring>() override</argsstring>
        <name>clear_convergence_status</name>
        <reimplements refid="classclass__algorithm__base_1a9209394aae1cb1f7a7ef4fe3c41d30b6">clear_convergence_status</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="34" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="192" bodyend="214"/>
        <references refid="classclass__algorithm__status_1a70442280f41b8930c1d4da6078dc3ea9" compoundref="class__algorithm__status_8h" startline="40">class_algorithm_status::algorithm_converged_for</references>
        <references refid="classclass__algorithm__status_1ab20a7a1af7d6f146f13dff0ad2d302b3" compoundref="class__algorithm__status_8h" startline="35">class_algorithm_status::algorithm_has_finished</references>
        <references refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" compoundref="class__algorithm__status_8h" startline="38">class_algorithm_status::algorithm_has_stuck_for</references>
        <references refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" compoundref="class__algorithm__status_8h" startline="36">class_algorithm_status::algorithm_has_succeeded</references>
        <references refid="classclass__algorithm__status_1a0717b75fabecbe8f25b2d6b795ac0fde" compoundref="class__algorithm__status_8h" startline="37">class_algorithm_status::algorithm_has_to_stop</references>
        <references refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" compoundref="class__algorithm__status_8h" startline="39">class_algorithm_status::algorithm_saturated_for</references>
        <references refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" compoundref="class__algorithm__status_8h" startline="49">class_algorithm_status::chi_lim_has_reached_chi_max</references>
        <references refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" compoundref="class__algorithm__status_8h" startline="41">class_algorithm_status::entanglement_converged_for</references>
        <references refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" compoundref="class__algorithm__status_8h" startline="42">class_algorithm_status::entanglement_saturated_for</references>
        <references refid="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" compoundref="class__algorithm__infinite_8h" startline="48">entropy_iter</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" compoundref="class__algorithm__infinite_8h" startline="46">var_ham_iter</references>
        <references refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" compoundref="class__algorithm__infinite_8h" startline="47">var_mom_iter</references>
        <references refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" compoundref="class__algorithm__infinite_8h" startline="45">var_mpo_iter</references>
        <references refid="classclass__algorithm__status_1a652bd0136323e931f1c01a30680c1fc3" compoundref="class__algorithm__status_8h" startline="45">class_algorithm_status::variance_ham_converged_for</references>
        <references refid="classclass__algorithm__status_1a0c91d6784e4ea3d5112f623fefc00dc3" compoundref="class__algorithm__status_8h" startline="46">class_algorithm_status::variance_ham_saturated_for</references>
        <references refid="classclass__algorithm__status_1ac36092b2e1866813a3c7ab57758fffeb" compoundref="class__algorithm__status_8h" startline="47">class_algorithm_status::variance_mom_converged_for</references>
        <references refid="classclass__algorithm__status_1ab0d0d580a505a8f12f8cb29c1f6812f9" compoundref="class__algorithm__status_8h" startline="48">class_algorithm_status::variance_mom_saturated_for</references>
        <references refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" compoundref="class__algorithm__status_8h" startline="43">class_algorithm_status::variance_mpo_converged_for</references>
        <references refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" compoundref="class__algorithm__status_8h" startline="44">class_algorithm_status::variance_mpo_saturated_for</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::write_to_file</definition>
        <argsstring>(StorageReason storage_reason=StorageReason::CHECKPOINT, std::optional&lt; CopyPolicy &gt; copy_policy=std::nullopt) final</argsstring>
        <name>write_to_file</name>
        <reimplements refid="classclass__algorithm__base_1a505f7dadceb3bfa9f06ff19a5f1ec158">write_to_file</reimplements>
        <param>
          <type><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref></type>
          <declname>storage_reason</declname>
          <defval><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a0f15e1247e93ddfa95c008106eb0d22f" kindref="member">StorageReason::CHECKPOINT</ref></defval>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5" kindref="member">CopyPolicy</ref> &gt;</type>
          <declname>copy_policy</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="35" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="273" bodyend="370"/>
        <references refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" compoundref="class__algorithm__base_8h" startline="31">class_algorithm_base::algo_name</references>
        <references refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" compoundref="class__algorithm__base_8h" startline="30">class_algorithm_base::algo_type</references>
        <references refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" compoundref="class__algorithm__status_8h" startline="36">class_algorithm_status::algorithm_has_succeeded</references>
        <references refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9">class_algorithm_base::cfg_chi_lim_grow</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a0f15e1247e93ddfa95c008106eb0d22f">CHECKPOINT</references>
        <references refid="namespacesettings_1_1output_1ad85175fd319fb912f37941b0cc5117b5" compoundref="nmspc__settings_8h" startline="49">settings::output::checkpoint_frequency</references>
        <references refid="namespacesettings_1_1output_1a8f8d5bc74d093621d32d071760fa35e7" compoundref="nmspc__settings_8h" startline="47">settings::output::checkpoint_keep_newest_only</references>
        <references refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" compoundref="class__algorithm__status_8h" startline="19">class_algorithm_status::chi_lim</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a897773140ef9a63d5de751d88edd0436">CHI_UPDATE</references>
        <references refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" compoundref="class__algorithm__base_8cpp" startline="28" endline="57">class_algorithm_base::copy_from_tmp</references>
        <references refid="classclass__tensors__infinite_1a993ea5f77d1fa220ca70c7c6c9508395" compoundref="class__tensors__infinite_8h" startline="18">class_tensors_infinite::edges</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01ae33d0e9926067a3fcfd37361b6b30f9f">EMAX_STATE</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01aed63a7bd13e4906bc2e1bbe74f89ac5a">EMIN_STATE</references>
        <references refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" compoundref="config_2enums_8h" startline="178" endline="382">enum2str</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a2c616b2713e2e0aed04b4c4752c88133">FINISHED</references>
        <references refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" compoundref="class__algorithm__base_8h" startline="27">class_algorithm_base::h5pp_file</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a67a088c9d3535b13104e21e618f59382">INIT_STATE</references>
        <references refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" compoundref="class__algorithm__status_8h" startline="11">class_algorithm_status::iter</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" compoundref="num_8h" startline="25" endline="31">num::mod</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e">MODEL</references>
        <references refid="classclass__tensors__infinite_1a9d1de037ae9f00fa93ccab4703ea0ab4" compoundref="class__tensors__infinite_8h" startline="17">class_tensors_infinite::model</references>
        <references refid="namespacesettings_1_1model_1aabf0ff2a07a4b8ae7e4141b1bde089cd" compoundref="nmspc__settings_8h" startline="96">settings::model::model_size</references>
        <references refid="namespacesettings_1_1model_1a3628af587c3663ba75c2a3d6db7e16e6" compoundref="nmspc__settings_8h" startline="95">settings::model::model_type</references>
        <references refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693">NONE</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a786913b585b4a8a603375da88293b140">PROJ_STATE</references>
        <references refid="namespacetools_1_1infinite_1_1io_1_1h5dset_1af66d5418871e252b8d543b4ed4c53c3f" compoundref="infinite_2io_2h5dset_8cpp" startline="126" endline="136">tools::infinite::io::h5dset::save_edges</references>
        <references refid="namespacetools_1_1infinite_1_1io_1_1h5table_1a86c401e36a3f72cd6bc55dd3e622f636" compoundref="infinite_2io_2h5table_8cpp" startline="32" endline="75">tools::infinite::io::h5table::save_measurements</references>
        <references refid="namespacetools_1_1infinite_1_1io_1_1h5table_1a9a465909d2a0f63a1287ad58ca0f1639" compoundref="infinite_2io_2h5table_8cpp" startline="87" endline="90">tools::infinite::io::h5table::save_mem_usage</references>
        <references refid="namespacetools_1_1common_1_1io_1_1h5attr_1ad3d6b8303c5a1215fa858eb9c6329f7d" compoundref="h5attr_8cpp" startline="35" endline="91">tools::common::io::h5attr::save_meta</references>
        <references refid="namespacetools_1_1infinite_1_1io_1_1h5dset_1a6d959bea50d5c72f3acb66129ab7b391" compoundref="infinite_2io_2h5dset_8cpp" startline="113" endline="124">tools::infinite::io::h5dset::save_model</references>
        <references refid="namespacetools_1_1infinite_1_1io_1_1h5table_1ae7ca8e3c520b6c8b548d8338318bb8a2" compoundref="infinite_2io_2h5table_8cpp" startline="18" endline="30">tools::infinite::io::h5table::save_model</references>
        <references refid="namespacetools_1_1infinite_1_1io_1_1h5table_1aeb25cdda20da592e9ab80794779f6dd2" compoundref="infinite_2io_2h5table_8cpp" startline="82" endline="85">tools::infinite::io::h5table::save_profiling</references>
        <references refid="namespacetools_1_1infinite_1_1io_1_1h5table_1abefbaf505a95184bb7937d53aaf05f57" compoundref="infinite_2io_2h5table_8cpp" startline="77" endline="80">tools::infinite::io::h5table::save_sim_status</references>
        <references refid="namespacetools_1_1infinite_1_1io_1_1h5dset_1af475da87a81f10ad432cc0fe9496e46f" compoundref="infinite_2io_2h5dset_8cpp" startline="43" endline="111">tools::infinite::io::h5dset::save_state</references>
        <references refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a083da148a19edd2e36a68d82c8e87377">SAVEPOINT</references>
        <references refid="namespacesettings_1_1output_1ad5202a6741248d828cf767c4f4631bc8" compoundref="nmspc__settings_8h" startline="46">settings::output::savepoint_frequency</references>
        <references refid="namespacesettings_1_1output_1a2856ae621b13993f89f10592ac0de3ba" compoundref="nmspc__settings_8h" startline="45">settings::output::savepoint_keep_newest_only</references>
        <references refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" compoundref="class__tensors__infinite_8h" startline="16">class_tensors_infinite::state</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="namespacesettings_1_1output_1a3cbc247c13365395ccf3b64df8051dfc" compoundref="nmspc__settings_8h" startline="66">settings::output::storage_level_checkpoint</references>
        <references refid="namespacesettings_1_1output_1a47e6a89a65d530cf23d22088b19f3150" compoundref="nmspc__settings_8h" startline="72">settings::output::storage_level_emax_state</references>
        <references refid="namespacesettings_1_1output_1a9d632b055bf34f4a8cb2a8b393682774" compoundref="nmspc__settings_8h" startline="71">settings::output::storage_level_emin_state</references>
        <references refid="namespacesettings_1_1output_1ae406dc66f399d0c0e3902f7e9e81f8bc" compoundref="nmspc__settings_8h" startline="68">settings::output::storage_level_fail_state</references>
        <references refid="namespacesettings_1_1output_1a53db66979510d116e12e429852c23df7" compoundref="nmspc__settings_8h" startline="67">settings::output::storage_level_good_state</references>
        <references refid="namespacesettings_1_1output_1a82a9057be394d13264d9213aa909ef5c" compoundref="nmspc__settings_8h" startline="70">settings::output::storage_level_init_state</references>
        <references refid="namespacesettings_1_1output_1a1f406e829d64fd245a9856b91025cdfb" compoundref="nmspc__settings_8h" startline="64">settings::output::storage_level_model</references>
        <references refid="namespacesettings_1_1output_1a5be0e26e29c2bb54e41789a5896583ca" compoundref="nmspc__settings_8h" startline="69">settings::output::storage_level_proj_state</references>
        <references refid="namespacesettings_1_1output_1a3fd8aec52aa269851a694889bcccddce" compoundref="nmspc__settings_8h" startline="65">settings::output::storage_level_savepoint</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5a59dfb83f7cac4e3c8ee91700ef2ad90d">TRY</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1af232e6d037549f0aae338b402aa9c722" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::print_status_update</definition>
        <argsstring>() final</argsstring>
        <name>print_status_update</name>
        <reimplements refid="classclass__algorithm__base_1a803b366e66ffaef47479278cbdb1a738">print_status_update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="36" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="372" bodyend="424"/>
        <references refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" compoundref="class__algorithm__base_8h" startline="30">class_algorithm_base::algo_type</references>
        <references refid="classclass__algorithm__status_1a70442280f41b8930c1d4da6078dc3ea9" compoundref="class__algorithm__status_8h" startline="40">class_algorithm_status::algorithm_converged_for</references>
        <references refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" compoundref="class__algorithm__status_8h" startline="38">class_algorithm_status::algorithm_has_stuck_for</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a64e18edd16eb044bcaf44469bc885ecf" compoundref="infinite_2measure_8cpp" startline="43" endline="47">tools::infinite::measure::bond_dimension</references>
        <references refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455">class_algorithm_base::cfg_chi_lim_max</references>
        <references refid="classclass__algorithm__base_1a1ff5ab0d312d132dd30243885d07dbd1">class_algorithm_base::cfg_print_freq</references>
        <references refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" compoundref="class__algorithm__status_8h" startline="19">class_algorithm_status::chi_lim</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a5f97c023ac5900d6961a0f23a51123d5" compoundref="measure__ham_8cpp" startline="18" endline="45">tools::infinite::measure::energy_per_site_ham</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a564124518e60fd2f24f8b50b55ac3b63" compoundref="measure__mom_8cpp" startline="54" endline="82">tools::infinite::measure::energy_per_site_mom</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a2283571fb9ddaedbc3d50e89d946d522" compoundref="infinite_2measure_8cpp" startline="98" endline="101">tools::infinite::measure::energy_per_site_mpo</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" compoundref="measure__ham_8cpp" startline="47" endline="174">tools::infinite::measure::energy_variance_per_site_ham</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" compoundref="measure__mom_8cpp" startline="84" endline="88">tools::infinite::measure::energy_variance_per_site_mom</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a5fdaab6447c154cd9720d8b834170a6d" compoundref="infinite_2measure_8cpp" startline="146" endline="150">tools::infinite::measure::energy_variance_per_site_mpo</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a5f7cd48eec3194c0d02aa53050d28f63" compoundref="infinite_2measure_8cpp" startline="55" endline="63">tools::infinite::measure::entanglement_entropy</references>
        <references refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" compoundref="class__algorithm__status_8h" startline="42">class_algorithm_status::entanglement_saturated_for</references>
        <references refid="classclass__tensors__infinite_1af4d8290bbbb41fb3a1eddd94036691e5" compoundref="class__tensors__infinite_8cpp" startline="76" endline="76">class_tensors_infinite::get_length</references>
        <references refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a9e28dfcb9c190549d7cf8ec4b986ea8f">iDMRG</references>
        <references refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a0bb0414b61270ee9c22f21b2f93b8f0f">iTEBD</references>
        <references refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" compoundref="class__algorithm__status_8h" startline="11">class_algorithm_status::iter</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="namespacetools_1_1common_1_1profile_1afd7671b1a2c5267039b7ebcac14e4f46" compoundref="prof_8cpp" startline="352" endline="352">tools::common::profile::mem_hwm_in_mb</references>
        <references refid="namespacetools_1_1common_1_1profile_1a61312a9c72e719580b551122f0ac1e33" compoundref="prof_8cpp" startline="351" endline="351">tools::common::profile::mem_rss_in_mb</references>
        <references refid="namespacetools_1_1common_1_1profile_1a6f1f875a4b0d19fe53aa9c97d11182c1" compoundref="prof_8cpp" startline="353" endline="353">tools::common::profile::mem_vm_in_mb</references>
        <references refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" compoundref="num_8h" startline="25" endline="31">num::mod</references>
        <references refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" compoundref="class__tensors__infinite_8h" startline="16">class_tensors_infinite::state</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="classclass__algorithm__status_1a0071e2c8a215558eadd08fe35d5591ef" compoundref="class__algorithm__status_8h" startline="12">class_algorithm_status::step</references>
        <references refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" compoundref="prof_8h" startline="12">tools::common::profile::t_tot</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a860d7ed08bbc15df634ab137a7b32eb7" compoundref="infinite_2measure_8cpp" startline="49" endline="53">tools::infinite::measure::truncation_error</references>
        <references refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" compoundref="class__algorithm__status_8h" startline="44">class_algorithm_status::variance_mpo_saturated_for</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a993724b938167db865be9b23f291b5d9" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::print_status_full</definition>
        <argsstring>() final</argsstring>
        <name>print_status_full</name>
        <reimplements refid="classclass__algorithm__base_1a96f34d67e881abd4d1ec4dd2d89728ad">print_status_full</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="37" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="426" bodyend="481"/>
        <references refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" compoundref="class__algorithm__base_8h" startline="31">class_algorithm_base::algo_name</references>
        <references refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" compoundref="class__algorithm__base_8h" startline="30">class_algorithm_base::algo_type</references>
        <references refid="classclass__algorithm__status_1a70442280f41b8930c1d4da6078dc3ea9" compoundref="class__algorithm__status_8h" startline="40">class_algorithm_status::algorithm_converged_for</references>
        <references refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" compoundref="class__algorithm__status_8h" startline="38">class_algorithm_status::algorithm_has_stuck_for</references>
        <references refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" compoundref="class__algorithm__status_8h" startline="36">class_algorithm_status::algorithm_has_succeeded</references>
        <references refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" compoundref="class__algorithm__status_8h" startline="39">class_algorithm_status::algorithm_saturated_for</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a64e18edd16eb044bcaf44469bc885ecf" compoundref="infinite_2measure_8cpp" startline="43" endline="47">tools::infinite::measure::bond_dimension</references>
        <references refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455">class_algorithm_base::cfg_chi_lim_max</references>
        <references refid="classclass__algorithm__status_1aeac0c89f563454766e7ca0aee016baf7" compoundref="class__algorithm__status_8h" startline="34">class_algorithm_status::delta_t</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a5f97c023ac5900d6961a0f23a51123d5" compoundref="measure__ham_8cpp" startline="18" endline="45">tools::infinite::measure::energy_per_site_ham</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a564124518e60fd2f24f8b50b55ac3b63" compoundref="measure__mom_8cpp" startline="54" endline="82">tools::infinite::measure::energy_per_site_mom</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a2283571fb9ddaedbc3d50e89d946d522" compoundref="infinite_2measure_8cpp" startline="98" endline="101">tools::infinite::measure::energy_per_site_mpo</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" compoundref="measure__ham_8cpp" startline="47" endline="174">tools::infinite::measure::energy_variance_per_site_ham</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" compoundref="measure__mom_8cpp" startline="84" endline="88">tools::infinite::measure::energy_variance_per_site_mom</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a5fdaab6447c154cd9720d8b834170a6d" compoundref="infinite_2measure_8cpp" startline="146" endline="150">tools::infinite::measure::energy_variance_per_site_mpo</references>
        <references refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" compoundref="class__algorithm__status_8h" startline="41">class_algorithm_status::entanglement_converged_for</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a5f7cd48eec3194c0d02aa53050d28f63" compoundref="infinite_2measure_8cpp" startline="55" endline="63">tools::infinite::measure::entanglement_entropy</references>
        <references refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" compoundref="class__algorithm__status_8h" startline="42">class_algorithm_status::entanglement_saturated_for</references>
        <references refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a9e28dfcb9c190549d7cf8ec4b986ea8f">iDMRG</references>
        <references refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a0bb0414b61270ee9c22f21b2f93b8f0f">iTEBD</references>
        <references refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" compoundref="class__algorithm__status_8h" startline="11">class_algorithm_status::iter</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="namespacetools_1_1common_1_1profile_1afd7671b1a2c5267039b7ebcac14e4f46" compoundref="prof_8cpp" startline="352" endline="352">tools::common::profile::mem_hwm_in_mb</references>
        <references refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" compoundref="class__tensors__infinite_8h" startline="16">class_tensors_infinite::state</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" compoundref="prof_8h" startline="12">tools::common::profile::t_tot</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a860d7ed08bbc15df634ab137a7b32eb7" compoundref="infinite_2measure_8cpp" startline="49" endline="53">tools::infinite::measure::truncation_error</references>
        <references refid="classclass__algorithm__status_1a652bd0136323e931f1c01a30680c1fc3" compoundref="class__algorithm__status_8h" startline="45">class_algorithm_status::variance_ham_converged_for</references>
        <references refid="classclass__algorithm__status_1a0c91d6784e4ea3d5112f623fefc00dc3" compoundref="class__algorithm__status_8h" startline="46">class_algorithm_status::variance_ham_saturated_for</references>
        <references refid="classclass__algorithm__status_1ac36092b2e1866813a3c7ab57758fffeb" compoundref="class__algorithm__status_8h" startline="47">class_algorithm_status::variance_mom_converged_for</references>
        <references refid="classclass__algorithm__status_1ab0d0d580a505a8f12f8cb29c1f6812f9" compoundref="class__algorithm__status_8h" startline="48">class_algorithm_status::variance_mom_saturated_for</references>
        <references refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" compoundref="class__algorithm__status_8h" startline="43">class_algorithm_status::variance_mpo_converged_for</references>
        <references refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" compoundref="class__algorithm__status_8h" startline="44">class_algorithm_status::variance_mpo_saturated_for</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a56ef1b5db54adc543de14e45914df2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::check_convergence_variance_mpo</definition>
        <argsstring>(std::optional&lt; double &gt; threshold=std::nullopt, std::optional&lt; double &gt; sensitivity=std::nullopt)</argsstring>
        <name>check_convergence_variance_mpo</name>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>threshold</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>sensitivity</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="40" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="226" bodyend="236"/>
        <references refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" compoundref="class__algorithm__base_8cpp" startline="85" endline="149">class_algorithm_base::check_saturation</references>
        <references refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" compoundref="class__algorithm__base_8cpp" startline="72" endline="82">class_algorithm_base::count_convergence</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a5fdaab6447c154cd9720d8b834170a6d" compoundref="infinite_2measure_8cpp" startline="146" endline="150">tools::infinite::measure::energy_variance_per_site_mpo</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" compoundref="class__algorithm__infinite_8h" startline="45">var_mpo_iter</references>
        <references refid="namespacesettings_1_1precision_1ae7fb706e3fd5e6c63bd9ed074313224a" compoundref="nmspc__settings_8h" startline="175">settings::precision::variance_convergence_threshold</references>
        <references refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" compoundref="class__algorithm__status_8h" startline="43">class_algorithm_status::variance_mpo_converged_for</references>
        <references refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" compoundref="class__algorithm__status_8h" startline="44">class_algorithm_status::variance_mpo_saturated_for</references>
        <references refid="namespacesettings_1_1precision_1a715185ed1f1d7ffce7a3f2837aca7223" compoundref="nmspc__settings_8h" startline="176">settings::precision::variance_saturation_sensitivity</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a1981c6eb3dd36a72d4b9660a428124d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::check_convergence_variance_ham</definition>
        <argsstring>(std::optional&lt; double &gt; threshold=std::nullopt, std::optional&lt; double &gt; sensitivity=std::nullopt)</argsstring>
        <name>check_convergence_variance_ham</name>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>threshold</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>sensitivity</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="41" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="238" bodyend="248"/>
        <references refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" compoundref="class__algorithm__base_8cpp" startline="85" endline="149">class_algorithm_base::check_saturation</references>
        <references refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" compoundref="class__algorithm__base_8cpp" startline="72" endline="82">class_algorithm_base::count_convergence</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" compoundref="measure__ham_8cpp" startline="47" endline="174">tools::infinite::measure::energy_variance_per_site_ham</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" compoundref="class__algorithm__infinite_8h" startline="46">var_ham_iter</references>
        <references refid="namespacesettings_1_1precision_1ae7fb706e3fd5e6c63bd9ed074313224a" compoundref="nmspc__settings_8h" startline="175">settings::precision::variance_convergence_threshold</references>
        <references refid="classclass__algorithm__status_1a652bd0136323e931f1c01a30680c1fc3" compoundref="class__algorithm__status_8h" startline="45">class_algorithm_status::variance_ham_converged_for</references>
        <references refid="classclass__algorithm__status_1a0c91d6784e4ea3d5112f623fefc00dc3" compoundref="class__algorithm__status_8h" startline="46">class_algorithm_status::variance_ham_saturated_for</references>
        <references refid="namespacesettings_1_1precision_1a715185ed1f1d7ffce7a3f2837aca7223" compoundref="nmspc__settings_8h" startline="176">settings::precision::variance_saturation_sensitivity</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1add59585709650152d0ab044fd88e715e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::check_convergence_variance_mom</definition>
        <argsstring>(std::optional&lt; double &gt; threshold=std::nullopt, std::optional&lt; double &gt; sensitivity=std::nullopt)</argsstring>
        <name>check_convergence_variance_mom</name>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>threshold</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>sensitivity</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="42" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="250" bodyend="260"/>
        <references refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" compoundref="class__algorithm__base_8cpp" startline="85" endline="149">class_algorithm_base::check_saturation</references>
        <references refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" compoundref="class__algorithm__base_8cpp" startline="72" endline="82">class_algorithm_base::count_convergence</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" compoundref="measure__mom_8cpp" startline="84" endline="88">tools::infinite::measure::energy_variance_per_site_mom</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
        <references refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" compoundref="class__algorithm__infinite_8h" startline="47">var_mom_iter</references>
        <references refid="namespacesettings_1_1precision_1ae7fb706e3fd5e6c63bd9ed074313224a" compoundref="nmspc__settings_8h" startline="175">settings::precision::variance_convergence_threshold</references>
        <references refid="classclass__algorithm__status_1ac36092b2e1866813a3c7ab57758fffeb" compoundref="class__algorithm__status_8h" startline="47">class_algorithm_status::variance_mom_converged_for</references>
        <references refid="classclass__algorithm__status_1ab0d0d580a505a8f12f8cb29c1f6812f9" compoundref="class__algorithm__status_8h" startline="48">class_algorithm_status::variance_mom_saturated_for</references>
        <references refid="namespacesettings_1_1precision_1a715185ed1f1d7ffce7a3f2837aca7223" compoundref="nmspc__settings_8h" startline="176">settings::precision::variance_saturation_sensitivity</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a678214cd778c2be70fc86cab66e406ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_algorithm_infinite::check_convergence_entg_entropy</definition>
        <argsstring>(std::optional&lt; double &gt; sensitivity=std::nullopt)</argsstring>
        <name>check_convergence_entg_entropy</name>
        <param>
          <type>std::optional&lt; double &gt;</type>
          <declname>sensitivity</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="43" column="10" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp" bodystart="262" bodyend="271"/>
        <references refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" compoundref="class__algorithm__base_8cpp" startline="85" endline="149">class_algorithm_base::check_saturation</references>
        <references refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" compoundref="class__algorithm__status_8h" startline="41">class_algorithm_status::entanglement_converged_for</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a5f7cd48eec3194c0d02aa53050d28f63" compoundref="infinite_2measure_8cpp" startline="55" endline="63">tools::infinite::measure::entanglement_entropy</references>
        <references refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" compoundref="class__algorithm__status_8h" startline="42">class_algorithm_status::entanglement_saturated_for</references>
        <references refid="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" compoundref="class__algorithm__infinite_8h" startline="48">entropy_iter</references>
        <references refid="namespacesettings_1_1precision_1a34f76495a655f0d1f76755b8c5aa3633" compoundref="nmspc__settings_8h" startline="177">settings::precision::entropy_saturation_sensitivity</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="classclass__tensors__infinite_1aea3ce807c53d7cb190588bad9df1a00a" compoundref="class__tensors__infinite_8h" startline="16">class_tensors_infinite::state</references>
        <references refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" compoundref="class__algorithm__base_8h" startline="28">class_algorithm_base::status</references>
        <references refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" compoundref="class__algorithm__infinite_8h" startline="17">tensors</references>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1a35e482872c1dec9372c74c40a82208d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>class_algorithm_base::class_algorithm_base</definition>
        <argsstring>()=default</argsstring>
        <name>class_algorithm_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="15" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classclass__algorithm__infinite_1ab8dd45b96c3bc6d6dac3164741d9dae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>class_algorithm_base::class_algorithm_base</definition>
        <argsstring>(std::shared_ptr&lt; h5pp::File &gt; h5ppFile_, AlgorithmType algo_type_)</argsstring>
        <name>class_algorithm_base</name>
        <param>
          <type>std::shared_ptr&lt; h5pp::File &gt;</type>
          <declname>h5ppFile_</declname>
        </param>
        <param>
          <type><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9" kindref="member">AlgorithmType</ref></type>
          <declname>algo_type_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="15" column="5" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_base.cpp" bodystart="18" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>class_idmrg</label>
        <link refid="classclass__idmrg"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>class_algorithm_infinite</label>
        <link refid="classclass__algorithm__infinite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>class_itebd</label>
        <link refid="classclass__itebd"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>class_algorithm_base</label>
        <link refid="classclass__algorithm__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>std::unique_ptr&lt; class_model_infinite &gt;</label>
      </node>
      <node id="10">
        <label>std::unique_ptr&lt; class_edges_infinite &gt;</label>
      </node>
      <node id="8">
        <label>class_tensors_infinite</label>
        <link refid="classclass__tensors__infinite"/>
        <childnode refid="9" relation="usage">
          <edgelabel>measurements</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>edges</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="1">
        <label>class_algorithm_infinite</label>
        <link refid="classclass__algorithm__infinite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>tensors</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>entropy_iter</edgelabel>
          <edgelabel>var_ham_iter</edgelabel>
          <edgelabel>var_mom_iter</edgelabel>
          <edgelabel>var_mpo_iter</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::shared_ptr&lt; h5pp::File &gt;</label>
      </node>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="12">
        <label>std::unique_ptr&lt; class_state_infinite &gt;</label>
      </node>
      <node id="6">
        <label>std::complex&lt; double &gt;</label>
      </node>
      <node id="9">
        <label>tensors_measure_infinite</label>
        <link refid="structtensors__measure__infinite"/>
      </node>
      <node id="2">
        <label>class_algorithm_base</label>
        <link refid="classclass__algorithm__base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>algo_name</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>status</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>h5pp_file</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>class_algorithm_status</label>
        <link refid="classclass__algorithm__status"/>
        <childnode refid="6" relation="usage">
          <edgelabel>delta_t</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" line="12" column="1" bodyfile="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h" bodystart="12" bodyend="49"/>
    <listofallmembers>
      <member refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>algo_name</name></member>
      <member refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>algo_type</name></member>
      <member refid="classclass__algorithm__base_1ab3e9bfaa0a5cf0810c3c7a074cfa9d69" prot="public" virt="pure-virtual"><scope>class_algorithm_infinite</scope><name>cfg_algorithm_is_on</name></member>
      <member refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" prot="public" virt="pure-virtual"><scope>class_algorithm_infinite</scope><name>cfg_chi_lim_grow</name></member>
      <member refid="classclass__algorithm__base_1a02248bae999554bcbbc84ba8bbaf6eb0" prot="public" virt="pure-virtual"><scope>class_algorithm_infinite</scope><name>cfg_chi_lim_init</name></member>
      <member refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" prot="public" virt="pure-virtual"><scope>class_algorithm_infinite</scope><name>cfg_chi_lim_max</name></member>
      <member refid="classclass__algorithm__base_1a1ff5ab0d312d132dd30243885d07dbd1" prot="public" virt="pure-virtual"><scope>class_algorithm_infinite</scope><name>cfg_print_freq</name></member>
      <member refid="classclass__algorithm__base_1a6d37e1472c3e74f8e50a11c71a8b03ee" prot="public" virt="pure-virtual"><scope>class_algorithm_infinite</scope><name>check_convergence</name></member>
      <member refid="classclass__algorithm__infinite_1a678214cd778c2be70fc86cab66e406ae" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>check_convergence_entg_entropy</name></member>
      <member refid="classclass__algorithm__infinite_1a1981c6eb3dd36a72d4b9660a428124d2" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>check_convergence_variance_ham</name></member>
      <member refid="classclass__algorithm__infinite_1add59585709650152d0ab044fd88e715e" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>check_convergence_variance_mom</name></member>
      <member refid="classclass__algorithm__infinite_1a56ef1b5db54adc543de14e45914df2dd" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>check_convergence_variance_mpo</name></member>
      <member refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" prot="protected" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>check_saturation</name></member>
      <member refid="classclass__algorithm__infinite_1a35e482872c1dec9372c74c40a82208d0" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>class_algorithm_base</name></member>
      <member refid="classclass__algorithm__infinite_1ab8dd45b96c3bc6d6dac3164741d9dae0" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>class_algorithm_base</name></member>
      <member refid="classclass__algorithm__base_1ab8dd45b96c3bc6d6dac3164741d9dae0" prot="public" virt="non-virtual" ambiguityscope="class_algorithm_base::"><scope>class_algorithm_infinite</scope><name>class_algorithm_base</name></member>
      <member refid="classclass__algorithm__infinite_1a0ad18e5b809b20e90df53c67e2421ef2" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>class_algorithm_infinite</name></member>
      <member refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>clear_convergence_status</name></member>
      <member refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>copy_from_tmp</name></member>
      <member refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" prot="protected" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>count_convergence</name></member>
      <member refid="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>entropy_iter</name></member>
      <member refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>h5pp_file</name></member>
      <member refid="classclass__algorithm__base_1a0a68686f23b45bcdc7c833a7bf348b54" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>init_bond_dimension_limits</name></member>
      <member refid="classclass__algorithm__base_1affa46990d9763a23323280340fb62510" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>print_profiling_lap</name></member>
      <member refid="classclass__algorithm__infinite_1a993724b938167db865be9b23f291b5d9" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>print_status_full</name></member>
      <member refid="classclass__algorithm__infinite_1af232e6d037549f0aae338b402aa9c722" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>print_status_update</name></member>
      <member refid="classclass__algorithm__base_1aeec0f1d83000ef7ba92bbcdd74bdcabb" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>quietNaN</name></member>
      <member refid="classclass__algorithm__infinite_1a97d87cb8fcb7ddd09913e1cabdcd1394" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>randomize_model</name></member>
      <member refid="classclass__algorithm__infinite_1a2573591517d4f3874fa0ab7c6cbea2a8" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>randomize_state</name></member>
      <member refid="classclass__algorithm__infinite_1ae14b72b2eb26ac37f453c24cd2c5a68c" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>run</name></member>
      <member refid="classclass__algorithm__infinite_1aa7176e26e0dd793557a649fc6c0b75f1" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>run_postprocessing</name></member>
      <member refid="classclass__algorithm__infinite_1a2cabf133e43683569ef43b9639476dab" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>run_preprocessing</name></member>
      <member refid="classclass__algorithm__infinite_1abdf68a4ae64f7302ad9e82a48d468e8a" prot="public" virt="pure-virtual"><scope>class_algorithm_infinite</scope><name>run_simulation</name></member>
      <member refid="classclass__algorithm__base_1ac2a5042c5337ef3b8c6d29a115e25843" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>Scalar</name></member>
      <member refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>status</name></member>
      <member refid="classclass__algorithm__base_1a6d3e78c2e18dc5878763bbd914c0d490" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>stop_reason</name></member>
      <member refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>tensors</name></member>
      <member refid="classclass__algorithm__infinite_1a93e97af4e20920c9690ff47fe78ddd60" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>update_bond_dimension_limit</name></member>
      <member refid="classclass__algorithm__infinite_1acb14ea81ee6e72bc06bd3fbd1627249b" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>update_variance_max_digits</name></member>
      <member refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>var_ham_iter</name></member>
      <member refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>var_mom_iter</name></member>
      <member refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" prot="public" virt="non-virtual"><scope>class_algorithm_infinite</scope><name>var_mpo_iter</name></member>
      <member refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" prot="public" virt="virtual"><scope>class_algorithm_infinite</scope><name>write_to_file</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
