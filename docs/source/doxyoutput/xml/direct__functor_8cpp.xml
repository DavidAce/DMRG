<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="direct__functor_8cpp" kind="file" language="C++">
    <compoundname>direct_functor.cpp</compoundname>
    <includes refid="opt_8h" local="no">state/tools/finite/opt.h</includes>
    <includes refid="class__finite__state_8h" local="no">state/class_finite_state.h</includes>
    <includes refid="class__environment_8h" local="no">state/class_environment.h</includes>
    <includes refid="class__model__base_8h" local="no">model/class_model_base.h</includes>
    <includes refid="class__simulation__status_8h" local="no">simulation/class_simulation_status.h</includes>
    <incdepgraph>
      <node id="2788">
        <label>iomanip</label>
      </node>
      <node id="2786">
        <label>iterator</label>
      </node>
      <node id="2799">
        <label>glog/logging.h</label>
      </node>
      <node id="2797">
        <label>LBFGS.h</label>
      </node>
      <node id="2798">
        <label>ceres/ceres.h</label>
      </node>
      <node id="2789">
        <label>general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="2790" relation="include">
        </childnode>
        <childnode refid="2783" relation="include">
        </childnode>
        <childnode refid="2785" relation="include">
        </childnode>
      </node>
      <node id="2783">
        <label>Eigen/Core</label>
      </node>
      <node id="2781">
        <label>string</label>
      </node>
      <node id="2811">
        <label>hdf5_hl.h</label>
      </node>
      <node id="2795">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="2796" relation="include">
        </childnode>
        <childnode refid="2787" relation="include">
        </childnode>
      </node>
      <node id="2791">
        <label>io/nmspc_logger.h</label>
        <link refid="nmspc__logger_8h"/>
        <childnode refid="2792" relation="include">
        </childnode>
        <childnode refid="2793" relation="include">
        </childnode>
        <childnode refid="2794" relation="include">
        </childnode>
      </node>
      <node id="2807">
        <label>simulation/class_simulation_status.h</label>
        <link refid="class__simulation__status_8h"/>
        <childnode refid="2780" relation="include">
        </childnode>
        <childnode refid="2781" relation="include">
        </childnode>
        <childnode refid="2787" relation="include">
        </childnode>
        <childnode refid="2808" relation="include">
        </childnode>
        <childnode refid="2809" relation="include">
        </childnode>
        <childnode refid="2810" relation="include">
        </childnode>
        <childnode refid="2811" relation="include">
        </childnode>
      </node>
      <node id="2790">
        <label>experimental/type_traits</label>
      </node>
      <node id="2785">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="2803">
        <label>state/class_environment.h</label>
        <link refid="class__environment_8h"/>
        <childnode refid="2780" relation="include">
        </childnode>
        <childnode refid="2782" relation="include">
        </childnode>
        <childnode refid="2804" relation="include">
        </childnode>
      </node>
      <node id="2806">
        <label>model/class_model_base.h</label>
        <link refid="class__model__base_8h"/>
        <childnode refid="2780" relation="include">
        </childnode>
        <childnode refid="2785" relation="include">
        </childnode>
        <childnode refid="2791" relation="include">
        </childnode>
      </node>
      <node id="2792">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="2784">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2777">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/opt-internals/direct_functor.cpp</label>
        <link refid="direct__functor_8cpp"/>
        <childnode refid="2778" relation="include">
        </childnode>
        <childnode refid="2800" relation="include">
        </childnode>
        <childnode refid="2803" relation="include">
        </childnode>
        <childnode refid="2806" relation="include">
        </childnode>
        <childnode refid="2807" relation="include">
        </childnode>
      </node>
      <node id="2800">
        <label>state/class_finite_state.h</label>
        <link refid="class__finite__state_8h"/>
        <childnode refid="2780" relation="include">
        </childnode>
        <childnode refid="2801" relation="include">
        </childnode>
        <childnode refid="2802" relation="include">
        </childnode>
        <childnode refid="2782" relation="include">
        </childnode>
        <childnode refid="2803" relation="include">
        </childnode>
        <childnode refid="2805" relation="include">
        </childnode>
        <childnode refid="2806" relation="include">
        </childnode>
      </node>
      <node id="2802">
        <label>optional</label>
      </node>
      <node id="2808">
        <label>vector</label>
      </node>
      <node id="2804">
        <label>spdlog/fmt/fmt.h</label>
      </node>
      <node id="2793">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="2809">
        <label>array</label>
      </node>
      <node id="2810">
        <label>hdf5.h</label>
      </node>
      <node id="2787">
        <label>iostream</label>
      </node>
      <node id="2796">
        <label>chrono</label>
      </node>
      <node id="2778">
        <label>state/tools/finite/opt.h</label>
        <link refid="opt_8h"/>
        <childnode refid="2779" relation="include">
        </childnode>
        <childnode refid="2795" relation="include">
        </childnode>
        <childnode refid="2788" relation="include">
        </childnode>
        <childnode refid="2797" relation="include">
        </childnode>
        <childnode refid="2798" relation="include">
        </childnode>
        <childnode refid="2799" relation="include">
        </childnode>
      </node>
      <node id="2801">
        <label>complex</label>
      </node>
      <node id="2782">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="2783" relation="include">
        </childnode>
        <childnode refid="2784" relation="include">
        </childnode>
        <childnode refid="2785" relation="include">
        </childnode>
        <childnode refid="2786" relation="include">
        </childnode>
        <childnode refid="2787" relation="include">
        </childnode>
        <childnode refid="2788" relation="include">
        </childnode>
        <childnode refid="2789" relation="include">
        </childnode>
      </node>
      <node id="2779">
        <label>state/tools/nmspc_tools.h</label>
        <link refid="nmspc__tools_8h"/>
        <childnode refid="2780" relation="include">
        </childnode>
        <childnode refid="2781" relation="include">
        </childnode>
        <childnode refid="2782" relation="include">
        </childnode>
        <childnode refid="2791" relation="include">
        </childnode>
        <childnode refid="2795" relation="include">
        </childnode>
      </node>
      <node id="2794">
        <label>spdlog/sinks/stdout_sinks.h</label>
      </node>
      <node id="2780">
        <label>memory</label>
      </node>
      <node id="2805">
        <label>state/class_vidal_site.h</label>
        <link refid="class__vidal__site_8h"/>
        <childnode refid="2782" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-05-31.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="opt_8h" kindref="compound">state/tools/finite/opt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__finite__state_8h" kindref="compound">state/class_finite_state.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__environment_8h" kindref="compound">state/class_environment.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__model__base_8h" kindref="compound">model/class_model_base.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__simulation__status_8h" kindref="compound">simulation/class_simulation_status.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="14" refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor_1a15118d78649c98f7eefee76fe891a761" refkind="member"><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor_1a15118d78649c98f7eefee76fe891a761" kindref="member">tools::finite::opt::internals::direct_functor&lt;Scalar&gt;::direct_functor</ref>(</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref><sp/>&amp;state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__simulation__status" kindref="compound">class_simulation_status</ref><sp/>&amp;sim_status)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor" kindref="compound">base_functor</ref>(state,sim_status),<sp/>multiComponents(state)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="25" refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor_1ad7c1e0c43aecbe355335ad02c72ec065" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor_1ad7c1e0c43aecbe355335ad02c72ec065" kindref="member">tools::finite::opt::internals::direct_functor&lt;Scalar&gt;::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;v_double_double,<sp/>Eigen::VectorXd<sp/>&amp;grad_double_double)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internals_1ae856cf10304d5ce8449925dd9872e077" kindref="member">t_op</ref>-&gt;tic();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref><sp/>vH2v,vHv;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref><sp/>ene,var;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vv,fx,log10var;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energy_func,<sp/>energy_grad;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm_func,norm_grad;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor_1a27c194d8ed42190c4884658e4bbdfbe8" kindref="member">VectorType</ref><sp/>Hv,<sp/>H2v;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vecSize<sp/>=<sp/>v_double_double.size();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same&lt;<ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>,std::complex&lt;double&gt;&gt;::value){vecSize<sp/>=<sp/>v_double_double.size()/2;}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/><sp/><sp/><sp/>=<sp/>Eigen::Map&lt;const<sp/>VectorType&gt;<sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v_double_double.data())<sp/><sp/><sp/>,<sp/>vecSize);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>grad<sp/>=<sp/>Eigen::Map&lt;<sp/><sp/><sp/><sp/><sp/><sp/>VectorType&gt;<sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(grad_double_double.data()),<sp/>vecSize);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambdas<sp/>=<sp/><sp/><sp/><sp/>Eigen::VectorXd::Ones(1)<sp/>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>vv<sp/><sp/><sp/><sp/>=<sp/>v.squaredNorm();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a95b852d7a06c1fc5e69c4695e7b3de45" kindref="member">norm</ref><sp/><sp/>=<sp/>std::sqrt(vv);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>sections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>std::tie(H2v,<sp/>vH2v)<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internals_1a89cc203be6152c9aaca3a5fc5f1a2a8d" kindref="member">get_H2v_vH2v</ref>(v,<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor_1a9ba1ac5fc19806c415e5c63bfcc31b86" kindref="member">multiComponents</ref>);<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>std::tie(Hv,<sp/>vHv)<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internals_1a60312ffa8738bc2d1f9da4a2aafb2172" kindref="member">get_Hv_vHv</ref>(v,<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor_1a9ba1ac5fc19806c415e5c63bfcc31b86" kindref="member">multiComponents</ref>);<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ene<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vHv/vv;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>vH2v/vv<sp/>-<sp/>ene*ene;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>loss_of_precision<sp/>=<sp/>std::log10(std::abs(ene*ene));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>expected_error<sp/><sp/><sp/><sp/>=<sp/>std::pow(10,<sp/>-(13-loss_of_precision));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(std::imag(ene)<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>expected_error)<sp/>tools::log-&gt;warn(&quot;Energy<sp/>has<sp/>imaginary<sp/>component<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{:.16f}<sp/>+<sp/>i<sp/>{:.16f}&quot;<sp/>,<sp/>std::real(ene)<sp/><sp/><sp/><sp/>,<sp/>std::imag(ene));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(std::imag(vH2v/vv)<sp/><sp/>&gt;<sp/>expected_error)<sp/>tools::log-&gt;warn(&quot;Hamiltonian<sp/>squared<sp/>has<sp/>imaginary<sp/>component<sp/>:<sp/>{:.16f}<sp/>+<sp/>i<sp/>{:.16f}&quot;<sp/>,<sp/>std::real(vH2v/vv),<sp/>std::imag(vH2v/vv));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(std::imag(var)<sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>expected_error)<sp/>tools::log-&gt;warn(&quot;Variance<sp/>has<sp/>imaginary<sp/>component<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{:.16f}<sp/>+<sp/>i<sp/>{:.16f}&quot;<sp/>,<sp/>std::real(var)<sp/><sp/><sp/><sp/>,<sp/>std::imag(var));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::real(var)<sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Counter<sp/>=<sp/>{}.<sp/>Variance<sp/>is<sp/>negative:<sp/><sp/>{:.16f}<sp/>+<sp/>i<sp/>{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a24759640b86779153116a589d3a5109c" kindref="member">counter</ref>,<sp/>std::real(var)<sp/><sp/><sp/><sp/>,<sp/>std::imag(var));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a51957f739ef112398674dc44e08b6b68" kindref="member">energy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::real(ene);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a5df94a80e95c1158404026900e8f1b1a" kindref="member">energy_dens</ref><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a51957f739ef112398674dc44e08b6b68" kindref="member">energy</ref>/<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a10db15e8473f14d9c5a51e61b28d6f04" kindref="member">length</ref><sp/>-<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a2298318957b8820a7fc57e203c964f63" kindref="member">energy_min</ref><sp/>)<sp/>/<sp/>(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a821bb923c7abfe818cff2b7e3cef49f2" kindref="member">energy_max</ref><sp/>-<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a2298318957b8820a7fc57e203c964f63" kindref="member">energy_min</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1af7f5f52bbb14be6ebff9a633f58c0376" kindref="member">energy_offset</ref><sp/><sp/>=<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a5df94a80e95c1158404026900e8f1b1a" kindref="member">energy_dens</ref><sp/>-<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1acc954f67c99b28164aafdcd108d54a0f" kindref="member">energy_target_dens</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>energy_func<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internals_1abbfb87cc2b3227f29ccc1fb097672dba" kindref="member">windowed_func_pow</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1af7f5f52bbb14be6ebff9a633f58c0376" kindref="member">energy_offset</ref>,<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a8ff842d78db61b7b486fd1f88b9add42" kindref="member">energy_window</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>energy_grad<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internals_1ab89afabb25e65e320b0f548ed17bed3e" kindref="member">windowed_grad_pow</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1af7f5f52bbb14be6ebff9a633f58c0376" kindref="member">energy_offset</ref>,<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a8ff842d78db61b7b486fd1f88b9add42" kindref="member">energy_window</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a28999fddbeb73a42cc56c9d65726d5c0" kindref="member">variance</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::abs(var);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a28999fddbeb73a42cc56c9d65726d5c0" kindref="member">variance</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a28999fddbeb73a42cc56c9d65726d5c0" kindref="member">variance</ref><sp/>&lt;<sp/>1e-15<sp/><sp/>?<sp/>1e-15<sp/>:<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a28999fddbeb73a42cc56c9d65726d5c0" kindref="member">variance</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1abe03a260b9462d303c6974357b19a2f1" kindref="member">norm_offset</ref><sp/><sp/><sp/><sp/>=<sp/>std::abs(vv)<sp/>-<sp/>1.0<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>norm_func<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internals_1abbfb87cc2b3227f29ccc1fb097672dba" kindref="member">windowed_func_pow</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1abe03a260b9462d303c6974357b19a2f1" kindref="member">norm_offset</ref>,0.0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>norm_grad<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internals_1ab89afabb25e65e320b0f548ed17bed3e" kindref="member">windowed_grad_pow</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1abe03a260b9462d303c6974357b19a2f1" kindref="member">norm_offset</ref>,0.0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>log10var<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::log10(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a28999fddbeb73a42cc56c9d65726d5c0" kindref="member">variance</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>fx<sp/>=<sp/>log10var</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>energy_func<sp/>*<sp/>lambdas(0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>norm_func;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vv_1<sp/><sp/>=<sp/>std::pow(vv,-1);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>var_1<sp/>=<sp/>1.0/<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a28999fddbeb73a42cc56c9d65726d5c0" kindref="member">variance</ref>/<ref refid="namespaceeigutils_1_1eig_logger_1aa81c1034622db3922ad65b5278492ad9" kindref="member">std::log</ref>(10);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>var_1<sp/>*<sp/>vv_1<sp/>*<sp/>(H2v<sp/><sp/>-<sp/>v<sp/><sp/>*<sp/>vH2v<sp/>-<sp/>2.0<sp/>*<sp/>ene<sp/>*<sp/>(Hv<sp/>-<sp/>v<sp/>*<sp/>ene))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>lambdas(0)<sp/>*<sp/>energy_grad<sp/>*<sp/>vv_1<sp/>*<sp/>(Hv<sp/>-<sp/>v<sp/>*<sp/>ene)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>norm_grad<sp/>*<sp/>v;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad(grad.size()-1)<sp/><sp/>=<sp/>energy_func;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(std::is_same&lt;Scalar,std::complex&lt;double&gt;&gt;::value){grad*=2;<sp/>vecSize<sp/>=<sp/>grad.size()*2;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>grad_double_double<sp/><sp/>=<sp/>Eigen::Map&lt;Eigen::VectorXd&gt;<sp/>(reinterpret_cast&lt;double*&gt;<sp/>(grad.data()),<sp/>vecSize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/><sp/><sp/>&lt;&lt;<sp/>std::setprecision(12)<sp/>&lt;&lt;<sp/>std::fixed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>Variance:<sp/>&quot;<sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>log10var</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>Energy<sp/>:<sp/>&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>Energy<sp/>t<sp/>:<sp/>&quot;<sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>energy_target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>Energy<sp/>w<sp/>:<sp/>&quot;<sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>energy_density_window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>Energy<sp/>d<sp/>:<sp/>&quot;<sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>energy_dens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>Energy<sp/>td<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>energy_target_dens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>Energy<sp/>o<sp/>:<sp/>&quot;<sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>energy_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>norm<sp/>o<sp/>:<sp/>&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>norm_offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>lambda<sp/>0:<sp/>&quot;<sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>lambdas(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>fx<sp/>:<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(18)<sp/><sp/><sp/>&lt;&lt;<sp/>fx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::isnan(log10var)<sp/>or<sp/>std::isinf(log10var)){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;log10<sp/>variance<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;vv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/>std::real(vv)<sp/><sp/>,<sp/>std::imag(vv));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;vH2v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/>std::real(vH2v)<sp/>,std::imag(vH2v)<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;vHv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/>std::real(vHv)<sp/><sp/>,std::imag(vHv)<sp/><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/>std::real(var)<sp/><sp/>,std::imag(var));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;ene<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/>std::real(ene)<sp/><sp/>,std::imag(ene));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;log10(var/L)<sp/><sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/>std::log10(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a28999fddbeb73a42cc56c9d65726d5c0" kindref="member">variance</ref>/<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a10db15e8473f14d9c5a51e61b28d6f04" kindref="member">length</ref>)<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;energy<sp/>offset<sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1af7f5f52bbb14be6ebff9a633f58c0376" kindref="member">energy_offset</ref><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;norm<sp/><sp/><sp/>offset<sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1abe03a260b9462d303c6974357b19a2f1" kindref="member">norm_offset</ref><sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;lambda<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal"><sp/>,<sp/>lambdas(0));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Direct<sp/>functor<sp/>failed<sp/>at<sp/>counter<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a24759640b86779153116a589d3a5109c" kindref="member">counter</ref>)<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1base__functor_1a24759640b86779153116a589d3a5109c" kindref="member">counter</ref>++;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internals_1ae856cf10304d5ce8449925dd9872e077" kindref="member">t_op</ref>-&gt;toc();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fx;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor" kindref="compound">tools::finite::opt::internals::direct_functor&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internals_1_1direct__functor" kindref="compound">tools::finite::opt::internals::direct_functor&lt;std::complex&lt;double&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/opt-internals/direct_functor.cpp"/>
  </compounddef>
</doxygen>
