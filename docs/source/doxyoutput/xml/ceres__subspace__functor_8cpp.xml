<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ceres__subspace__functor_8cpp" kind="file" language="C++">
    <compoundname>ceres_subspace_functor.cpp</compoundname>
    <includes refid="ceres__subspace__functor_8h" local="yes">ceres_subspace_functor.h</includes>
    <includes refid="class__tensors__finite_8h" local="no">tensors/class_tensors_finite.h</includes>
    <includes refid="class__edges__finite_8h" local="no">tensors/edges/class_edges_finite.h</includes>
    <includes refid="class__state__finite_8h" local="no">tensors/state/class_state_finite.h</includes>
    <includes refid="log_8h" local="no">tools/common/log.h</includes>
    <includes refid="prof_8h" local="no">tools/common/prof.h</includes>
    <includes refid="opt-internal_8h" local="no">tools/finite/opt-internal/opt-internal.h</includes>
    <incdepgraph>
      <node id="15">
        <label>ceres/iteration_callback.h</label>
      </node>
      <node id="32">
        <label>measure/state_measure_finite.h</label>
        <link refid="state__measure__finite_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="17">
        <label>tensors/class_tensors_finite.h</label>
        <link refid="class__tensors__finite_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>io/spdlog.h</label>
        <link refid="spdlog_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="34">
        <label>tools/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stdexcept</label>
      </node>
      <node id="20">
        <label>numeric</label>
      </node>
      <node id="35">
        <label>io/fmt.h</label>
        <link refid="io_2fmt_8h"/>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="30">
        <label>tensors/edges/class_edges_finite.h</label>
        <link refid="class__edges__finite_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>measure/tensors_measure_finite.h</label>
        <link refid="tensors__measure__finite_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="27">
        <label>tensors/edges/class_env_pair.h</label>
        <link refid="class__env__pair_8h"/>
      </node>
      <node id="11">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h</label>
      </node>
      <node id="28">
        <label>math/svd/settings.h</label>
        <link refid="svd_2settings_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorMacros.h</label>
      </node>
      <node id="29">
        <label>fmt/core.h</label>
      </node>
      <node id="14">
        <label>ceres/first_order_function.h</label>
      </node>
      <node id="22">
        <label>string_view</label>
      </node>
      <node id="26">
        <label>optional</label>
      </node>
      <node id="2">
        <label>ceres_subspace_functor.h</label>
        <link refid="ceres__subspace__functor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>vector</label>
      </node>
      <node id="3">
        <label>general/eigen_tensor_fwd_decl.h</label>
        <link refid="eigen__tensor__fwd__decl_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>tools/common/prof.h</label>
        <link refid="prof_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>array</label>
      </node>
      <node id="9">
        <label>Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="10">
        <label>Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="40">
        <label>tools/finite/opt-internal/opt-internal.h</label>
        <link refid="opt-internal_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/tools/finite/opt-internal/ceres_subspace_functor.cpp</label>
        <link refid="ceres__subspace__functor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="38">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>tools/finite/opt.h</label>
        <link refid="finite_2opt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>type_traits</label>
      </node>
      <node id="41">
        <label>ceres/gradient_problem_solver.h</label>
      </node>
      <node id="6">
        <label>complex</label>
      </node>
      <node id="31">
        <label>tensors/state/class_state_finite.h</label>
        <link refid="class__state__finite_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>tools/finite/opt-internal/ceres_base.h</label>
        <link refid="ceres__base_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="19">
        <label>config/enums.h</label>
        <link refid="config_2enums_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-07-15.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ceres__subspace__functor_8h" kindref="compound">ceres_subspace_functor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__tensors__finite_8h" kindref="compound">tensors/class_tensors_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__edges__finite_8h" kindref="compound">tensors/edges/class_edges_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__finite_8h" kindref="compound">tensors/state/class_state_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log_8h" kindref="compound">tools/common/log.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prof_8h" kindref="compound">tools/common/prof.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="opt-internal_8h" kindref="compound">tools/finite/opt-internal/opt-internal.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1finite_1_1opt_1_1internal" kindref="compound">tools::finite::opt::internal</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="14" refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a117a9c0c4ec8843e3ba96561a8d56181" refkind="member"><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a117a9c0c4ec8843e3ba96561a8d56181" kindref="member">tools::finite::opt::internal::ceres_subspace_functor&lt;Scalar&gt;::ceres_subspace_functor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__tensors__finite" kindref="compound">class_tensors_finite</ref><sp/>&amp;tensors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__status" kindref="compound">class_algorithm_status</ref><sp/>&amp;status,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1ad8ddd37e58553fd8fc211730db7aa931" kindref="member">MatrixType</ref><sp/>&amp;H2_subspace,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_eigen_1a58d991460c038b5dc833ca50d80657e3" kindref="member">Eigen::VectorXd</ref><sp/>&amp;eigvals_)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__base__functor" kindref="compound">ceres_base_functor</ref>(tensors,<sp/>status),<sp/>H2(H2_subspace),<sp/>eigvals(eigvals_)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nonhermiticity<sp/>=<sp/>(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a20a166fcddb704da3585dc47b9b1f984" kindref="member">H2</ref><sp/>-<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a20a166fcddb704da3585dc47b9b1f984" kindref="member">H2</ref>.adjoint()).cwiseAbs().sum()<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a20a166fcddb704da3585dc47b9b1f984" kindref="member">H2</ref>.size());</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nonhermiticity<sp/>&gt;<sp/>1e-12)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;error(</highlight><highlight class="stringliteral">&quot;ceres_subspace_functor():<sp/>H2<sp/>is<sp/>not<sp/>Hermitian:<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>nonhermiticity);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__base__functor_1ada202e879d518f4246b989b5b083a554" kindref="member">num_parameters</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a23db6a16a38dbb357b190e32859e60a4" kindref="member">eigvals</ref>.size());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>scalar<sp/>is<sp/>complex<sp/>we<sp/>optimize<sp/>a<sp/>problem<sp/>of<sp/>twice<sp/>the<sp/>linear<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same&lt;<ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref>,<sp/>std::complex&lt;double&gt;&gt;::value)<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__base__functor_1ada202e879d518f4246b989b5b083a554" kindref="member">num_parameters</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="28" refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a6fef56e83a33caecd537f197194b2e33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a6fef56e83a33caecd537f197194b2e33" kindref="member">tools::finite::opt::internal::ceres_subspace_functor&lt;Scalar&gt;::Evaluate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*v_double_double,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*fx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*grad_double_double)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_step_token<sp/><sp/>=<sp/>t_step-&gt;tic_token();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref><sp/><sp/><sp/><sp/><sp/>nH2n,<sp/>nHn,<sp/>var;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>vv,<sp/>log10var;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a52cfcc96cd224757aaafe286fecd4247" kindref="member">VectorType</ref><sp/>Hn,<sp/>H2n;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecSize<sp/>=<sp/>NumParameters();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same&lt;<ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref>,<sp/>std::complex&lt;double&gt;&gt;::value)<sp/>{<sp/>vecSize<sp/>=<sp/>NumParameters()<sp/>/<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Map&lt;const<sp/>VectorType&gt;<sp/>v(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v_double_double),<sp/>vecSize);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor_1a52cfcc96cd224757aaafe286fecd4247" kindref="member">VectorType</ref><sp/>n<sp/>=<sp/>v.normalized();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>vv<sp/><sp/><sp/>=<sp/>v.squaredNorm();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref><sp/>=<sp/>std::sqrt(vv);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>t_Hn-&gt;tic();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Hn<sp/>=<sp/>eigvals.asDiagonal()<sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>t_Hn-&gt;toc();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>t_nHn-&gt;tic();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>nHn<sp/>=<sp/>n.dot(Hn);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>t_nHn-&gt;toc();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>t_H2n-&gt;tic();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>H2n<sp/>=<sp/>H2.template<sp/>selfadjointView&lt;Eigen::Lower&gt;()<sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>t_H2n-&gt;toc();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>t_nH2n-&gt;tic();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>nH2n<sp/>=<sp/>n.dot(H2n);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>t_nH2n-&gt;toc();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>this<sp/>next<sp/>bit<sp/>carefully<sp/>to<sp/>avoid<sp/>negative<sp/>variance<sp/>when<sp/>numbers<sp/>are<sp/>very<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>nH2n<sp/>-<sp/>nHn<sp/>*<sp/>nHn;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>std::numeric_limits&lt;double&gt;::epsilon();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(var)<sp/>&lt;<sp/>-eps<sp/>or<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nH2n)<sp/>&lt;<sp/>-eps)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Counter<sp/>=<sp/>{}<sp/>|<sp/>SUBSPACE<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;negative:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/><sp/>{:.16f}<sp/>+<sp/>{:.16f}i<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nHn<sp/><sp/>{:.16f}<sp/>+<sp/>{:.16f}i<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nH2n<sp/>{:.16f}<sp/>+<sp/>{:.16f}i&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(var),<sp/>std::imag(var),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nHn),<sp/>std::imag(nHn),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nH2n),<sp/>std::imag(nH2n));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>var<sp/>=<sp/>std::abs(var);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>var<sp/>=<sp/>std::real(var)<sp/>==<sp/>0.0<sp/>?<sp/>eps<sp/>:<sp/>var;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nHn<sp/>+<sp/><ref refid="namespacetools_1_1finite_1_1measure_1adf8bc0e9cd41a987d462608c75a36b40" kindref="member">energy_reduced</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8145a38b82bae9aa25597372b688670e" kindref="member">energy_per_site</ref><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref><sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetools_1_1finite_1_1measure_1a1d47691c527644e67b5fbb53f46aa7a9" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>variance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::abs(var);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>variance_per_site<sp/>=<sp/>variance<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetools_1_1finite_1_1measure_1a1d47691c527644e67b5fbb53f46aa7a9" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>norm_offset<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::abs(vv)<sp/>-<sp/>1.0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log10var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::log10(variance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>work<sp/>with<sp/>a<sp/>small<sp/>offset<sp/>on<sp/>the<sp/>variance:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>the<sp/>variance<sp/>is<sp/>very<sp/>low,<sp/>numerical<sp/>noise<sp/>will<sp/>sometimes<sp/>cause<sp/>nH2n<sp/>&lt;<sp/>0<sp/>or<sp/>var<sp/>&lt;<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>think<sp/>this<sp/>is<sp/>caused<sp/>by<sp/>H2<sp/>being<sp/>slightly<sp/>non-symmetric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var_offset<sp/>=<sp/>std::clamp(<ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(var)<sp/>+<sp/>1e-12,<sp/>eps,<sp/>std::abs(var)<sp/>+<sp/>1e-12<sp/>)<sp/><sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>log10var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::log10(var_offset);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/>fx[0]<sp/>=<sp/>log10var;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Map&lt;VectorType&gt;<sp/>grad(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(grad_double_double),<sp/>vecSize);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grad_double_double<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>one_over_norm<sp/><sp/>=<sp/>1.0/<ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>var_1<sp/>=<sp/>1.0<sp/>/<sp/>var_offset<sp/>/<sp/><ref refid="namespaceeig_1ae96cb5c133e7edfc21bb951904f03b3b" kindref="member">std::log</ref>(10);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>var_1<sp/>*<sp/>one_over_norm<sp/>*<sp/>(H2n<sp/>-<sp/>2.0<sp/>*<sp/>nHn<sp/>*<sp/>Hn<sp/>-<sp/>(nH2n<sp/>-<sp/>2.0<sp/>*<sp/>nHn<sp/>*<sp/>nHn)<sp/>*<sp/>n);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same&lt;Scalar,<sp/>double&gt;::value)<sp/>{<sp/>grad<sp/>*=<sp/>2.0;<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad_max_norm<sp/>=<sp/>grad.template<sp/>lpNorm&lt;Eigen::Infinity&gt;();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::isnan(log10var)<sp/>or<sp/>std::isinf(log10var))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>variance<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;log₁₀(var)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(variance));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;counter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>counter);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;vecsize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>vecSize);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;vv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(vv),<sp/>std::imag(vv));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;nH2n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nH2n),<sp/>std::imag(nH2n));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;nHn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nHn),<sp/>std::imag(nHn));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(var),<sp/>std::imag(var));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;energy<sp/>offset<sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>energy_offset);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;energy<sp/>reduced<sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1adf8bc0e9cd41a987d462608c75a36b40" kindref="member">energy_reduced</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;norm<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;norm<sp/><sp/><sp/>offset<sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>norm_offset);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Direct<sp/>functor<sp/>failed<sp/>at<sp/>counter<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacelinalg_1_1matrix_1a47330fd73f538435fc51d33de3a9a67b" kindref="member">std::to_string</ref>(counter));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor" kindref="compound">tools::finite::opt::internal::ceres_subspace_functor&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__subspace__functor" kindref="compound">tools::finite::opt::internal::ceres_subspace_functor&lt;std::complex&lt;double&gt;</ref>&gt;;</highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/DMRG++/source/tools/finite/opt-internal/ceres_subspace_functor.cpp"/>
  </compounddef>
</doxygen>
