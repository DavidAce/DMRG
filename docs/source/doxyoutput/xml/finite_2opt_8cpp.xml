<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="finite_2opt_8cpp" kind="file" language="C++">
    <compoundname>opt.cpp</compoundname>
    <includes local="no">string</includes>
    <includes refid="opt_8h" local="no">tools/finite/opt.h</includes>
    <includes refid="class__state__finite_8h" local="no">state/class_state_finite.h</includes>
    <includes refid="class__simulation__status_8h" local="no">simulation/class_simulation_status.h</includes>
    <includes refid="class__model__base_8h" local="no">model/class_model_base.h</includes>
    <includes local="no">glog/logging.h</includes>
    <incdepgraph>
      <node id="3970">
        <label>list</label>
      </node>
      <node id="3990">
        <label>iomanip</label>
      </node>
      <node id="3989">
        <label>iterator</label>
      </node>
      <node id="4000">
        <label>glog/logging.h</label>
      </node>
      <node id="3983">
        <label>ceres/ceres.h</label>
      </node>
      <node id="3984">
        <label>state/class_state_finite.h</label>
        <link refid="class__state__finite_8h"/>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3986" relation="include">
        </childnode>
        <childnode refid="3994" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3963">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt.cpp</label>
        <link refid="finite_2opt_8cpp"/>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3984" relation="include">
        </childnode>
        <childnode refid="3996" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="4000" relation="include">
        </childnode>
      </node>
      <node id="3991">
        <label>general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="3992" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3980">
        <label>Eigen/Core</label>
      </node>
      <node id="3964">
        <label>string</label>
      </node>
      <node id="3999">
        <label>hdf5_hl.h</label>
      </node>
      <node id="3975">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3977" relation="include">
        </childnode>
      </node>
      <node id="3972">
        <label>io/nmspc_logger.h</label>
        <link refid="nmspc__logger_8h"/>
        <childnode refid="3973" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
      </node>
      <node id="3996">
        <label>simulation/class_simulation_status.h</label>
        <link refid="class__simulation__status_8h"/>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3977" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="3997" relation="include">
        </childnode>
        <childnode refid="3998" relation="include">
        </childnode>
        <childnode refid="3999" relation="include">
        </childnode>
      </node>
      <node id="3992">
        <label>experimental/type_traits</label>
      </node>
      <node id="3967">
        <label>tools/nmspc_tools.h</label>
        <link refid="nmspc__tools_8h"/>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3970" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="3972" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3981">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="3986">
        <label>state/class_environment.h</label>
        <link refid="class__environment_8h"/>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3987" relation="include">
        </childnode>
        <childnode refid="3993" relation="include">
        </childnode>
      </node>
      <node id="3974">
        <label>spdlog/fmt/bundled/ranges.h</label>
      </node>
      <node id="3995">
        <label>model/class_model_base.h</label>
        <link refid="class__model__base_8h"/>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
        <childnode refid="3972" relation="include">
        </childnode>
      </node>
      <node id="3988">
        <label>Eigen/Sparse</label>
      </node>
      <node id="3978">
        <label>tools/finite/opt-internals/enum_classes.h</label>
        <link refid="enum__classes_8h"/>
        <childnode refid="3977" relation="include">
        </childnode>
        <childnode refid="3979" relation="include">
        </childnode>
      </node>
      <node id="3973">
        <label>spdlog/logger.h</label>
      </node>
      <node id="3994">
        <label>state/class_mps_site.h</label>
        <link refid="class__mps__site_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3982">
        <label>general/nmspc_omp.h</label>
        <link refid="nmspc__omp_8h"/>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3985">
        <label>optional</label>
      </node>
      <node id="3971">
        <label>vector</label>
      </node>
      <node id="3993">
        <label>spdlog/fmt/fmt.h</label>
      </node>
      <node id="3965">
        <label>tools/finite/opt.h</label>
        <link refid="opt_8h"/>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="3983" relation="include">
        </childnode>
      </node>
      <node id="3966">
        <label>complex.h</label>
      </node>
      <node id="3997">
        <label>array</label>
      </node>
      <node id="3979">
        <label>sstream</label>
      </node>
      <node id="3998">
        <label>hdf5.h</label>
      </node>
      <node id="3977">
        <label>iostream</label>
      </node>
      <node id="3976">
        <label>chrono</label>
      </node>
      <node id="3969">
        <label>complex</label>
      </node>
      <node id="3987">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
        <childnode refid="3989" relation="include">
        </childnode>
        <childnode refid="3977" relation="include">
        </childnode>
        <childnode refid="3990" relation="include">
        </childnode>
        <childnode refid="3991" relation="include">
        </childnode>
      </node>
      <node id="3968">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-03-18.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="opt_8h" kindref="compound">tools/finite/opt.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__finite_8h" kindref="compound">state/class_state_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__simulation__status_8h" kindref="compound">simulation/class_simulation_status.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__model__base_8h" kindref="compound">model/class_model_base.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glog/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">Eigen::Tensor&lt;class_state_finite::Scalar,3&gt;</highlight></codeline>
<codeline lineno="13" refid="namespacetools_1_1finite_1_1opt_1a7a5cf9195f8ab823469c6be2e9fc863f" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1finite_1_1opt_1a7a5cf9195f8ab823469c6be2e9fc863f" kindref="member">tools::finite::opt::find_excited_state</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref><sp/>&amp;state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__simulation__status" kindref="compound">class_simulation_status</ref><sp/>&amp;sim_status,<sp/><ref refid="classtools_1_1finite_1_1opt_1_1_opt_mode" kindref="compound">OptMode</ref><sp/>optMode,<sp/><ref refid="classtools_1_1finite_1_1opt_1_1_opt_space" kindref="compound">OptSpace</ref><sp/>optSpace,<sp/><ref refid="classtools_1_1finite_1_1opt_1_1_opt_type" kindref="compound">OptType</ref><sp/>optType){</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Optimizing<sp/>excited<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">opt::internal;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_textra" kindref="compound">Textra</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>googleLogginghasInitialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>googleLogginghasInitialized){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>google::InitGoogleLogging(<ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;name().c_str());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>googleLogginghasInitialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>problem_report;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dims<sp/>=<sp/>state.<ref refid="classclass__state__finite_1a27ca02fe2eeb1918576973124bbf7b82" kindref="member">active_dimensions</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>problem_report<sp/>&lt;&lt;<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;Starting<sp/>optimization:<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;mode<sp/>[<sp/>{}<sp/>]<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>optMode.<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_enum_base_1a588c655990c13ee77d6d6ba30dafa93a" kindref="member">str</ref>())</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;space<sp/>[<sp/>{}<sp/>]<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>optSpace.<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_enum_base_1a588c655990c13ee77d6d6ba30dafa93a" kindref="member">str</ref>())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;type<sp/>[<sp/>{}<sp/>]<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>optType.<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_enum_base_1a588c655990c13ee77d6d6ba30dafa93a" kindref="member">str</ref>())</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;position<sp/>[<sp/>{}<sp/>]<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>state.<ref refid="classclass__state__finite_1a4964c313378297c9ec876f5d7cc4e12d" kindref="member">get_position</ref>())</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;shape<sp/>[<sp/>{}<sp/>{}<sp/>{}<sp/>]<sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>dims[0],dims[1],dims[2],<sp/>state.<ref refid="classclass__state__finite_1ad8c573eb29da8ade2a441aba8d77d6f3" kindref="member">active_problem_size</ref>());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;debug(problem_report.str());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>ceres::GradientProblemSolver::Options<sp/>options;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_type<sp/>=<sp/>ceres::LineSearchType::WOLFE;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_interpolation_type<sp/>=<sp/>ceres::LineSearchInterpolationType::CUBIC;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_direction_type<sp/>=<sp/>ceres::LineSearchDirectionType::LBFGS;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.nonlinear_conjugate_gradient_type<sp/>=<sp/>ceres::NonlinearConjugateGradientType::POLAK_RIBIERE;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_num_iterations<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_lbfgs_rank<sp/><sp/><sp/><sp/><sp/>=<sp/>250;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.use_approximate_eigenvalue_bfgs_scaling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>True<sp/>makes<sp/>a<sp/>huge<sp/>difference,<sp/>takes<sp/>longer<sp/>steps<sp/>at<sp/>each<sp/>iteration!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_line_search_step_expansion<sp/>=<sp/>1e4;</highlight><highlight class="comment">//<sp/>100.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.min_line_search_step_size<sp/>=<sp/>1e-256;</highlight><highlight class="comment">//<sp/><sp/>std::numeric_limits&lt;double&gt;::epsilon();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_line_search_step_contraction<sp/>=<sp/>1e-3;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.min_line_search_step_contraction<sp/>=<sp/>0.6;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_num_line_search_step_size_iterations<sp/><sp/>=<sp/>50;</highlight><highlight class="comment">//20;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_num_line_search_direction_restarts<sp/><sp/><sp/><sp/>=<sp/>20;</highlight><highlight class="comment">//2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_sufficient_function_decrease<sp/><sp/>=<sp/>1e-2;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_sufficient_curvature_decrease<sp/>=<sp/>0.4;<sp/></highlight><highlight class="comment">//0.5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_solver_time_in_seconds<sp/>=<sp/>60*10;</highlight><highlight class="comment">//60*2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.function_tolerance<sp/>=<sp/>1e-4;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.gradient_tolerance<sp/>=<sp/>1e-4;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.parameter_tolerance<sp/>=<sp/>1e-256;</highlight><highlight class="comment">//std::numeric_limits&lt;double&gt;::epsilon();//1e-12;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.minimizer_progress_to_stdout<sp/>=<sp/><ref refid="namespacetools_1aac8e89130f43c21749644abcd2807dba" kindref="member">tools::log</ref>-&gt;level()<sp/>&lt;=<sp/>spdlog::level::trace;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.logging_type<sp/>=<sp/>ceres::LoggingType::PER_MINIMIZER_ITERATION;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sim_status.<ref refid="structstatus__data_1ad1888c88421c43a27431329438801788" kindref="member">simulation_has_got_stuck</ref>){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.min_line_search_step_size<sp/>=<sp/>std::numeric_limits&lt;double&gt;::epsilon();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.function_tolerance<sp/>=<sp/>1e-6;<sp/></highlight><highlight class="comment">//Operations<sp/>are<sp/>cheap<sp/>in<sp/>subspace,<sp/>so<sp/>you<sp/>can<sp/>afford<sp/>low<sp/>tolerance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_num_iterations<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.gradient_tolerance<sp/>=<sp/>1e-4;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_solver_time_in_seconds<sp/>=<sp/>60*10;</highlight><highlight class="comment">//60*2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Progress<sp/>log<sp/>definitions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>f<sp/>is<sp/>the<sp/>value<sp/>of<sp/>the<sp/>objective<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>d<sp/>is<sp/>the<sp/>change<sp/>in<sp/>the<sp/>value<sp/>of<sp/>the<sp/>objective<sp/>function<sp/>if<sp/>the<sp/>step<sp/>computed<sp/>in<sp/>this<sp/>iteration<sp/>is<sp/>accepted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>g<sp/>is<sp/>the<sp/>max<sp/>norm<sp/>of<sp/>the<sp/>gradient<sp/>(i.e.<sp/>the<sp/>largest<sp/>element<sp/>of<sp/>|grad<sp/>f|)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>h<sp/>is<sp/>the<sp/>change<sp/>in<sp/>the<sp/>parameter<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>s<sp/>is<sp/>the<sp/>optimal<sp/>step<sp/>length<sp/>computed<sp/>by<sp/>the<sp/>line<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>it<sp/>is<sp/>the<sp/>time<sp/>take<sp/>by<sp/>the<sp/>current<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tt<sp/>is<sp/>the<sp/>total<sp/>time<sp/>taken<sp/>by<sp/>the<sp/>minimizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(optSpace.<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_enum_base_1aac4e872b873faefdc5bef1184688227e" kindref="member">option</ref>){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>opt::SPACE::SUBSPACE:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a3a33e74e9df3aa34c3ceccfa589c1cf1" kindref="member">internal::ceres_subspace_optimization</ref>(state,sim_status,<sp/>optType,<sp/>optMode);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>opt::SPACE::DIRECT:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a0abb0adb09b25c3dee510da447c09678" kindref="member">internal::ceres_direct_optimization</ref>(state,sim_status,<sp/>optType);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>opt::SPACE::SUBSPACE:<sp/><sp/><sp/><sp/>return<sp/>internal::ceres_subspace_optimization(state,sim_status,<sp/>optType,<sp/>optMode);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>opt::SPACE::DIRECT:<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>internal::ceres_rosenbrock_optimization(state);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;No<sp/>valid<sp/>optimization<sp/>type<sp/>given&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespacetools_1_1finite_1_1opt_1a4f7b1f67320c2a2a5788ff7633f2baee" refkind="member"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1finite_1_1opt_1a4f7b1f67320c2a2a5788ff7633f2baee" kindref="member">tools::finite::opt::find_ground_state</ref>(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref><sp/>&amp;state,<sp/>std::string<sp/>ritz){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1aabae584c7a04a4a84e2dfa13a801340a" kindref="member">internal::ground_state_optimization</ref>(state,ritz);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="namespacetools_1_1finite_1_1opt_1_1internal_1a58358f1ac4d7929a0c855269e2231253" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a58358f1ac4d7929a0c855269e2231253" kindref="member">tools::finite::opt::internal::reset_timers</ref>(){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1profile_1ab1cc211efd9f963d899d378e4660be72" kindref="member">t_opt</ref>-&gt;<sp/>reset();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1profile_1ac3910b10ef8cf578fe3197de44f4db5d" kindref="member">t_eig</ref>-&gt;<sp/>reset();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a50890ed92dde9137470ada59dc2dfb60" kindref="member">t_ham</ref>-&gt;<sp/>reset();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1profile_1a2846b1d2fefe653f9fe80c92bc846be3" kindref="member">t_tot</ref>-&gt;<sp/>reset();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1abe84b23d57f9096bfa7e5b8ae3bedc52" kindref="member">t_vH2v</ref>-&gt;reset();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1ab60d12bdf772cfeb4f7914c049921a00" kindref="member">t_vHv</ref><sp/>-&gt;reset();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a7594979f90c385344d5c16bde4dd1c2b" kindref="member">t_vH2</ref><sp/>-&gt;reset();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa2028385e087c3451a181ea561d69358" kindref="member">t_vH</ref><sp/><sp/>-&gt;reset();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a2aad5071bb18a30cbf97a3c316d3c8c3" kindref="member">t_op</ref><sp/><sp/>-&gt;reset();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa034824e2451be23c2e4026e76c07afb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa034824e2451be23c2e4026e76c07afb" kindref="member">tools::finite::opt::internal::windowed_func_abs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(x)<sp/>&gt;=<sp/>window){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(x)-window;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114" refid="namespacetools_1_1finite_1_1opt_1_1internal_1a8d74d849646a7145ba9f431f8848242b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a8d74d849646a7145ba9f431f8848242b" kindref="member">tools::finite::opt::internal::windowed_grad_abs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(x)<sp/>&gt;=<sp/>window){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a87b9da9cd1ba3039fcc7259fa221073f" kindref="member">sgn</ref>(x);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="namespacetools_1_1finite_1_1opt_1_1internal_1a812ad853671c4241ba557921938665a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a812ad853671c4241ba557921938665a6" kindref="member">tools::finite::opt::internal::windowed_func_pow</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(x)<sp/>&gt;=<sp/>window){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x*x<sp/>-<sp/>window*window;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131" refid="namespacetools_1_1finite_1_1opt_1_1internal_1a79ce5fcab0cb78cc92f18b0d9a7e4b5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a79ce5fcab0cb78cc92f18b0d9a7e4b5c" kindref="member">tools::finite::opt::internal::windowed_grad_pow</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(x)<sp/>&gt;=<sp/>window){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2.0*x;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="namespacetools_1_1finite_1_1opt_1_1internal_1af916802ba488155e10414012373ad01d" refkind="member"><highlight class="normal">std::pair&lt;double,double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af916802ba488155e10414012373ad01d" kindref="member">tools::finite::opt::internal::windowed_func_grad</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>func<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>grad<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(x)<sp/>&gt;=<sp/>window){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>(x-window)*(x-window);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>2*(x-window);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>(x+window)*(x+window);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>2*(x+window);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>x*x<sp/>-<sp/>window*window;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>2*x;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(func,grad);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/opt.cpp"/>
  </compounddef>
</doxygen>
