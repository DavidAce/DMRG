<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="finite_2opt_8cpp" kind="file" language="C++">
    <compoundname>opt.cpp</compoundname>
    <includes refid="class__algorithm__status_8h" local="no">algorithms/class_algorithm_status.h</includes>
    <includes local="no">glog/logging.h</includes>
    <includes local="no">string</includes>
    <includes refid="class__tensors__finite_8h" local="no">tensors/class_tensors_finite.h</includes>
    <includes refid="class__model__finite_8h" local="no">tensors/model/class_model_finite.h</includes>
    <includes refid="log_8h" local="no">tools/common/log.h</includes>
    <includes refid="prof_8h" local="no">tools/common/prof.h</includes>
    <includes refid="finite_2measure_8h" local="no">tools/finite/measure.h</includes>
    <includes refid="ceres__base_8h" local="no">tools/finite/opt-internal/ceres_base.h</includes>
    <includes refid="ceres__direct__functor_8h" local="no">tools/finite/opt-internal/ceres_direct_functor.h</includes>
    <includes refid="ceres__subspace__functor_8h" local="no">tools/finite/opt-internal/ceres_subspace_functor.h</includes>
    <includes refid="opt-internal_8h" local="no">tools/finite/opt-internal/opt-internal.h</includes>
    <includes refid="report_8h" local="no">tools/finite/opt-internal/report.h</includes>
    <includes refid="opt__mps_8h" local="no">tools/finite/opt_mps.h</includes>
    <incdepgraph>
      <node id="40">
        <label>ceres/iteration_callback.h</label>
      </node>
      <node id="16">
        <label>limits</label>
      </node>
      <node id="7">
        <label>tensors/class_tensors_finite.h</label>
        <link refid="class__tensors__finite_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>glog/logging.h</label>
      </node>
      <node id="41">
        <label>tools/finite/opt-internal/ceres_direct_functor.h</label>
        <link refid="ceres__direct__functor_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>io/spdlog.h</label>
        <link refid="spdlog_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>tools/finite/measure.h</label>
        <link refid="finite_2measure_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="49">
        <label>class_mps_stash.h</label>
        <link refid="class__mps__stash_8h"/>
      </node>
      <node id="31">
        <label>tools/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="10">
        <label>numeric</label>
      </node>
      <node id="32">
        <label>io/fmt.h</label>
        <link refid="io_2fmt_8h"/>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/tools/finite/opt.cpp</label>
        <link refid="finite_2opt_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>tensors/model/class_model_finite.h</label>
        <link refid="class__model__finite_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>measure/tensors_measure_finite.h</label>
        <link refid="tensors__measure__finite_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="26">
        <label>tensors/edges/class_env_pair.h</label>
        <link refid="class__env__pair_8h"/>
      </node>
      <node id="21">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h</label>
      </node>
      <node id="27">
        <label>math/svd/settings.h</label>
        <link refid="svd_2settings_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorMacros.h</label>
      </node>
      <node id="46">
        <label>tools/finite/opt-internal/report.h</label>
        <link refid="report_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>fmt/core.h</label>
      </node>
      <node id="39">
        <label>ceres/first_order_function.h</label>
      </node>
      <node id="12">
        <label>string_view</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="42">
        <label>tools/finite/opt-internal/ceres_subspace_functor.h</label>
        <link refid="ceres__subspace__functor_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="15">
        <label>general/eigen_tensor_fwd_decl.h</label>
        <link refid="eigen__tensor__fwd__decl_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>tools/common/prof.h</label>
        <link refid="prof_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>array</label>
      </node>
      <node id="19">
        <label>Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="20">
        <label>Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="43">
        <label>tools/finite/opt-internal/opt-internal.h</label>
        <link refid="opt-internal_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>tools/finite/opt_mps.h</label>
        <link refid="opt__mps_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstddef</label>
      </node>
      <node id="36">
        <label>chrono</label>
      </node>
      <node id="17">
        <label>Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="35">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>tools/finite/opt.h</label>
        <link refid="finite_2opt_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>type_traits</label>
      </node>
      <node id="48">
        <label>tensors/state/class_mps_site.h</label>
        <link refid="class__mps__site_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>ceres/gradient_problem_solver.h</label>
      </node>
      <node id="3">
        <label>complex</label>
      </node>
      <node id="38">
        <label>tools/finite/opt-internal/ceres_base.h</label>
        <link refid="ceres__base_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>memory</label>
      </node>
      <node id="9">
        <label>config/enums.h</label>
        <link refid="config_2enums_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithms/class_algorithm_status.h</label>
        <link refid="class__algorithm__status_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-03-18.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__algorithm__status_8h" kindref="compound">algorithms/class_algorithm_status.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glog/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__tensors__finite_8h" kindref="compound">tensors/class_tensors_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__model__finite_8h" kindref="compound">tensors/model/class_model_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log_8h" kindref="compound">tools/common/log.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prof_8h" kindref="compound">tools/common/prof.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="finite_2measure_8h" kindref="compound">tools/finite/measure.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ceres__base_8h" kindref="compound">tools/finite/opt-internal/ceres_base.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ceres__direct__functor_8h" kindref="compound">tools/finite/opt-internal/ceres_direct_functor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ceres__subspace__functor_8h" kindref="compound">tools/finite/opt-internal/ceres_subspace_functor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="opt-internal_8h" kindref="compound">tools/finite/opt-internal/opt-internal.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="report_8h" kindref="compound">tools/finite/opt-internal/report.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="opt__mps_8h" kindref="compound">tools/finite/opt_mps.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespacetools_1_1finite_1_1opt_1ad064a5a702cd72bd01cf186fa8f1ae1e" refkind="member"><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1opt__mps" kindref="compound">tools::finite::opt::opt_mps</ref><sp/><ref refid="namespacetools_1_1finite_1_1opt_1a184e2b98ed4f9b4299625eb9e790ff6f" kindref="member">tools::finite::opt::find_excited_state</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__tensors__finite" kindref="compound">class_tensors_finite</ref><sp/>&amp;tensors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__status" kindref="compound">class_algorithm_status</ref><sp/>&amp;status,<sp/><ref refid="config_2enums_8h_1a10bb7f1069ec16368388eec633330948" kindref="member">OptMode</ref><sp/>optMode,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_2enums_8h_1acadb01aad139a240f01ce7faf6d38fab" kindref="member">OptSpace</ref><sp/>optSpace,<sp/><ref refid="config_2enums_8h_1a2809124eff04ad302ca62f63f9408f1e" kindref="member">OptType</ref><sp/>optType)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1opt__mps" kindref="compound">opt_mps</ref><sp/>initial_mps(</highlight><highlight class="stringliteral">&quot;current<sp/>state&quot;</highlight><highlight class="normal">,<sp/>tensors.<ref refid="classclass__tensors__finite_1aace591415af906bede6b14c4f27b21a0" kindref="member">get_multisite_mps</ref>(),<sp/>tensors.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::finite::measure::energy(tensors)<sp/>-<sp/>energy_reduced,<sp/>//<sp/>Eigval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a3eb1010e369f97c5e1cb53c1b04009dc" kindref="member">tools::finite::measure::energy_minus_energy_reduced</ref>(tensors),<sp/></highlight><highlight class="comment">//<sp/>Eigval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1adf8bc0e9cd41a987d462608c75a36b40" kindref="member">tools::finite::measure::energy_reduced</ref>(tensors),<sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>reduced<sp/>for<sp/>full<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(tensors),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0,<sp/></highlight><highlight class="comment">//<sp/>Overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors.<ref refid="classclass__tensors__finite_1a2821ebade96b96a7ac4a8c26d0e64b8e" kindref="member">get_length</ref>());</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1a184e2b98ed4f9b4299625eb9e790ff6f" kindref="member">find_excited_state</ref>(tensors,<sp/>initial_mps,<sp/>status,<sp/>optMode,<sp/>optSpace,<sp/>optType);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespacetools_1_1finite_1_1opt_1a184e2b98ed4f9b4299625eb9e790ff6f" refkind="member"><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1opt__mps" kindref="compound">tools::finite::opt::opt_mps</ref><sp/><ref refid="namespacetools_1_1finite_1_1opt_1a184e2b98ed4f9b4299625eb9e790ff6f" kindref="member">tools::finite::opt::find_excited_state</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__tensors__finite" kindref="compound">class_tensors_finite</ref><sp/>&amp;tensors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1opt__mps" kindref="compound">opt_mps</ref><sp/>&amp;initial_mps,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__status" kindref="compound">class_algorithm_status</ref><sp/>&amp;status,<sp/><ref refid="config_2enums_8h_1a10bb7f1069ec16368388eec633330948" kindref="member">OptMode</ref><sp/>optMode,<sp/><ref refid="config_2enums_8h_1acadb01aad139a240f01ce7faf6d38fab" kindref="member">OptSpace</ref><sp/>optSpace,<sp/><ref refid="config_2enums_8h_1a2809124eff04ad302ca62f63f9408f1e" kindref="member">OptType</ref><sp/>optType)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_opt<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" kindref="member">tools::common::profile::prof</ref>[<ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9ab5612e395f07bd6a022360eb707e73ae" kindref="member">AlgorithmType::xDMRG</ref>][</highlight><highlight class="stringliteral">&quot;t_opt&quot;</highlight><highlight class="normal">]-&gt;tic_token();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Starting<sp/>optimization:<sp/>mode<sp/>[{}]<sp/>|<sp/>space<sp/>[{}]<sp/>|<sp/>type<sp/>[{}]<sp/>|<sp/>position<sp/>[{}]<sp/>|<sp/>sites<sp/>{}<sp/>|<sp/>shape<sp/>{}<sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(optMode),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(optSpace),<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(optType),<sp/>status.<ref refid="classclass__algorithm__status_1a92eedac9b796e697deaa83ebf4125800" kindref="member">position</ref>,<sp/>tensors.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>,<sp/>tensors.<ref refid="classclass__tensors__finite_1afdbc4ffdfdcb6ba6b9f7a5bedc02369c" kindref="member">active_problem_dims</ref>(),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors.<ref refid="classclass__tensors__finite_1a412e2a0a56e0760d2670da997a704d29" kindref="member">active_problem_size</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">opt::internal;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>googleLogginghasInitialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>googleLogginghasInitialized)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>googleLogginghasInitialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CERCES_INTERNAL_MINIGLOG_GLOG_LOGGING_H_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>google::InitGoogleLogging(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;name().c_str()));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>google::InitGoogleLogging(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;name().c_str());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>google::SetStderrLogging(3);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>message<sp/>&quot;Using<sp/>verbose<sp/>glog&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>google::SetStderrLogging(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Alglib<sp/>has<sp/>a<sp/>good<sp/>read<sp/>comparing<sp/>NCG<sp/>and<sp/>LBFGS<sp/>https://www.alglib.net/optimization/lbfgsandcg.php</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Some<sp/>noteworthy<sp/>points:</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&quot;L-BFGS<sp/>algorithm<sp/>is<sp/>quite<sp/>easy<sp/>to<sp/>tune.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>only<sp/>parameter<sp/>to<sp/>tune<sp/>is<sp/>number<sp/>of<sp/>correction<sp/>pairs<sp/>M<sp/>-<sp/>number<sp/>of<sp/>function/gradient<sp/>pairs</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>to<sp/>build<sp/>quadratic<sp/>model<sp/>(i.e.<sp/>rank).<sp/>This<sp/>parameter<sp/>is<sp/>passed<sp/>to<sp/>the<sp/>function<sp/>which<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>create<sp/>optimizer<sp/>object.<sp/>Increase<sp/>of<sp/>M<sp/>decreases<sp/>number<sp/>of<sp/>function<sp/>evaluations<sp/>and<sp/>iterations</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>needed<sp/>to<sp/>converge,<sp/>but<sp/>increases<sp/>computational<sp/>overhead<sp/>associated<sp/>with<sp/>iteration.<sp/>On<sp/>well-conditioned</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>problems<sp/>M<sp/>can<sp/>be<sp/>as<sp/>small<sp/>as<sp/>3-10.<sp/>If<sp/>function<sp/>changes<sp/>rapidly<sp/>in<sp/>some<sp/>directions<sp/>and<sp/>slowly<sp/>in</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>other<sp/>ones,<sp/>then<sp/>you<sp/>can<sp/>try<sp/>increasing<sp/>M<sp/>in<sp/>order<sp/>to<sp/>increase<sp/>convergence.&quot;</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Testing<sp/>here<sp/>shows<sp/>that<sp/>lbfgs<sp/>is<sp/>much<sp/>better<sp/>than<sp/>NCG.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Testing<sp/>also<sp/>shows<sp/>that<sp/>increasing<sp/>lbfgs<sp/>rank<sp/>can<sp/>give<sp/>better<sp/>results<sp/>at<sp/>some<sp/>cost<sp/>in<sp/>some<sp/>cases,</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>in<sp/>particular<sp/>when<sp/>a<sp/>problem<sp/>is<sp/>ill-conditioned.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>a<sp/>problem<sp/>is<sp/>ill-conditioned,<sp/>for<sp/>instance<sp/>when<sp/>the<sp/>difference<sp/>in<sp/>eigenvalues<sp/>is<sp/>small,</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>need<sp/>to<sp/>increase<sp/>the<sp/>lbfgs<sp/>rank.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Read<sp/>more<sp/>here:</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>kth.diva-portal.org/smash/get/diva2:1438308/FULLTEXT01.pdf<sp/>(page<sp/>22)</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>https://www.deeplearningbook.org/contents/optimization.html<sp/>(page<sp/>307)</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ceres::LineSearchType::WOLFE;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_interpolation_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ceres::LineSearchInterpolationType::CUBIC;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_direction_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ceres::LineSearchDirectionType::LBFGS;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_num_iterations<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>20000;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_lbfgs_rank<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>16;<sp/></highlight><highlight class="comment">//<sp/>Tested:<sp/>around<sp/>8-32<sp/>seems<sp/>to<sp/>be<sp/>a<sp/>good<sp/>compromise,<sp/>anything<sp/>larger<sp/>incurs<sp/>a<sp/>large<sp/>overhead.<sp/>The<sp/>overhead<sp/>means<sp/>2x<sp/>computation<sp/>time<sp/>at<sp/>~64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.use_approximate_eigenvalue_bfgs_scaling<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Tested:<sp/>True<sp/>makes<sp/>a<sp/>huge<sp/>difference,<sp/>takes<sp/>longer<sp/>steps<sp/>at<sp/>each<sp/>iteration<sp/>and<sp/>generally<sp/>converges<sp/>faster/to<sp/>better<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.min_line_search_step_size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1e-20;</highlight><highlight class="comment">//std::numeric_limits&lt;double&gt;::epsilon();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_line_search_step_contraction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1e-3;<sp/></highlight><highlight class="comment">//<sp/>1e-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.min_line_search_step_contraction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.6;<sp/></highlight><highlight class="comment">//<sp/>0.6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_line_search_step_expansion<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10;<sp/></highlight><highlight class="comment">//<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_num_line_search_step_size_iterations<sp/><sp/><sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_num_line_search_direction_restarts<sp/><sp/><sp/><sp/><sp/>=<sp/>80;<sp/></highlight><highlight class="comment">//5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_sufficient_function_decrease<sp/><sp/><sp/>=<sp/>1e-4;<sp/></highlight><highlight class="comment">//Tested,<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>matter<sp/>between<sp/>[1e-1<sp/>to<sp/>1e-4].<sp/>Default<sp/>is<sp/>fine:<sp/>1e-4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.line_search_sufficient_curvature_decrease<sp/><sp/>=<sp/>0.9;</highlight><highlight class="comment">//0.9<sp/>//<sp/>This<sp/>one<sp/>should<sp/>be<sp/>above<sp/>0.5.<sp/>Below,<sp/>it<sp/>makes<sp/>retries<sp/>at<sp/>every<sp/>step<sp/>and<sp/>starts<sp/>taking<sp/>twice<sp/>as<sp/>long<sp/>for<sp/>no<sp/>added<sp/>benefit.<sp/>Tested<sp/>0.9<sp/>to<sp/>be<sp/>sweetspot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_solver_time_in_seconds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>60*60;</highlight><highlight class="comment">//60*2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.function_tolerance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1e-7;<sp/></highlight><highlight class="comment">//<sp/>Tested,<sp/>1e-6<sp/>seems<sp/>to<sp/>be<sp/>a<sp/>sweetspot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.gradient_tolerance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1e-8;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.parameter_tolerance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1e-20;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.minimizer_progress_to_stdout<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//tools::log-&gt;level()<sp/>&lt;=<sp/>spdlog::level::trace;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.logging_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ceres::LoggingType::PER_MINIMIZER_ITERATION;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.function_tolerance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1e-14;<sp/></highlight><highlight class="comment">//<sp/>Tested,<sp/>1e-6<sp/>seems<sp/>to<sp/>be<sp/>a<sp/>sweetspot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.gradient_tolerance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1e-14;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af98ed8738849042e8bd79a77c8a783db" kindref="member">ceres_default_options</ref>.max_lbfgs_rank<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>64;<sp/></highlight><highlight class="comment">//<sp/>Tested:<sp/>around<sp/>8-32<sp/>seems<sp/>to<sp/>be<sp/>a<sp/>good<sp/>compromise,but<sp/>larger<sp/>is<sp/>more<sp/>precise<sp/>sometimes.<sp/>Overhead<sp/>goes<sp/>from<sp/>1.2x<sp/>to<sp/>2x<sp/>computation<sp/>time<sp/>at<sp/>in<sp/>8<sp/>-&gt;<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Progress<sp/>log<sp/>definitions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>f<sp/>is<sp/>the<sp/>value<sp/>of<sp/>the<sp/>objective<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>d<sp/>is<sp/>the<sp/>change<sp/>in<sp/>the<sp/>value<sp/>of<sp/>the<sp/>objective<sp/>function<sp/>if<sp/>the<sp/>step<sp/>computed<sp/>in<sp/>this<sp/>iteration<sp/>is<sp/>accepted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>g<sp/>is<sp/>the<sp/>inf<sp/>norm<sp/>of<sp/>the<sp/>gradient<sp/>(i.e.<sp/>the<sp/>largest<sp/>element<sp/>of<sp/>|grad<sp/>f|<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>h<sp/>is<sp/>the<sp/>change<sp/>in<sp/>the<sp/>parameter<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>s<sp/>is<sp/>the<sp/>optimal<sp/>step<sp/>length<sp/>computed<sp/>by<sp/>the<sp/>line<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>it<sp/>is<sp/>the<sp/>time<sp/>take<sp/>by<sp/>the<sp/>current<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tt<sp/>is<sp/>the<sp/>total<sp/>time<sp/>taken<sp/>by<sp/>the<sp/>minimizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initial_mps.<ref refid="classtools_1_1finite_1_1opt_1_1opt__mps_1a9fb1ea4289db75a93504b7724c4dbeff" kindref="member">get_sites</ref>()<sp/>!=<sp/>tensors.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;mismatch<sp/>in<sp/>active<sp/>sites:<sp/>initial_mps<sp/>{}<sp/>|<sp/>active<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>initial_mps.<ref refid="classtools_1_1finite_1_1opt_1_1opt__mps_1a9fb1ea4289db75a93504b7724c4dbeff" kindref="member">get_sites</ref>(),<sp/>tensors.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_mps.<ref refid="classtools_1_1finite_1_1opt_1_1opt__mps_1aebdd30df0702180cb9430b5993188191" kindref="member">validate_candidate</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1opt__mps" kindref="compound">opt_mps</ref><sp/>result;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(optSpace)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1acadb01aad139a240f01ce7faf6d38fabadf309570085413490398aac0cc059e13" kindref="member">OptSpace::SUBSPACE_ONLY</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a1930d70a629680d771eab0169e328d7d" kindref="member">internal::ceres_subspace_optimization</ref>(tensors,initial_mps,status,<sp/>optType,<sp/>optMode,optSpace);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1acadb01aad139a240f01ce7faf6d38fababedda1fc613021aa4f8fe7a4c5f6fbd7" kindref="member">OptSpace::SUBSPACE_AND_DIRECT</ref>:<sp/>result<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a1930d70a629680d771eab0169e328d7d" kindref="member">internal::ceres_subspace_optimization</ref>(tensors,initial_mps,status,<sp/>optType,<sp/>optMode,optSpace);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1acadb01aad139a240f01ce7faf6d38faba4c5d06b02c97731aaa976179c62dcf76" kindref="member">OptSpace::DIRECT</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1aad84fb8b220c9101812aa07c8ce70544" kindref="member">internal::ceres_direct_optimization</ref>(tensors,initial_mps,status,<sp/>optType,optMode,optSpace);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1acadb01aad139a240f01ce7faf6d38faba896efe10db123a98b4314aac152ab745" kindref="member">OptSpace::KRYLOV_ENERGY</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a9049e6109458f08295d68aa2992b9603" kindref="member">internal::krylov_energy_optimization</ref>(tensors,initial_mps,status,<sp/>optType,optMode,optSpace);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1acadb01aad139a240f01ce7faf6d38faba03449cc153cdcdeaee89372458caa20a" kindref="member">OptSpace::KRYLOV_VARIANCE</ref>:<sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a36cc11b4e6e111335804cd3e48e25959" kindref="member">internal::krylov_variance_optimization</ref>(tensors,initial_mps,status,<sp/>optType,optMode,optSpace);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>up<sp/>and<sp/>print<sp/>reports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1_1reports_1a896ccde50a6c6f1bd4be14b73191a966" kindref="member">reports::print_bfgs_report</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1_1reports_1a314b78b6fda15a9a601878919264ec65" kindref="member">reports::print_time_report</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="classtools_1_1finite_1_1opt_1_1opt__mps_1a0e07052284917dca9870bf4737b3eff4" kindref="member">set_optspace</ref>(optSpace);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="classtools_1_1finite_1_1opt_1_1opt__mps_1a0351f0f15293411e474f4cd386f0a287" kindref="member">set_optmode</ref>(optMode);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="classtools_1_1finite_1_1opt_1_1opt__mps_1a20518f91989be31b5c6f8f827d084bcd" kindref="member">validate_result</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="namespacetools_1_1finite_1_1opt_1a7bdfcadb3b45fa5ffea02c187deb64bd" refkind="member"><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1opt__mps" kindref="compound">tools::finite::opt::opt_mps</ref><sp/><ref refid="namespacetools_1_1finite_1_1opt_1a7bdfcadb3b45fa5ffea02c187deb64bd" kindref="member">tools::finite::opt::find_ground_state</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__tensors__finite" kindref="compound">class_tensors_finite</ref><sp/>&amp;tensors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__status" kindref="compound">class_algorithm_status</ref><sp/>&amp;<sp/>status,<sp/><sp/><ref refid="config_2enums_8h_1a8273b6e17b65f3bf523ec0247a2eecdc" kindref="member">StateRitz</ref><sp/>ritz)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a941cb3b68f48239f2380ecf5d65984a7" kindref="member">internal::ground_state_optimization</ref>(tensors,status,<sp/>ritz);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa034824e2451be23c2e4026e76c07afb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa034824e2451be23c2e4026e76c07afb" kindref="member">tools::finite::opt::internal::windowed_func_abs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(x)<sp/>&gt;=<sp/>window)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(x)<sp/>-<sp/>window;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153" refid="namespacetools_1_1finite_1_1opt_1_1internal_1a8d74d849646a7145ba9f431f8848242b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a8d74d849646a7145ba9f431f8848242b" kindref="member">tools::finite::opt::internal::windowed_grad_abs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(x)<sp/>&gt;=<sp/>window)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a87b9da9cd1ba3039fcc7259fa221073f" kindref="member">sgn</ref>(x);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="namespacetools_1_1finite_1_1opt_1_1internal_1a812ad853671c4241ba557921938665a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a812ad853671c4241ba557921938665a6" kindref="member">tools::finite::opt::internal::windowed_func_pow</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(x)<sp/>&gt;=<sp/>window)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>*<sp/>x<sp/>-<sp/>window<sp/>*<sp/>window;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166" refid="namespacetools_1_1finite_1_1opt_1_1internal_1a79ce5fcab0cb78cc92f18b0d9a7e4b5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1a79ce5fcab0cb78cc92f18b0d9a7e4b5c" kindref="member">tools::finite::opt::internal::windowed_grad_pow</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(x)<sp/>&gt;=<sp/>window)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2.0<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="namespacetools_1_1finite_1_1opt_1_1internal_1af916802ba488155e10414012373ad01d" refkind="member"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1af916802ba488155e10414012373ad01d" kindref="member">tools::finite::opt::internal::windowed_func_grad</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>func<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>grad<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(x)<sp/>&gt;=<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>(x<sp/>-<sp/>window)<sp/>*<sp/>(x<sp/>-<sp/>window);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>2<sp/>*<sp/>(x<sp/>-<sp/>window);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>(x<sp/>+<sp/>window)<sp/>*<sp/>(x<sp/>+<sp/>window);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/>=<sp/>2<sp/>*<sp/>(x<sp/>+<sp/>window);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(func,<sp/>grad);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa2fc1c9fa6b304ab47e3d433380bb7e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa2fc1c9fa6b304ab47e3d433380bb7e1" kindref="member">tools::finite::opt::internal::get_ops</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>chiL,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>chiR,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chiR<sp/>&gt;<sp/>chiL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa2fc1c9fa6b304ab47e3d433380bb7e1" kindref="member">get_ops</ref>(d,<sp/>chiR,<sp/>chiL,<sp/>m);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d<sp/>&gt;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>d<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step1<sp/>=<sp/>chiL<sp/>*<sp/>chiL<sp/>*<sp/>chiR<sp/>*<sp/>m<sp/>*<sp/>m<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step2<sp/>=<sp/>chiL<sp/>*<sp/>chiR<sp/>*<sp/>d<sp/>*<sp/>m<sp/>*<sp/>m<sp/>*<sp/>m<sp/>*<sp/>(d<sp/>*<sp/>m<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step3<sp/>=<sp/>chiL<sp/>*<sp/>chiR<sp/>*<sp/>d<sp/>*<sp/>m<sp/>*<sp/>(chiR<sp/>*<sp/>m<sp/>*<sp/>m<sp/>*<sp/>m<sp/>+<sp/>m<sp/>*<sp/>m<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>step1<sp/>+<sp/>step2<sp/>+<sp/>step3;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step1<sp/>=<sp/>chiL<sp/>*<sp/>chiL<sp/>*<sp/>chiR<sp/>*<sp/>m<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step2<sp/>=<sp/>chiL<sp/>*<sp/>chiR<sp/>*<sp/>d<sp/>*<sp/>m<sp/>*<sp/>m<sp/>*<sp/>(d<sp/>*<sp/>m<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step3<sp/>=<sp/>chiL<sp/>*<sp/>chiR<sp/>*<sp/>chiR<sp/>*<sp/>d<sp/>*<sp/>m<sp/>*<sp/>(m<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>step1<sp/>+<sp/>step2<sp/>+<sp/>step3;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctorType&gt;</highlight></codeline>
<codeline lineno="207" refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1ad5d50c238103da80220f475226d33b4c" refkind="member"><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1ad5d50c238103da80220f475226d33b4c" kindref="member">tools::finite::opt::internal::CustomLogCallback&lt;FunctorType&gt;::CustomLogCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FunctorType<sp/>&amp;functor_)<sp/>:<sp/>functor(functor_)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1a4f63d2a756ab73fb5608140b06a13e31" kindref="member">log</ref>)<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1a4f63d2a756ab73fb5608140b06a13e31" kindref="member">log</ref><sp/>=<sp/><ref refid="namespacetools_1_1_logger_1a226e4a9b901367b2e4cb3e17809385b1" kindref="member">tools::Logger::setLogger</ref>(</highlight><highlight class="stringliteral">&quot;xDMRG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1a4f63d2a756ab73fb5608140b06a13e31" kindref="member">log</ref>-&gt;set_level(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;level());</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1a4f63d2a756ab73fb5608140b06a13e31" kindref="member">log</ref>-&gt;level()<sp/>==<sp/><ref refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" kindref="member">spdlog::level::debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1aa5ae653e0bb5ba7c27955153c4c963f4" kindref="member">freq_log_iter</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1a0a78502243e79a3dcf3434269c226f4e" kindref="member">freq_log_time</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1afeee431813e4e04fa236bf9f5581684b" kindref="member">init_log_time</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctorType&gt;</highlight></codeline>
<codeline lineno="218" refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1ad18db1de0d16845f68bc19710e214b93" refkind="member"><highlight class="normal">ceres::CallbackReturnType<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback_1ad18db1de0d16845f68bc19710e214b93" kindref="member">tools::finite::opt::internal::CustomLogCallback&lt;FunctorType&gt;::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ceres::IterationSummary<sp/>&amp;summary)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(summary.iteration<sp/>&gt;<sp/>100<sp/>and<sp/>summary.cost_change<sp/>&lt;<sp/>1e-5<sp/>and<sp/>summary.gradient_max_norm<sp/>&lt;<sp/>10.0<sp/>and<sp/>summary.step_norm<sp/>&lt;<sp/>1e-6)<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>ceres::SOLVER_ABORT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>functor.set_delta_f(std::abs(summary.cost_change/summary.cost));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">log</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ceres::SOLVER_CONTINUE;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">log</ref>-&gt;level()<sp/>&gt;=<sp/>spdlog::level::info)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ceres::SOLVER_CONTINUE;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(summary.iteration<sp/>-<sp/>last_log_iter<sp/>&lt;<sp/>freq_log_iter<sp/>and<sp/>summary.iteration<sp/>&gt;<sp/>init_log_iter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ceres::SOLVER_CONTINUE;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(summary.cumulative_time_in_seconds<sp/>-<sp/>last_log_time<sp/>&lt;<sp/>freq_log_time<sp/>and<sp/>summary.cumulative_time_in_seconds<sp/>&gt;<sp/>init_log_time)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ceres::SOLVER_CONTINUE;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>last_log_time<sp/>=<sp/>summary.cumulative_time_in_seconds;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>last_log_iter<sp/>=<sp/>summary.iteration;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;LBFGS:<sp/>iter<sp/>{:&gt;5}<sp/>f<sp/>{:&gt;8.5f}<sp/>|Δf|<sp/>{:&gt;3.2e}<sp/>|∇f|∞<sp/>{:&gt;3.2e}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;|ΔΨ|<sp/>{:3.2e}<sp/>|Ψ|-1<sp/>{:3.2e}<sp/>ls<sp/>{:3.2e}<sp/>evals<sp/>{:&gt;4}/{:&lt;4}<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;t_step<sp/>{:&lt;}<sp/>t_iter<sp/>{:&lt;}<sp/>t_tot<sp/>{:&lt;}<sp/>GOp/s<sp/>{:&lt;4.2f}<sp/>|<sp/>energy<sp/>{:&lt;18.15f}<sp/>log₁₀var<sp/>{:&lt;6.6f}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary.iteration,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary.cost,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary.cost_change,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary.gradient_max_norm,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary.step_norm,<sp/></highlight><highlight class="comment">//<sp/>By<sp/>lbfgs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor.get_norm_offset(),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::abs(summary.step_size),<sp/></highlight><highlight class="comment">//<sp/>By<sp/>line<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor.get_count()<sp/>-<sp/>last_count,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor.get_count(),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:&gt;6.0f}<sp/>ms&quot;</highlight><highlight class="normal">,summary.step_solver_time_in_seconds<sp/>*<sp/>1000),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:&gt;6.0f}<sp/>ms&quot;</highlight><highlight class="normal">,summary.iteration_time_in_seconds<sp/>*<sp/>1000),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:&gt;5.3f}<sp/>s&quot;</highlight><highlight class="normal">,summary.cumulative_time_in_seconds),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(functor.get_ops())<sp/>/<sp/>functor.t_H2n-&gt;get_last_interval()/1e9,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor.get_energy_per_site(),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::log10(functor.get_variance())</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>last_count<sp/>=<sp/>functor.get_count();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ceres::SOLVER_CONTINUE;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback" kindref="compound">tools::finite::opt::internal::CustomLogCallback&lt;tools::finite::opt::internal::ceres_subspace_functor&lt;double&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback" kindref="compound">tools::finite::opt::internal::CustomLogCallback&lt;tools::finite::opt::internal::ceres_direct_functor&lt;double&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback" kindref="compound">tools::finite::opt::internal::CustomLogCallback&lt;tools::finite::opt::internal::ceres_subspace_functor&lt;std::complex&lt;double&gt;</ref>&gt;&gt;;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1_custom_log_callback" kindref="compound">tools::finite::opt::internal::CustomLogCallback&lt;tools::finite::opt::internal::ceres_direct_functor&lt;std::complex&lt;double&gt;</ref>&gt;&gt;;</highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/DMRG++/source/tools/finite/opt.cpp"/>
  </compounddef>
</doxygen>
