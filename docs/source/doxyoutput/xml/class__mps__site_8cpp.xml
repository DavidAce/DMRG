<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class__mps__site_8cpp" kind="file" language="C++">
    <compoundname>class_mps_site.cpp</compoundname>
    <includes refid="class__mps__site_8h" local="yes">class_mps_site.h</includes>
    <includes refid="nmspc__tensor__extra_8h" local="no">general/nmspc_tensor_extra.h</includes>
    <includes refid="nmspc__logger_8h" local="no">io/nmspc_logger.h</includes>
    <incdepgraph>
      <node id="2106">
        <label>iomanip</label>
      </node>
      <node id="2104">
        <label>iterator</label>
      </node>
      <node id="2107">
        <label>general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="2108" relation="include">
        </childnode>
        <childnode refid="2102" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
      </node>
      <node id="2102">
        <label>Eigen/Core</label>
      </node>
      <node id="2109">
        <label>io/nmspc_logger.h</label>
        <link refid="nmspc__logger_8h"/>
        <childnode refid="2110" relation="include">
        </childnode>
        <childnode refid="2111" relation="include">
        </childnode>
      </node>
      <node id="2108">
        <label>experimental/type_traits</label>
      </node>
      <node id="2099">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="2111">
        <label>spdlog/fmt/bundled/ranges.h</label>
      </node>
      <node id="2103">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2110">
        <label>spdlog/logger.h</label>
      </node>
      <node id="2096">
        <label>class_mps_site.h</label>
        <link refid="class__mps__site_8h"/>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
      </node>
      <node id="2101">
        <label>general/nmspc_omp.h</label>
        <link refid="nmspc__omp_8h"/>
        <childnode refid="2099" relation="include">
        </childnode>
      </node>
      <node id="2098">
        <label>optional</label>
      </node>
      <node id="2105">
        <label>iostream</label>
      </node>
      <node id="2097">
        <label>complex</label>
      </node>
      <node id="2100">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="2101" relation="include">
        </childnode>
        <childnode refid="2102" relation="include">
        </childnode>
        <childnode refid="2103" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
        <childnode refid="2107" relation="include">
        </childnode>
      </node>
      <node id="2095">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_mps_site.cpp</label>
        <link refid="class__mps__site_8cpp"/>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
        <childnode refid="2109" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="class__mps__site_8cpp_1a2aaa9aa883d823e7282e93007e67e712" prot="public" static="no">
        <type><ref refid="classclass__mps__site_1ab867e2c6bd3acce8d616d5ae8fb59def" kindref="member">class_mps_site::Scalar</ref></type>
        <definition>using Scalar =  class_mps_site::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_mps_site.cpp" line="9" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_mps_site.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-07-06.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__mps__site_8h" kindref="compound">class_mps_site.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__tensor__extra_8h" kindref="compound">general/nmspc_tensor_extra.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__logger_8h" kindref="compound">io/nmspc_logger.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class__mps__site_8cpp_1a2aaa9aa883d823e7282e93007e67e712" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class__algorithm__base_8cpp_1a528e55cc6b435f7efe6750d6faa36cd6" kindref="member">Scalar</ref><sp/>=<sp/><ref refid="classclass__mps__site_1ab867e2c6bd3acce8d616d5ae8fb59def" kindref="member">class_mps_site::Scalar</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classclass__mps__site_1a7fdd521f619a8c39b8549d450814c419" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1a7fdd521f619a8c39b8549d450814c419" kindref="member">class_mps_site::isCenter</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__mps__site_1a3942bbfa860ab9c317075e0d5809e643" kindref="member">LC</ref>.has_value()){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a3942bbfa860ab9c317075e0d5809e643" kindref="member">LC</ref>.value().dimension(0)<sp/>!=<sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>.dimension(2))</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;M<sp/>and<sp/>LC<sp/>dim<sp/>mismatch:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>.dimension(2)<sp/>,<ref refid="classclass__mps__site_1a3942bbfa860ab9c317075e0d5809e643" kindref="member">LC</ref>.value().dimension(0)));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1a3942bbfa860ab9c317075e0d5809e643" kindref="member">LC</ref>.has_value();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classclass__mps__site_1adf56e1941a73609a8ddb825a9d64f444" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1adf56e1941a73609a8ddb825a9d64f444" kindref="member">class_mps_site::isReal</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_textra_1a134cee5e3300feee66018395aa0ffa05" kindref="member">Textra::isReal</ref>(<ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>,<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="20" refid="classclass__mps__site_1aba25177e2ec8f5ebe1bfdfc34b2e2134" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;<sp/><ref refid="classclass__mps__site_1aba25177e2ec8f5ebe1bfdfc34b2e2134" kindref="member">class_mps_site::get_M_bare</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>);}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classclass__mps__site_1ac7ede498990cefe06828699f21eae72f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;<sp/><ref refid="classclass__mps__site_1ac7ede498990cefe06828699f21eae72f" kindref="member">class_mps_site::get_M</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a7fdd521f619a8c39b8549d450814c419" kindref="member">isCenter</ref>()){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref>){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref>.value());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref><sp/>=<sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>.contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__mps__site_1a27a658f24c50b4b815122aacab41d7e4" kindref="member">get_LC</ref>()),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref>.value());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classclass__mps__site_1a875fa2cd30d58045deff56efad3c0f21" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;<sp/><ref refid="classclass__mps__site_1a875fa2cd30d58045deff56efad3c0f21" kindref="member">class_mps_site::get_L</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__mps__site_1abd0bd0d9a1e0e28f9f4cc0e9f516c499" kindref="member">L</ref>);}</highlight></codeline>
<codeline lineno="37" refid="classclass__mps__site_1a27a658f24c50b4b815122aacab41d7e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;<sp/><ref refid="classclass__mps__site_1a27a658f24c50b4b815122aacab41d7e4" kindref="member">class_mps_site::get_LC</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a7fdd521f619a8c39b8549d450814c419" kindref="member">isCenter</ref>())</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__mps__site_1a3942bbfa860ab9c317075e0d5809e643" kindref="member">LC</ref>.value());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Site<sp/>at<sp/>position<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="classclass__mps__site_1a24a3135214b89f7ae16726943ced2dd9" kindref="member">get_position</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>not<sp/>a<sp/>center&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classclass__mps__site_1a4369c9c4f7950fce81b37c9af13c21bb" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;<sp/><ref refid="classclass__mps__site_1aba25177e2ec8f5ebe1bfdfc34b2e2134" kindref="member">class_mps_site::get_M_bare</ref>()<sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classclass__mps__site" kindref="compound">class_mps_site</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).<ref refid="classclass__mps__site_1aba25177e2ec8f5ebe1bfdfc34b2e2134" kindref="member">get_M_bare</ref>());</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classclass__mps__site_1a346a7458ecee54ef01fb4b462daf1d39" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;<sp/><ref refid="classclass__mps__site_1ac7ede498990cefe06828699f21eae72f" kindref="member">class_mps_site::get_M</ref>()<sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classclass__mps__site" kindref="compound">class_mps_site</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).<ref refid="classclass__mps__site_1ac7ede498990cefe06828699f21eae72f" kindref="member">get_M</ref>());</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52" refid="classclass__mps__site_1aa60f0056e3084fc8cfb8c98a002baafa" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;<sp/><ref refid="classclass__mps__site_1a875fa2cd30d58045deff56efad3c0f21" kindref="member">class_mps_site::get_L</ref>()<sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1abd0bd0d9a1e0e28f9f4cc0e9f516c499" kindref="member">L</ref>;}</highlight></codeline>
<codeline lineno="53" refid="classclass__mps__site_1acd304ba6e94c47b32cc91d4ec20ceb45" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;<sp/><ref refid="classclass__mps__site_1a27a658f24c50b4b815122aacab41d7e4" kindref="member">class_mps_site::get_LC</ref>()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classclass__mps__site" kindref="compound">class_mps_site</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).<ref refid="classclass__mps__site_1a27a658f24c50b4b815122aacab41d7e4" kindref="member">get_LC</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classclass__mps__site_1ace3ae49b18d3e3272b5fc5cb29bc910b" refkind="member"><highlight class="normal">std::tuple&lt;long,long,long&gt;<sp/><ref refid="classclass__mps__site_1ace3ae49b18d3e3272b5fc5cb29bc910b" kindref="member">class_mps_site::get_dims</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="classclass__mps__site_1abd804cef2a87106c6693b90520effe54" kindref="member">get_spin_dim</ref>(),<sp/><ref refid="classclass__mps__site_1af931bb3586531cda4240f9d4c1356538" kindref="member">get_chiL</ref>(),<sp/><ref refid="classclass__mps__site_1ae6b9f71bc7268ba5a078e924c850e158" kindref="member">get_chiR</ref>()};}</highlight></codeline>
<codeline lineno="61" refid="classclass__mps__site_1abd804cef2a87106c6693b90520effe54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1abd804cef2a87106c6693b90520effe54" kindref="member">class_mps_site::get_spin_dim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>.dimension(0);}</highlight></codeline>
<codeline lineno="62" refid="classclass__mps__site_1af931bb3586531cda4240f9d4c1356538" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1af931bb3586531cda4240f9d4c1356538" kindref="member">class_mps_site::get_chiL</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>.dimension(1);}</highlight></codeline>
<codeline lineno="63" refid="classclass__mps__site_1ae6b9f71bc7268ba5a078e924c850e158" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1ae6b9f71bc7268ba5a078e924c850e158" kindref="member">class_mps_site::get_chiR</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>.dimension(2);}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classclass__mps__site_1aa442a1a8f0feda7dea59d0c7642f0385" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classclass__mps__site_1aa442a1a8f0feda7dea59d0c7642f0385" kindref="member">class_mps_site::set_position</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position_){<sp/><ref refid="classclass__mps__site_1a644fd37b2fa54516a3ce0a62ec2a2e7e" kindref="member">position</ref><sp/>=<sp/>position_;<sp/><ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref>.reset();}</highlight></codeline>
<codeline lineno="68" refid="classclass__mps__site_1a24a3135214b89f7ae16726943ced2dd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1a24a3135214b89f7ae16726943ced2dd9" kindref="member">class_mps_site::get_position</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a644fd37b2fa54516a3ce0a62ec2a2e7e" kindref="member">position</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1a644fd37b2fa54516a3ce0a62ec2a2e7e" kindref="member">position</ref>.value();}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Position<sp/>hasn&apos;t<sp/>been<sp/>set<sp/>on<sp/>mps<sp/>site.&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classclass__mps__site_1a6a832679f595a8892c4d6188d79f016f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1a6a832679f595a8892c4d6188d79f016f" kindref="member">class_mps_site::set_mps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;M_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;L_){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1a942b2819382a1b16c0bec06a4b230a74" kindref="member">set_M</ref>(M_);<sp/><ref refid="classclass__mps__site_1ae45d764b841b649a980625dd256946fe" kindref="member">set_L</ref>(L_);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classclass__mps__site_1a942b2819382a1b16c0bec06a4b230a74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1a942b2819382a1b16c0bec06a4b230a74" kindref="member">class_mps_site::set_M</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;M_)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a644fd37b2fa54516a3ce0a62ec2a2e7e" kindref="member">position</ref>)<sp/>{<ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>=M_<sp/>;<ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref>.reset();}<sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>set<sp/>M:<sp/>Position<sp/>hasn&apos;t<sp/>been<sp/>set<sp/>yet&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="81" refid="classclass__mps__site_1ae45d764b841b649a980625dd256946fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1ae45d764b841b649a980625dd256946fe" kindref="member">class_mps_site::set_L</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;L_)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a644fd37b2fa54516a3ce0a62ec2a2e7e" kindref="member">position</ref>)<sp/><ref refid="classclass__mps__site_1abd0bd0d9a1e0e28f9f4cc0e9f516c499" kindref="member">L</ref>=L_<sp/><sp/>;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>set<sp/>L:<sp/>Position<sp/>hasn&apos;t<sp/>been<sp/>set<sp/>yet&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="82" refid="classclass__mps__site_1aad26307dc4d6da12c6dcbf8644c38d4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1aad26307dc4d6da12c6dcbf8644c38d4e" kindref="member">class_mps_site::set_LC</ref><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;LC_){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a644fd37b2fa54516a3ce0a62ec2a2e7e" kindref="member">position</ref>)<sp/>{<ref refid="classclass__mps__site_1a3942bbfa860ab9c317075e0d5809e643" kindref="member">LC</ref>=LC_;<ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref>.reset();}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>set<sp/>LC:<sp/>Position<sp/>hasn&apos;t<sp/>been<sp/>set<sp/>yet&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classclass__mps__site_1a7dc50135d9e136844dcd1ce2d23a84ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1a7dc50135d9e136844dcd1ce2d23a84ab" kindref="member">class_mps_site::apply_mpo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>&amp;<sp/>mpo){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mpoDimL<sp/>=<sp/>mpo.dimension(0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mpoDimR<sp/>=<sp/>mpo.dimension(1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mpoDimL<sp/>!=<sp/>mpoDimR)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>apply<sp/>mpo&apos;s<sp/>with<sp/>different<sp/>L/R<sp/>dims:<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__mps__site_1a7fdd521f619a8c39b8549d450814c419" kindref="member">isCenter</ref>()){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>LC_temp<sp/>=<sp/><ref refid="classclass__mps__site_1a27a658f24c50b4b815122aacab41d7e4" kindref="member">get_LC</ref>().broadcast(<ref refid="namespace_textra_1a4605428e7dc10e4e43f43e69f6ddbd75" kindref="member">Textra::array1</ref>{mpoDimR});</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1a3942bbfa860ab9c317075e0d5809e643" kindref="member">LC</ref><sp/>=<sp/>LC_temp;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref>.reset();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>M_temp<sp/>=</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({0},{2}))</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1ad77b0c4ddf727b47bd5283b159db860e" kindref="member">Textra::array5</ref>{4,0,2,1,3})</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.reshape(<ref refid="namespace_textra_1a11ff5da431d0a149284e51800d10c0cc" kindref="member">Textra::array3</ref>{<ref refid="classclass__mps__site_1abd804cef2a87106c6693b90520effe54" kindref="member">get_spin_dim</ref>(),<sp/><ref refid="classclass__mps__site_1af931bb3586531cda4240f9d4c1356538" kindref="member">get_chiL</ref>()*mpoDimL,<sp/><ref refid="classclass__mps__site_1ae6b9f71bc7268ba5a078e924c850e158" kindref="member">get_chiR</ref>()*mpoDimR});</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>L_temp<sp/>=<sp/><ref refid="classclass__mps__site_1abd0bd0d9a1e0e28f9f4cc0e9f516c499" kindref="member">L</ref>.broadcast(<ref refid="namespace_textra_1a4605428e7dc10e4e43f43e69f6ddbd75" kindref="member">Textra::array1</ref>{mpoDimL});</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1abd0bd0d9a1e0e28f9f4cc0e9f516c499" kindref="member">L</ref><sp/>=<sp/>L_temp;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref><sp/>=<sp/>M_temp;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105" refid="classclass__mps__site_1a3ff64592e765842d39c4aac985a00cd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__site_1a7dc50135d9e136844dcd1ce2d23a84ab" kindref="member">class_mps_site::apply_mpo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,2&gt;<sp/>&amp;<sp/>mpo){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>M_temp<sp/>=<sp/><sp/>mpo.contract(<ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({0},{0}));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1aee619b07d3a0ffb40ec5cd3ea9539234" kindref="member">M</ref><sp/>=<sp/>M_temp;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__mps__site_1a13383bdc1acdccdb7498500e10152978" kindref="member">MC</ref>.reset();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>class_mps_site::set_mps_vidal<sp/><sp/>(const<sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;G_,<sp/>const<sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;L_){set_G(G_);<sp/>set_L(L_);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//Eigen::Tensor&lt;Scalar,3&gt;<sp/>class_mps_site::get_A()<sp/><sp/>const<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>M;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>Textra::asDiagonal(L).contract(G,<sp/>Textra::idx({1},{1})).shuffle(Textra::array3{1,0,2});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//Eigen::Tensor&lt;Scalar,3&gt;<sp/>class_mps_site::get_B()<sp/><sp/>const<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>M;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>G.contract(Textra::asDiagonal(L),<sp/>Textra::idx({2},{0}));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//const<sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;<sp/>class_mps_site::get_G()<sp/>const<sp/>{return<sp/>std::as_const(G);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;<sp/>class_mps_site::get_G()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{return<sp/>G;}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_mps_site.cpp"/>
  </compounddef>
</doxygen>
