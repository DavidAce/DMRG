<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacesettings_1_1output" kind="namespace" language="C++">
    <compoundname>settings::output</compoundname>
    <innernamespace refid="namespacesettings_1_1output_1_1tmp">settings::output::tmp</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacesettings_1_1output_1a250dcb715268c07a745af0c289998d6b" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string settings::output::output_filepath</definition>
        <argsstring></argsstring>
        <name>output_filepath</name>
        <initializer>= &quot;output/default.h5&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of the output HDF5 file relative to the execution point <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="43" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a6c898153abc646a16c799b9183d485d9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool settings::output::save_profiling</definition>
        <argsstring></argsstring>
        <name>save_profiling</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether to save profiling information to file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="44" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a2856ae621b13993f89f10592ac0de3ba" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool settings::output::savepoint_keep_newest_only</definition>
        <argsstring></argsstring>
        <name>savepoint_keep_newest_only</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If true, a savepoint will overwrite previous savepoints on file. Otherwise, all iterations are kept (dramaticallay increases file size) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="45" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1ad5202a6741248d828cf767c4f4631bc8" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t settings::output::savepoint_frequency</definition>
        <argsstring></argsstring>
        <name>savepoint_frequency</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>How often, in units of iterations, to make a savepoint. 0 disables regular savepoints but chi-update savepoints can still happen </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="46" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a8f8d5bc74d093621d32d071760fa35e7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool settings::output::checkpoint_keep_newest_only</definition>
        <argsstring></argsstring>
        <name>checkpoint_keep_newest_only</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If true, a checkpoint will overwrite previous checkpoint on file. Otherwise, all iterations are kept (dramaticallay increases file size) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="47" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1ab6bbe5383e0f227e2ac86620fb3b1a67" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool settings::output::checkpoint_keep_chi_updates</definition>
        <argsstring></argsstring>
        <name>checkpoint_keep_chi_updates</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If true, a savepoint is written to file before the bond dimension is updated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="48" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1ad85175fd319fb912f37941b0cc5117b5" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t settings::output::checkpoint_frequency</definition>
        <argsstring></argsstring>
        <name>checkpoint_frequency</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>How often, in units of iterations, to make a checkpoint. 0 disables checkpoints but chi-update checkpoints can still happen </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="49" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a3a4473cd67fe51cc676ee77aa267b839" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool settings::output::use_temp_dir</definition>
        <argsstring></argsstring>
        <name>use_temp_dir</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If true uses a temporary directory for writes in the local drive (usually /tmp) and copies the results afterwards </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="50" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a9e0297c0c7d4d406845f0ae2b8396dd5" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t settings::output::copy_from_temp_freq</definition>
        <argsstring></argsstring>
        <name>copy_from_temp_freq</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>How often, in units of iterations, to copy the hdf5 file in tmp dir to target destination </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="51" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a006e3b72fb5727906ffe8acbb3b3eb2c" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string settings::output::temp_dir</definition>
        <argsstring></argsstring>
        <name>temp_dir</name>
        <initializer>= &quot;/tmp/DMRG&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Local temp directory on the local system. If it does not exist we default to /tmp instead (or whatever is the default) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="52" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a12531a556ccc8c2bb7ff9bb8d0f2e7e0" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned settings::output::compression_level</definition>
        <argsstring></argsstring>
        <name>compression_level</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GZip compression level in HDF5. Choose between [0-9] (0 = off, 9 = max compression) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="53" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a62dca95e107f4fe3989df2c42eb4b8b2" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1ad7a337341b5fd69ba5a7a7dd2058ea56" kindref="member">FileCollisionPolicy</ref></type>
        <definition>FileCollisionPolicy settings::output::file_collision_policy</definition>
        <argsstring></argsstring>
        <name>file_collision_policy</name>
        <initializer>= <ref refid="config_2enums_8h_1ad7a337341b5fd69ba5a7a7dd2058ea56abac2aec3ee8d7d495123dbe5ca2fdac9" kindref="member">FileCollisionPolicy::RESUME</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What to do when a prior output file is found. Choose between RESUME,RENAME,DELETE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="54" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a8a111a5a0522f8d18924bc2885c10ed4" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1ac9d1a893c937f96f278163777782de1e" kindref="member">FileResumePolicy</ref></type>
        <definition>FileResumePolicy settings::output::file_resume_policy</definition>
        <argsstring></argsstring>
        <name>file_resume_policy</name>
        <initializer>= <ref refid="config_2enums_8h_1ac9d1a893c937f96f278163777782de1eaba7de5bc6888294e5884b024a4c894f1" kindref="member">FileResumePolicy::FULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Depends on dataset &quot;common/finished_all=bool&quot; FULL: Ignore bool -&gt; Scan .cfg to add missing items. FAST: exit if true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="55" column="36" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a1f406e829d64fd245a9856b91025cdfb" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_model</definition>
        <argsstring></argsstring>
        <name>storage_level_model</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071af8589806bbf66241917092b2a6e18c6f" kindref="member">StorageLevel::LIGHT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for the model realization. LIGHT stores nothing. NORMAL stores the Hamiltonian parameter table, and FULL also the MPO&apos;s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="64" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a3fd8aec52aa269851a694889bcccddce" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_savepoint</definition>
        <argsstring></argsstring>
        <name>storage_level_savepoint</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071af8589806bbf66241917092b2a6e18c6f" kindref="member">StorageLevel::LIGHT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for savepoints, which are snapshots used for resume (if FULL) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="65" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a3cbc247c13365395ccf3b64df8051dfc" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_checkpoint</definition>
        <argsstring></argsstring>
        <name>storage_level_checkpoint</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071af8589806bbf66241917092b2a6e18c6f" kindref="member">StorageLevel::LIGHT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for checkpoints, which are mid-simulation measurements (can also be used for resume if FULL) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="66" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a53db66979510d116e12e429852c23df7" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_good_state</definition>
        <argsstring></argsstring>
        <name>storage_level_good_state</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071a1e23852820b9154316c7c06e2b7ba051" kindref="member">StorageLevel::NORMAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for final results written when a simulation terminates successfully </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="67" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1ae406dc66f399d0c0e3902f7e9e81f8bc" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_fail_state</definition>
        <argsstring></argsstring>
        <name>storage_level_fail_state</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071a1e23852820b9154316c7c06e2b7ba051" kindref="member">StorageLevel::NORMAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for final results written when a simulation terminates unsuccessfully </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="68" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a5be0e26e29c2bb54e41789a5896583ca" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_proj_state</definition>
        <argsstring></argsstring>
        <name>storage_level_proj_state</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071af8589806bbf66241917092b2a6e18c6f" kindref="member">StorageLevel::LIGHT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for the parity projected states, a projected version of the state written when a simulation terminates </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="69" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a82a9057be394d13264d9213aa909ef5c" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_init_state</definition>
        <argsstring></argsstring>
        <name>storage_level_init_state</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071af8589806bbf66241917092b2a6e18c6f" kindref="member">StorageLevel::LIGHT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for the initial states (for instance when launching a simulation or starting a new state) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="70" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a9d632b055bf34f4a8cb2a8b393682774" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_emin_state</definition>
        <argsstring></argsstring>
        <name>storage_level_emin_state</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071af8589806bbf66241917092b2a6e18c6f" kindref="member">StorageLevel::LIGHT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for the minimum energy state (ground state) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="71" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesettings_1_1output_1a47e6a89a65d530cf23d22088b19f3150" prot="public" static="no" mutable="no">
        <type><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref></type>
        <definition>StorageLevel settings::output::storage_level_emax_state</definition>
        <argsstring></argsstring>
        <name>storage_level_emax_state</name>
        <initializer>= <ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071af8589806bbf66241917092b2a6e18c6f" kindref="member">StorageLevel::LIGHT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage level for the maximum energy state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="72" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/GitProjects/DMRG++/source/config/nmspc_settings.h" line="42" column="5"/>
  </compounddef>
</doxygen>
