<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class__vidal__site_8cpp" kind="file" language="C++">
    <compoundname>class_vidal_site.cpp</compoundname>
    <includes refid="class__vidal__site_8h" local="yes">class_vidal_site.h</includes>
    <incdepgraph>
      <node id="2053">
        <label>iomanip</label>
      </node>
      <node id="2051">
        <label>iterator</label>
      </node>
      <node id="2054">
        <label>general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="2055" relation="include">
        </childnode>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2050" relation="include">
        </childnode>
      </node>
      <node id="2048">
        <label>Eigen/Core</label>
      </node>
      <node id="2055">
        <label>experimental/type_traits</label>
      </node>
      <node id="2050">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="2049">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2052">
        <label>iostream</label>
      </node>
      <node id="2047">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="2048" relation="include">
        </childnode>
        <childnode refid="2049" relation="include">
        </childnode>
        <childnode refid="2050" relation="include">
        </childnode>
        <childnode refid="2051" relation="include">
        </childnode>
        <childnode refid="2052" relation="include">
        </childnode>
        <childnode refid="2053" relation="include">
        </childnode>
        <childnode refid="2054" relation="include">
        </childnode>
      </node>
      <node id="2045">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_vidal_site.cpp</label>
        <link refid="class__vidal__site_8cpp"/>
        <childnode refid="2046" relation="include">
        </childnode>
      </node>
      <node id="2046">
        <label>class_vidal_site.h</label>
        <link refid="class__vidal__site_8h"/>
        <childnode refid="2047" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="class__vidal__site_8cpp_1a155b16265d45c1f42d72a93f9f7c697c" prot="public" static="no">
        <type><ref refid="classclass__vidal__site_1a1f22ee8faea82fd05862efdc1530e27e" kindref="member">class_vidal_site::Scalar</ref></type>
        <definition>using Scalar =  class_vidal_site::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_vidal_site.cpp" line="7" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_vidal_site.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-07-06.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__vidal__site_8h" kindref="compound">class_vidal_site.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class__vidal__site_8cpp_1a155b16265d45c1f42d72a93f9f7c697c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class__algorithm__base_8cpp_1a528e55cc6b435f7efe6750d6faa36cd6" kindref="member">Scalar</ref><sp/>=<sp/><ref refid="classclass__vidal__site_1a1f22ee8faea82fd05862efdc1530e27e" kindref="member">class_vidal_site::Scalar</ref>;</highlight></codeline>
<codeline lineno="8" refid="classclass__vidal__site_1a721d0ddfa1faa550d1f5ba6d64949a04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1a721d0ddfa1faa550d1f5ba6d64949a04" kindref="member">class_vidal_site::isReal</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_textra_1a134cee5e3300feee66018395aa0ffa05" kindref="member">Textra::isReal</ref>(<ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>,</highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="9" refid="classclass__vidal__site_1a647bc3bef44cc54c935c55c31e7a51f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;<sp/><ref refid="classclass__vidal__site_1a647bc3bef44cc54c935c55c31e7a51f9" kindref="member">class_vidal_site::get_G</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>);}</highlight></codeline>
<codeline lineno="10" refid="classclass__vidal__site_1afe3069cfa9af24394840fd6d08cb154d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;<sp/><ref refid="classclass__vidal__site_1afe3069cfa9af24394840fd6d08cb154d" kindref="member">class_vidal_site::get_L</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__vidal__site_1a1309d736ba2a999a1e34da874c5f3620" kindref="member">L</ref>);}</highlight></codeline>
<codeline lineno="11" refid="classclass__vidal__site_1a37321efff0b86f6b14c1068bd4f569f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;<sp/><ref refid="classclass__vidal__site_1a647bc3bef44cc54c935c55c31e7a51f9" kindref="member">class_vidal_site::get_G</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>;}</highlight></codeline>
<codeline lineno="12" refid="classclass__vidal__site_1af6f034b58f24cd6ede70f37e3a4ab974" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;<sp/><ref refid="classclass__vidal__site_1afe3069cfa9af24394840fd6d08cb154d" kindref="member">class_vidal_site::get_L</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1a1309d736ba2a999a1e34da874c5f3620" kindref="member">L</ref>;}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classclass__vidal__site_1a91fb27d7a9d6bcaad921fc1e683aa438" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,3&gt;<sp/><ref refid="classclass__vidal__site_1a91fb27d7a9d6bcaad921fc1e683aa438" kindref="member">class_vidal_site::get_A</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/><sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__vidal__site_1a1309d736ba2a999a1e34da874c5f3620" kindref="member">L</ref>).contract(<ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({1},{1})).shuffle(<ref refid="namespace_textra_1a11ff5da431d0a149284e51800d10c0cc" kindref="member">Textra::array3</ref>{1,0,2});}</highlight></codeline>
<codeline lineno="17" refid="classclass__vidal__site_1a710f398ba15c49ef822df6eb44b8a41f" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,3&gt;<sp/><ref refid="classclass__vidal__site_1a710f398ba15c49ef822df6eb44b8a41f" kindref="member">class_vidal_site::get_B</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/><sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>.contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__vidal__site_1a1309d736ba2a999a1e34da874c5f3620" kindref="member">L</ref>),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}));}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classclass__vidal__site_1a48abc701113c51653c2e4b910d815643" refkind="member"><highlight class="normal">std::tuple&lt;long,long,long&gt;<sp/><ref refid="classclass__vidal__site_1a48abc701113c51653c2e4b910d815643" kindref="member">class_vidal_site::get_dims</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="classclass__vidal__site_1a4e630c363c4ce0619593ba7c21f3a0e1" kindref="member">get_spin_dim</ref>(),<ref refid="classclass__vidal__site_1a874b7bbe0e666637647e5772deaeaa37" kindref="member">get_chiL</ref>(),<ref refid="classclass__vidal__site_1a5508860d2e60dcc634d89fb0fc86fa53" kindref="member">get_chiR</ref>()};}</highlight></codeline>
<codeline lineno="20" refid="classclass__vidal__site_1a4e630c363c4ce0619593ba7c21f3a0e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1a4e630c363c4ce0619593ba7c21f3a0e1" kindref="member">class_vidal_site::get_spin_dim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>.dimension(0);}</highlight></codeline>
<codeline lineno="21" refid="classclass__vidal__site_1a874b7bbe0e666637647e5772deaeaa37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1a874b7bbe0e666637647e5772deaeaa37" kindref="member">class_vidal_site::get_chiL</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>.dimension(1);}</highlight></codeline>
<codeline lineno="22" refid="classclass__vidal__site_1a5508860d2e60dcc634d89fb0fc86fa53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1a5508860d2e60dcc634d89fb0fc86fa53" kindref="member">class_vidal_site::get_chiR</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>.dimension(2);}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classclass__vidal__site_1a1e1a15ae047688c153f9122137f1207a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classclass__vidal__site_1a1e1a15ae047688c153f9122137f1207a" kindref="member">class_vidal_site::set_position</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position_){<ref refid="classclass__vidal__site_1aba2f8b6e1ae1dabadf621679711aca8b" kindref="member">position</ref><sp/>=<sp/>position_;}</highlight></codeline>
<codeline lineno="27" refid="classclass__vidal__site_1a84dea9ec6b9cf8d8dee09dc8e5168014" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1a84dea9ec6b9cf8d8dee09dc8e5168014" kindref="member">class_vidal_site::get_position</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__vidal__site_1aba2f8b6e1ae1dabadf621679711aca8b" kindref="member">position</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1aba2f8b6e1ae1dabadf621679711aca8b" kindref="member">position</ref>.value();}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Position<sp/>hasn&apos;t<sp/>been<sp/>set<sp/>on<sp/>vidal<sp/>site.&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classclass__vidal__site_1a1aa23eb9649c1d2297d61d5f9a6863d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1a1aa23eb9649c1d2297d61d5f9a6863d4" kindref="member">class_vidal_site::set_mps</ref><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;G_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;L_){<ref refid="classclass__vidal__site_1aa0aa4328e28b6c4cdc335fbd044d7537" kindref="member">set_G</ref>(G_);<sp/><ref refid="classclass__vidal__site_1affb415878e90fd8d7b91e896951d53f5" kindref="member">set_L</ref>(L_);}</highlight></codeline>
<codeline lineno="35" refid="classclass__vidal__site_1affb415878e90fd8d7b91e896951d53f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1affb415878e90fd8d7b91e896951d53f5" kindref="member">class_vidal_site::set_L</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;L_){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__vidal__site_1aba2f8b6e1ae1dabadf621679711aca8b" kindref="member">position</ref>)<sp/><ref refid="classclass__vidal__site_1a1309d736ba2a999a1e34da874c5f3620" kindref="member">L</ref>=L_;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>set<sp/>L:<sp/>Position<sp/>hasn&apos;t<sp/>been<sp/>set<sp/>yet&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="36" refid="classclass__vidal__site_1aa0aa4328e28b6c4cdc335fbd044d7537" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site_1aa0aa4328e28b6c4cdc335fbd044d7537" kindref="member">class_vidal_site::set_G</ref><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;G_){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__vidal__site_1aba2f8b6e1ae1dabadf621679711aca8b" kindref="member">position</ref>)<sp/><ref refid="classclass__vidal__site_1adad53548863e85a5a0fc2d564beeb09e" kindref="member">G</ref>=G_;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>set<sp/>G:<sp/>Position<sp/>hasn&apos;t<sp/>been<sp/>set<sp/>yet&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_vidal_site.cpp"/>
  </compounddef>
</doxygen>
