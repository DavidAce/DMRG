<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class__tic__toc_8cpp" kind="file" language="C++">
    <compoundname>class_tic_toc.cpp</compoundname>
    <includes refid="class__tic__toc_8h" local="yes">class_tic_toc.h</includes>
    <includes local="no">iomanip</includes>
    <incdepgraph>
      <node id="589">
        <label>iomanip</label>
      </node>
      <node id="586">
        <label>class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
      </node>
      <node id="585">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/class_tic_toc.cpp</label>
        <link refid="class__tic__toc_8cpp"/>
        <childnode refid="586" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
      </node>
      <node id="588">
        <label>iostream</label>
      </node>
      <node id="587">
        <label>chrono</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="class__tic__toc_8cpp_1a9c49adf05a20c65c928eeb2e822556ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const class_tic_toc &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/class_tic_toc.cpp" line="114" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/class_tic_toc.cpp" bodystart="114" bodyend="121"/>
        <references refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" compoundref="class__tic__toc_8h" startline="17">class_tic_toc::profiling</references>
        <references refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" compoundref="class__tic__toc_8h" startline="18">class_tic_toc::print_precision</references>
        <references refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" compoundref="class__tic__toc_8h" startline="20">class_tic_toc::padding</references>
        <references refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" compoundref="class__tic__toc_8h" startline="19">class_tic_toc::name</references>
        <references refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" compoundref="class__tic__toc_8h" startline="26">class_tic_toc::measured_time</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2016-08-14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__tic__toc_8h" kindref="compound">class_tic_toc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classclass__tic__toc_1a5ebe2ca2214ed4f8953f9e484dc475bb" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc_1a79d394742c80ab84ede1710c235476d9" kindref="member">class_tic_toc::class_tic_toc</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prec,<sp/>std::string<sp/>output_text)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>profiling(on_off),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_precision(prec),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(output_text)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref>.empty()){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref><sp/>=<sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a39004b41f3748228508857edfd6fe656" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classclass__tic__toc_1a235fdbf16b92fac52940f351d8459ab3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a235fdbf16b92fac52940f351d8459ab3" kindref="member">class_tic_toc::set_properties</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_off,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prec,<sp/>std::string<sp/>output_text){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classclass__tic__toc_1a79d394742c80ab84ede1710c235476d9" kindref="member">class_tic_toc</ref>(on_off,<sp/>prec,<sp/>output_text);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classclass__tic__toc_1abde6b7bfb08a9534a4a7d3d215232e14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1abde6b7bfb08a9534a4a7d3d215232e14" kindref="member">class_tic_toc::set_label</ref>(std::string<sp/>output_text){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classclass__tic__toc_1a79d394742c80ab84ede1710c235476d9" kindref="member">class_tic_toc</ref>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>,<sp/><ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>,<sp/>output_text);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29" refid="classclass__tic__toc_1a09483508eb9ad17a178bd777d4e8e8a0" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classclass__tic__toc_1a09483508eb9ad17a178bd777d4e8e8a0" kindref="member">class_tic_toc::get_name</ref>(){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classclass__tic__toc_1ac743e885a66900cd82645c5bb07d2f73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1ac743e885a66900cd82645c5bb07d2f73" kindref="member">class_tic_toc::get_measured_time</ref>(){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref>).count();</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classclass__tic__toc_1a1924db6e1c9632114e713028e2beca74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a1924db6e1c9632114e713028e2beca74" kindref="member">class_tic_toc::tic</ref>(){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1adc52ad4939a529cf6bcb2f21d5da7acd" kindref="member">tic_timepoint</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classclass__tic__toc_1afde905f387b29b69afd6940a2a8e2268" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1afde905f387b29b69afd6940a2a8e2268" kindref="member">class_tic_toc::toc</ref>(){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1aa7910bc2adf5c1a03542d3b880a104b2" kindref="member">delta_time</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::now()<sp/>-<sp/><ref refid="classclass__tic__toc_1adc52ad4939a529cf6bcb2f21d5da7acd" kindref="member">tic_timepoint</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref><sp/><sp/><sp/>+=<sp/><ref refid="classclass__tic__toc_1aa7910bc2adf5c1a03542d3b880a104b2" kindref="member">delta_time</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classclass__tic__toc_1a47731fce833ea5e35097f50ce0b84b21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a47731fce833ea5e35097f50ce0b84b21" kindref="member">class_tic_toc::print_delta</ref>(){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setw(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref><sp/>+<sp/><ref refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" kindref="member">padding</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1aa7910bc2adf5c1a03542d3b880a104b2" kindref="member">delta_time</ref>).count();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classclass__tic__toc_1a4168168075a8e2998ce1138ceb06e59b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a4168168075a8e2998ce1138ceb06e59b" kindref="member">class_tic_toc::print_time</ref>(){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>)<sp/>&lt;&lt;<sp/>std::setw(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref><sp/>+<sp/><ref refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" kindref="member">padding</ref>)<sp/>&lt;&lt;<sp/>std::left</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref>).count()&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classclass__tic__toc_1a49634b133c98800736dbe2229bcb1322" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a49634b133c98800736dbe2229bcb1322" kindref="member">class_tic_toc::print_time_w_percent</ref>(){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>)<sp/>&lt;&lt;<sp/>std::setw(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref><sp/>+<sp/><ref refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" kindref="member">padding</ref>)<sp/>&lt;&lt;<sp/>std::left</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref>).count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s<sp/>|&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>)<sp/>&lt;&lt;<sp/>std::setw(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref><sp/>+<sp/><ref refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" kindref="member">padding</ref>)<sp/>&lt;&lt;<sp/>std::right</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>100.0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classclass__tic__toc_1a7353573b5c8c5ba4888892eb26b47859" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a49634b133c98800736dbe2229bcb1322" kindref="member">class_tic_toc::print_time_w_percent</ref>(<ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;parent){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>)<sp/>&lt;&lt;<sp/>std::setw(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref><sp/>+<sp/><ref refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" kindref="member">padding</ref>)<sp/>&lt;&lt;<sp/>std::left</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref>).count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s<sp/>|&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>)<sp/>&lt;&lt;<sp/>std::setw(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref><sp/>+<sp/><ref refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" kindref="member">padding</ref>)<sp/>&lt;&lt;<sp/>std::right</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>100.0*<ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref>.count()<sp/>/<sp/>parent.<ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref>.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classclass__tic__toc_1af3ccb4e4f286036249748458fa653703" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1af3ccb4e4f286036249748458fa653703" kindref="member">class_tic_toc::print_total_reset</ref>(){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>)<sp/><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setw(<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref><sp/>+<sp/><ref refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" kindref="member">padding</ref>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref>).count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a39004b41f3748228508857edfd6fe656" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classclass__tic__toc_1abdb3f46902102c328384e6160d733124" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1abdb3f46902102c328384e6160d733124" kindref="member">class_tic_toc::get_age</ref>()<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;<sp/>(std::chrono::high_resolution_clock::now()<sp/>-<sp/><ref refid="classclass__tic__toc_1ad66c8af4798c5763cd5db868c78eb452" kindref="member">start_timepoint</ref>).count();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classclass__tic__toc_1a4ed784d7ebfbe0ccbbc8118bd5e56fae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a4ed784d7ebfbe0ccbbc8118bd5e56fae" kindref="member">class_tic_toc::get_last_time_interval</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;<sp/>(<ref refid="classclass__tic__toc_1aa7910bc2adf5c1a03542d3b880a104b2" kindref="member">delta_time</ref>).count();</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classclass__tic__toc_1a39004b41f3748228508857edfd6fe656" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a39004b41f3748228508857edfd6fe656" kindref="member">class_tic_toc::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::duration::zero();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1aa7910bc2adf5c1a03542d3b880a104b2" kindref="member">delta_time</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::duration::zero();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1ad66c8af4798c5763cd5db868c78eb452" kindref="member">start_timepoint</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class__tic__toc_8cpp_1a9c49adf05a20c65c928eeb2e822556ec" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="classclass__tic__toc_1a865195fe25d8d8c85bcc7c3301c3ceb6" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;t)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t.<ref refid="classclass__tic__toc_1aab0c96ca2cf539405047a59062bc1d46" kindref="member">profiling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/><sp/>&lt;&lt;<sp/>std::setprecision(t.<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>)<sp/><sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setw(t.<ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref><sp/>+<sp/>t.<ref refid="classclass__tic__toc_1ad24ca3c43008fae9a0c70bf4bfe2f779" kindref="member">padding</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.<ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>t.<ref refid="classclass__tic__toc_1af8b1b53d757e6c7d820eb7239f718659" kindref="member">measured_time</ref>.count();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/general/class_tic_toc.cpp"/>
  </compounddef>
</doxygen>
