<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class__tic__toc_8cpp" kind="file" language="C++">
    <compoundname>class_tic_toc.cpp</compoundname>
    <includes refid="class__tic__toc_8h" local="yes">class_tic_toc.h</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="5">
        <label>stdexcept</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="3">
        <label>chrono</label>
      </node>
      <node id="2">
        <label>class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/general/class_tic_toc.cpp</label>
        <link refid="class__tic__toc_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2016-08-14.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__tic__toc_8h" kindref="compound">class_tic_toc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classclass__tic__toc_1ae3cbd6f54bc203a76f6d6d4c01077712" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc_1ae3cbd6f54bc203a76f6d6d4c01077712" kindref="member">class_tic_toc::class_tic_toc</ref>()<sp/>:<sp/><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref>(true,<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classclass__tic__toc_1a5ebe2ca2214ed4f8953f9e484dc475bb" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc_1ae3cbd6f54bc203a76f6d6d4c01077712" kindref="member">class_tic_toc::class_tic_toc</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prec,<sp/>std::string<sp/>output_text)<sp/>:<sp/>name(std::move(output_text)),<sp/>enable(on_off),<sp/>print_precision(prec)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref>.empty())<sp/>{<sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a39004b41f3748228508857edfd6fe656" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classclass__tic__toc_1a1924db6e1c9632114e713028e2beca74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a1924db6e1c9632114e713028e2beca74" kindref="member">class_tic_toc::tic</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1a9fa43fca42dcb8a44579bb15f992d89b" kindref="member">is_measuring</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Called<sp/>tic()<sp/>twice:<sp/>this<sp/>timer<sp/>is<sp/>already<sp/>measuring:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a95f2d92723936d77ec650be272bab378" kindref="member">tic_timepoint</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a9fa43fca42dcb8a44579bb15f992d89b" kindref="member">is_measuring</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classclass__tic__toc_1afde905f387b29b69afd6940a2a8e2268" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1afde905f387b29b69afd6940a2a8e2268" kindref="member">class_tic_toc::toc</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__tic__toc_1a9fa43fca42dcb8a44579bb15f992d89b" kindref="member">is_measuring</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Called<sp/>toc()<sp/>twice<sp/>or<sp/>without<sp/>prior<sp/>tic()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1af5a0ac678cc6732bcfa2095492ed164d" kindref="member">toc_timepoint</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__tic__toc_1af5a0ac678cc6732bcfa2095492ed164d" kindref="member">toc_timepoint</ref><sp/>-<sp/><ref refid="classclass__tic__toc_1a95f2d92723936d77ec650be272bab378" kindref="member">tic_timepoint</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/>+=<sp/><ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a0387e8723f5f33201534b78f3c4a6be9" kindref="member">lap_time</ref><sp/>+=<sp/><ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a9fa43fca42dcb8a44579bb15f992d89b" kindref="member">is_measuring</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classclass__tic__toc_1afacb38df9651ea2fef7257fda8ddb327" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc_1_1token" kindref="compound">class_tic_toc::token</ref><sp/><ref refid="classclass__tic__toc_1afacb38df9651ea2fef7257fda8ddb327" kindref="member">class_tic_toc::tic_token</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1_1token" kindref="compound">class_tic_toc::token</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classclass__tic__toc_1a235fdbf16b92fac52940f351d8459ab3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a235fdbf16b92fac52940f351d8459ab3" kindref="member">class_tic_toc::set_properties</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on_off,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prec,<sp/>std::string<sp/>output_text)<sp/>{<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classclass__tic__toc_1ae3cbd6f54bc203a76f6d6d4c01077712" kindref="member">class_tic_toc</ref>(on_off,<sp/>prec,<sp/>std::move(output_text));<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classclass__tic__toc_1abde6b7bfb08a9534a4a7d3d215232e14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1abde6b7bfb08a9534a4a7d3d215232e14" kindref="member">class_tic_toc::set_label</ref>(std::string<sp/>output_text)<sp/>{<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classclass__tic__toc_1ae3cbd6f54bc203a76f6d6d4c01077712" kindref="member">class_tic_toc</ref>(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>,<sp/><ref refid="classclass__tic__toc_1a145479bb69a2a945ecb0b1fd56c16019" kindref="member">print_precision</ref>,<sp/>std::move(output_text));<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classclass__tic__toc_1aaaa2f4f6737f5bd35499a1904b181bc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1aaaa2f4f6737f5bd35499a1904b181bc1" kindref="member">class_tic_toc::set_measured_time</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>other_time_in_seconds)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/>=<sp/>std::chrono::duration_cast&lt;hresclock::duration&gt;(std::chrono::duration&lt;double&gt;(other_time_in_seconds));</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classclass__tic__toc_1a877c990111eccbdf327a59ce5d3e290a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a877c990111eccbdf327a59ce5d3e290a" kindref="member">class_tic_toc::start_lap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a0387e8723f5f33201534b78f3c4a6be9" kindref="member">lap_time</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::duration::zero();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a6fcb10860d4e882f8b0a404578f4d1c6" kindref="member">lap_timepoint</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classclass__tic__toc_1a167a394fa6fba294de21f25d2bc99fbd" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classclass__tic__toc_1a167a394fa6fba294de21f25d2bc99fbd" kindref="member">class_tic_toc::get_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a23a715898e5c4274888d2fd72d974e01" kindref="member">name</ref>;<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classclass__tic__toc_1aed131602710cb778d2b1f120c6effe3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1aed131602710cb778d2b1f120c6effe3d" kindref="member">class_tic_toc::get_age</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(std::chrono::high_resolution_clock::now()<sp/>-<sp/><ref refid="classclass__tic__toc_1afb602ae6a58335904d748587d431f6ab" kindref="member">start_timepoint</ref>).count();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classclass__tic__toc_1a1788d4628e074139326e85f016102ff9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a1788d4628e074139326e85f016102ff9" kindref="member">class_tic_toc::get_measured_time</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1a9fa43fca42dcb8a44579bb15f992d89b" kindref="member">is_measuring</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/>+<sp/>std::chrono::high_resolution_clock::now()<sp/>-<sp/><ref refid="classclass__tic__toc_1a95f2d92723936d77ec650be272bab378" kindref="member">tic_timepoint</ref>).count();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref>).count();</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classclass__tic__toc_1afb45e7551d6201bb1e6579b6f56c4a83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1afb45e7551d6201bb1e6579b6f56c4a83" kindref="member">class_tic_toc::get_last_interval</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1a9fa43fca42dcb8a44579bb15f992d89b" kindref="member">is_measuring</ref>){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>delta_temp<sp/><sp/>=<sp/>std::chrono::high_resolution_clock::now()<sp/>-<sp/><ref refid="classclass__tic__toc_1a95f2d92723936d77ec650be272bab378" kindref="member">tic_timepoint</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(delta_temp).count();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref>).count();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classclass__tic__toc_1a94d247abd36a09e9c886d67de2a2b418" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a94d247abd36a09e9c886d67de2a2b418" kindref="member">class_tic_toc::get_lap</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1a9fa43fca42dcb8a44579bb15f992d89b" kindref="member">is_measuring</ref>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>the<sp/>measured<sp/>time,<sp/>subtract<sp/>the<sp/>time<sp/>since<sp/>the<sp/>lap<sp/>time<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>measured_time_since_tic<sp/>=<sp/>std::chrono::high_resolution_clock::now()<sp/>-<sp/><ref refid="classclass__tic__toc_1a95f2d92723936d77ec650be272bab378" kindref="member">tic_timepoint</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>measured_time_until_lap<sp/>=<sp/><ref refid="classclass__tic__toc_1a6fcb10860d4e882f8b0a404578f4d1c6" kindref="member">lap_timepoint</ref><sp/>&gt;=<sp/><ref refid="classclass__tic__toc_1a95f2d92723936d77ec650be272bab378" kindref="member">tic_timepoint</ref><sp/>?<sp/><ref refid="classclass__tic__toc_1a6fcb10860d4e882f8b0a404578f4d1c6" kindref="member">lap_timepoint</ref><sp/>-<sp/><ref refid="classclass__tic__toc_1a95f2d92723936d77ec650be272bab378" kindref="member">tic_timepoint</ref><sp/>:<sp/>std::chrono::high_resolution_clock::duration::zero();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>measured_time_since_lap<sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1a0387e8723f5f33201534b78f3c4a6be9" kindref="member">lap_time</ref><sp/>+<sp/>measured_time_since_tic<sp/>-<sp/>measured_time_until_lap).count();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>measured_time_since_lap;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(<ref refid="classclass__tic__toc_1a0387e8723f5f33201534b78f3c4a6be9" kindref="member">lap_time</ref>).count();</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classclass__tic__toc_1a7785d0fbcab88e02398d9178fb552252" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a7785d0fbcab88e02398d9178fb552252" kindref="member">class_tic_toc::restart_lap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lap<sp/>=<sp/><ref refid="classclass__tic__toc_1a94d247abd36a09e9c886d67de2a2b418" kindref="member">get_lap</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a877c990111eccbdf327a59ce5d3e290a" kindref="member">start_lap</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lap;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classclass__tic__toc_1a39004b41f3748228508857edfd6fe656" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1a39004b41f3748228508857edfd6fe656" kindref="member">class_tic_toc::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::duration::zero();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::duration::zero();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a0387e8723f5f33201534b78f3c4a6be9" kindref="member">lap_time</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::duration::zero();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1afb602ae6a58335904d748587d431f6ab" kindref="member">start_timepoint</ref><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a6fcb10860d4e882f8b0a404578f4d1c6" kindref="member">lap_timepoint</ref><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1a9fa43fca42dcb8a44579bb15f992d89b" kindref="member">is_measuring</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classclass__tic__toc_1a15e1c3b901c722e1807de0ae84bed8cb" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;<ref refid="classclass__tic__toc_1a15e1c3b901c722e1807de0ae84bed8cb" kindref="member">class_tic_toc::operator=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>other_time_in_seconds)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/>=<sp/>std::chrono::duration_cast&lt;hresclock::duration&gt;(std::chrono::duration&lt;double&gt;(other_time_in_seconds));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref><sp/><sp/><sp/><sp/>=<sp/>this-&gt;<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classclass__tic__toc_1a38fea74d515a16e7dd49009a6e1cba48" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;<ref refid="classclass__tic__toc_1a38fea74d515a16e7dd49009a6e1cba48" kindref="member">class_tic_toc::operator+=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>other_time_in_seconds)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/>+=<sp/>std::chrono::duration_cast&lt;hresclock::duration&gt;(std::chrono::duration&lt;double&gt;(other_time_in_seconds));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref><sp/>=<sp/>std::chrono::duration_cast&lt;hresclock::duration&gt;(std::chrono::duration&lt;double&gt;(other_time_in_seconds));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classclass__tic__toc_1a5bb2c03656338a6a93fde77be7330451" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;<ref refid="classclass__tic__toc_1a5bb2c03656338a6a93fde77be7330451" kindref="member">class_tic_toc::operator-=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>other_time_in_seconds)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/>-=<sp/>std::chrono::duration_cast&lt;hresclock::duration&gt;(std::chrono::duration&lt;double&gt;(other_time_in_seconds));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref><sp/>=<sp/>-std::chrono::duration_cast&lt;hresclock::duration&gt;(std::chrono::duration&lt;double&gt;(other_time_in_seconds));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classclass__tic__toc_1a49b835810f13e1c95326aa43846b372f" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;<ref refid="classclass__tic__toc_1a38fea74d515a16e7dd49009a6e1cba48" kindref="member">class_tic_toc::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/>+=<sp/>rhs.<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref><sp/>=<sp/>rhs.<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classclass__tic__toc_1a9f07fcc142e86d94bfa4f528fcc22374" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;<ref refid="classclass__tic__toc_1a5bb2c03656338a6a93fde77be7330451" kindref="member">class_tic_toc::operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__tic__toc_1af854661a442007f52fa05b8d4c4ed7a2" kindref="member">enable</ref>){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref><sp/>-=<sp/>rhs.<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__tic__toc_1a040cdae8ccefaf52671b891677502f2d" kindref="member">delta_time</ref><sp/>=<sp/>-rhs.<ref refid="classclass__tic__toc_1a618035d4682028896799adb420c7d139" kindref="member">measured_time</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classclass__tic__toc_1_1token_1adbecfab0f69fc21c08007c1418096755" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc_1_1token_1adbecfab0f69fc21c08007c1418096755" kindref="member">class_tic_toc::token::token</ref>(<ref refid="classclass__tic__toc" kindref="compound">class_tic_toc</ref><sp/>&amp;t_)<sp/>:t(t_){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__tic__toc_1_1token_1a8a9be3b515927b665acbc3f591026acd" kindref="member">t</ref>.<ref refid="classclass__tic__toc_1a1924db6e1c9632114e713028e2beca74" kindref="member">tic</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classclass__tic__toc_1_1token_1a078d0095fe56c0f57c177902c0a2e017" refkind="member"><highlight class="normal"><ref refid="classclass__tic__toc_1_1token_1a078d0095fe56c0f57c177902c0a2e017" kindref="member">class_tic_toc::token::~token</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t.is_measuring)<sp/>t.toc();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;<sp/>ex){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Exception<sp/>in<sp/>token<sp/>destructor:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>ex.what());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classclass__tic__toc_1_1token_1aac3fb9b1a607cffb45945133458740e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1_1token_1aac3fb9b1a607cffb45945133458740e5" kindref="member">class_tic_toc::token::tic</ref>()<sp/>{t.tic();}</highlight></codeline>
<codeline lineno="159" refid="classclass__tic__toc_1_1token_1af638776c12748f38e118ea6b669d5924" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__tic__toc_1_1token_1af638776c12748f38e118ea6b669d5924" kindref="member">class_tic_toc::token::toc</ref>()<sp/>{t.toc();}</highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/DMRG++/source/general/class_tic_toc.cpp"/>
  </compounddef>
</doxygen>
