<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class__state__infinite_8h" kind="file" language="C++">
    <compoundname>class_state_infinite.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">optional</includes>
    <includes refid="nmspc__tensor__extra_8h" local="no">general/nmspc_tensor_extra.h</includes>
    <includes refid="class__tic__toc_8h" local="no">general/class_tic_toc.h</includes>
    <includes refid="nmspc__eigutils_8h" local="no">math/nmspc_eigutils.h</includes>
    <includes refid="nmspc__settings_8h" local="no">simulation/nmspc_settings.h</includes>
    <includes refid="nmspc__logger_8h" local="no">io/nmspc_logger.h</includes>
    <includedby refid="class__algorithm__infinite_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_algorithm_infinite.cpp</includedby>
    <includedby refid="class__algorithm__launcher_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_algorithm_launcher.cpp</includedby>
    <includedby refid="class__i_d_m_r_g_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_iDMRG.cpp</includedby>
    <includedby refid="class__i_t_e_b_d_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_iTEBD.cpp</includedby>
    <includedby refid="class__state__infinite_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_infinite.cpp</includedby>
    <includedby refid="views_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/common/views.cpp</includedby>
    <includedby refid="finite_2io_2h5pp_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/io/h5pp.cpp</includedby>
    <includedby refid="infinite_2debug_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/debug.cpp</includedby>
    <includedby refid="env_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/env.cpp</includedby>
    <includedby refid="infinite_2io_2h5pp_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/io/h5pp.cpp</includedby>
    <includedby refid="infinite_2io_2h5pp__tables_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/io/h5pp_tables.cpp</includedby>
    <includedby refid="infinite_2measure_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/measure.cpp</includedby>
    <includedby refid="infinite_2mpo_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/mpo.cpp</includedby>
    <includedby refid="infinite_2mps_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/mps.cpp</includedby>
    <includedby refid="infinite_2opt_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/opt.cpp</includedby>
    <includedby refid="infinite_2print_8cpp" local="no">/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/print.cpp</includedby>
    <incdepgraph>
      <node id="2560">
        <label>iomanip</label>
      </node>
      <node id="2558">
        <label>iterator</label>
      </node>
      <node id="2561">
        <label>general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2556" relation="include">
        </childnode>
        <childnode refid="2555" relation="include">
        </childnode>
      </node>
      <node id="2556">
        <label>Eigen/Core</label>
      </node>
      <node id="2573">
        <label>string</label>
      </node>
      <node id="2563">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="2564" relation="include">
        </childnode>
        <childnode refid="2559" relation="include">
        </childnode>
      </node>
      <node id="2575">
        <label>io/nmspc_logger.h</label>
        <link refid="nmspc__logger_8h"/>
        <childnode refid="2576" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2567">
        <label>map</label>
      </node>
      <node id="2562">
        <label>experimental/type_traits</label>
      </node>
      <node id="2555">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="2577">
        <label>spdlog/fmt/bundled/ranges.h</label>
      </node>
      <node id="2571">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="2557">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2574">
        <label>simulation/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="2576">
        <label>spdlog/logger.h</label>
      </node>
      <node id="2554">
        <label>general/nmspc_omp.h</label>
        <link refid="nmspc__omp_8h"/>
        <childnode refid="2555" relation="include">
        </childnode>
      </node>
      <node id="2550">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_infinite.h</label>
        <link refid="class__state__infinite_8h"/>
        <childnode refid="2551" relation="include">
        </childnode>
        <childnode refid="2552" relation="include">
        </childnode>
        <childnode refid="2553" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2565" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
      </node>
      <node id="2552">
        <label>optional</label>
      </node>
      <node id="2569">
        <label>vector</label>
      </node>
      <node id="2570">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="2566">
        <label>array</label>
      </node>
      <node id="2559">
        <label>iostream</label>
      </node>
      <node id="2565">
        <label>math/nmspc_eigutils.h</label>
        <link refid="nmspc__eigutils_8h"/>
        <childnode refid="2559" relation="include">
        </childnode>
        <childnode refid="2566" relation="include">
        </childnode>
        <childnode refid="2567" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2569" relation="include">
        </childnode>
        <childnode refid="2570" relation="include">
        </childnode>
        <childnode refid="2571" relation="include">
        </childnode>
      </node>
      <node id="2564">
        <label>chrono</label>
      </node>
      <node id="2568">
        <label>complex</label>
      </node>
      <node id="2572">
        <label>simulation/nmspc_settings.h</label>
        <link refid="nmspc__settings_8h"/>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2569" relation="include">
        </childnode>
        <childnode refid="2574" relation="include">
        </childnode>
      </node>
      <node id="2553">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="2554" relation="include">
        </childnode>
        <childnode refid="2556" relation="include">
        </childnode>
        <childnode refid="2557" relation="include">
        </childnode>
        <childnode refid="2555" relation="include">
        </childnode>
        <childnode refid="2558" relation="include">
        </childnode>
        <childnode refid="2559" relation="include">
        </childnode>
        <childnode refid="2560" relation="include">
        </childnode>
        <childnode refid="2561" relation="include">
        </childnode>
      </node>
      <node id="2551">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2579">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_algorithm_infinite.cpp</label>
        <link refid="class__algorithm__infinite_8cpp"/>
      </node>
      <node id="2590">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/measure.cpp</label>
        <link refid="infinite_2measure_8cpp"/>
      </node>
      <node id="2586">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/debug.cpp</label>
        <link refid="infinite_2debug_8cpp"/>
      </node>
      <node id="2583">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_infinite.cpp</label>
        <link refid="class__state__infinite_8cpp"/>
      </node>
      <node id="2584">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/common/views.cpp</label>
        <link refid="views_8cpp"/>
      </node>
      <node id="2588">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/io/h5pp.cpp</label>
        <link refid="infinite_2io_2h5pp_8cpp"/>
      </node>
      <node id="2582">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_iTEBD.cpp</label>
        <link refid="class__i_t_e_b_d_8cpp"/>
      </node>
      <node id="2585">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/finite/io/h5pp.cpp</label>
        <link refid="finite_2io_2h5pp_8cpp"/>
      </node>
      <node id="2589">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/io/h5pp_tables.cpp</label>
        <link refid="infinite_2io_2h5pp__tables_8cpp"/>
      </node>
      <node id="2578">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_infinite.h</label>
        <link refid="class__state__infinite_8h"/>
        <childnode refid="2579" relation="include">
        </childnode>
        <childnode refid="2580" relation="include">
        </childnode>
        <childnode refid="2581" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2583" relation="include">
        </childnode>
        <childnode refid="2584" relation="include">
        </childnode>
        <childnode refid="2585" relation="include">
        </childnode>
        <childnode refid="2586" relation="include">
        </childnode>
        <childnode refid="2587" relation="include">
        </childnode>
        <childnode refid="2588" relation="include">
        </childnode>
        <childnode refid="2589" relation="include">
        </childnode>
        <childnode refid="2590" relation="include">
        </childnode>
        <childnode refid="2591" relation="include">
        </childnode>
        <childnode refid="2592" relation="include">
        </childnode>
        <childnode refid="2593" relation="include">
        </childnode>
        <childnode refid="2594" relation="include">
        </childnode>
      </node>
      <node id="2580">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_algorithm_launcher.cpp</label>
        <link refid="class__algorithm__launcher_8cpp"/>
      </node>
      <node id="2592">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/mps.cpp</label>
        <link refid="infinite_2mps_8cpp"/>
      </node>
      <node id="2587">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/env.cpp</label>
        <link refid="env_8cpp"/>
      </node>
      <node id="2581">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_iDMRG.cpp</label>
        <link refid="class__i_d_m_r_g_8cpp"/>
      </node>
      <node id="2594">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/print.cpp</label>
        <link refid="infinite_2print_8cpp"/>
      </node>
      <node id="2591">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/mpo.cpp</label>
        <link refid="infinite_2mpo_8cpp"/>
      </node>
      <node id="2593">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/infinite/opt.cpp</label>
        <link refid="infinite_2opt_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classclass__state__infinite" prot="public">class_state_infinite</innerclass>
    <innerclass refid="structclass__state__infinite_1_1_measurements" prot="public">class_state_infinite::Measurements</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>7/22/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__tensor__extra_8h" kindref="compound">general/nmspc_tensor_extra.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__tic__toc_8h" kindref="compound">general/class_tic_toc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__eigutils_8h" kindref="compound">math/nmspc_eigutils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__settings_8h" kindref="compound">simulation/nmspc_settings.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__logger_8h" kindref="compound">io/nmspc_logger.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__model__base" kindref="compound">class_model_base</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__environment" kindref="compound">class_environment</ref>;</highlight></codeline>
<codeline lineno="18" refid="classclass__infinite__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__environment__var" kindref="compound">class_environment_var</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classclass__state__infinite" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29" refid="classclass__state__infinite_1ab0a0427aeedae4c985ccac78ba125578" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="enums_8h_1ad69f3cf5fdb6ef307d85180c346e7921" kindref="member">SimulationType</ref><sp/><ref refid="classclass__state__infinite_1ab0a0427aeedae4c985ccac78ba125578" kindref="member">sim_type</ref>;</highlight></codeline>
<codeline lineno="30" refid="classclass__state__infinite_1a61854a2eba7389288db5854708fb931d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classclass__state__infinite_1a61854a2eba7389288db5854708fb931d" kindref="member">sim_name</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classclass__state__infinite_1a955fe1624fc3fc0633d053ddef92316b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;long&gt;<sp/><ref refid="classclass__state__infinite_1a955fe1624fc3fc0633d053ddef92316b" kindref="member">chi_lim</ref>;</highlight></codeline>
<codeline lineno="33" refid="classclass__state__infinite_1a7c4ca3c239ae9cadec3b26a658387a75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;long&gt;<sp/><ref refid="classclass__state__infinite_1a7c4ca3c239ae9cadec3b26a658387a75" kindref="member">chi_max</ref>;</highlight></codeline>
<codeline lineno="34" refid="classclass__state__infinite_1ad1770b563319fffe85c6744f779b4130" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/><ref refid="classclass__state__infinite_1ad1770b563319fffe85c6744f779b4130" kindref="member">log</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="classclass__state__infinite_1aa579cd672ec5860930cd3cb5f8f9534d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1aa579cd672ec5860930cd3cb5f8f9534d" kindref="member">Scalar</ref><sp/>=<sp/>std::complex&lt;double&gt;;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a4c040d843193a85a3a9a60bd3e12d35a" kindref="member">class_state_infinite</ref>(<ref refid="enums_8h_1ad69f3cf5fdb6ef307d85180c346e7921" kindref="member">SimulationType</ref><sp/>sim_type_,<sp/>std::string<sp/>sim_name_);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>we<sp/>can<sp/>use<sp/>the<sp/>default<sp/>move<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>class_state_infinite(class_state_infinite&amp;&amp;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>We<sp/>have<sp/>to<sp/>provide<sp/>a<sp/>deep<sp/>copying<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>class_state_infinite&amp;<sp/>operator=(class_state_infinite<sp/>const&amp;<sp/>source);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>we<sp/>can<sp/>use<sp/>the<sp/>default<sp/>move<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>class_state_infinite&amp;<sp/>operator=(class_state_infinite&amp;&amp;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>~class_state_infinite();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1a1f2ab8f5c4b3af39b3d2d527c55d41f4" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_mps_2site&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="classclass__state__infinite_1a8353252491499180a1da8475263b9988" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_model_base&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a8353252491499180a1da8475263b9988" kindref="member">HA</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="classclass__state__infinite_1a32291bdbb5c48c2010902e017ac2ceed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_model_base&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a32291bdbb5c48c2010902e017ac2ceed" kindref="member">HB</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="classclass__state__infinite_1a077ed4aed07939f87e25afdea2b3fe16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_environment&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a077ed4aed07939f87e25afdea2b3fe16" kindref="member">Lblock</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="classclass__state__infinite_1a06e4df359f1a484a0f3a43ae9945dbd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_environment&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a06e4df359f1a484a0f3a43ae9945dbd7" kindref="member">Rblock</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="classclass__state__infinite_1ab7dc738725acc7cc2b3b5f68d6d7b442" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_environment_var&gt;<sp/><sp/><sp/><ref refid="classclass__state__infinite_1ab7dc738725acc7cc2b3b5f68d6d7b442" kindref="member">Lblock2</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="classclass__state__infinite_1a118c4de180bbf69d18182f8aae819b98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_environment_var&gt;<sp/><sp/><sp/><ref refid="classclass__state__infinite_1a118c4de180bbf69d18182f8aae819b98" kindref="member">Rblock2</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a23352e24c0de2b31d38e2dbabff7fc88" kindref="member">get_length</ref>()<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a00a459e165dd5a649401efaae2dfccd6" kindref="member">get_position</ref>()<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a5839fc62dc99978e7d9cba7ed1dfa759" kindref="member">get_chi</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1adea8436bbf24a92bc9efe65a80e789dd" kindref="member">get_chi_lim</ref>()<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a723028f0d678f794e3b64b36bde728f9" kindref="member">set_chi_lim</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>chi_lim_);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a45b3aa0536729ca31f1900faf905ea2d" kindref="member">get_chi_max</ref>()<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1af208e18ac3ef280b7d9d86fa85a813b1" kindref="member">set_chi_max</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>chi_max_);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1afd32f9139276e02f5d00a928ef5ec30e" kindref="member">get_truncation_error</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="classclass__state__infinite_1acf5604b099a6b5fe52c07794543fce25" kindref="member">get_theta</ref>()<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::DSizes&lt;long,4&gt;<sp/><sp/><sp/><sp/><ref refid="classclass__state__infinite_1a52692b6ce8e872e9c5f85693c8681396" kindref="member">dimensions</ref>()<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1a0870c12501c560befa97ed273c464394" kindref="member">assert_positions</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>optimize_MPS(Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>&amp;theta,<sp/>eigutils::eigSetting::Ritz<sp/>ritz<sp/>=<sp/>eigutils::eigSetting::Ritz::SR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/>__attribute((hot));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>Finds<sp/>the<sp/>smallest<sp/>algebraic<sp/>eigenvalue<sp/>and<sp/>eigenvector<sp/>(the<sp/>ground<sp/>state)<sp/>using<sp/>[Spectra](https://github.com/yixuan/spectra).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>evolve_MPS(const<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>&amp;U);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>evolve_MPS(const<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>&amp;theta,<sp/>const<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>&amp;U);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>truncate_MPS(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>&amp;theta,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>The<sp/>2-site<sp/>MPS<sp/>to<sp/>truncate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>chi_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>Bond<sp/>dimension<sp/>of<sp/>the<sp/>current<sp/>position<sp/>(maximum<sp/>number<sp/>of<sp/>singular<sp/>values<sp/>to<sp/>keep<sp/>in<sp/>SVD).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>svd_threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>Minimum<sp/>threshold<sp/>value<sp/>for<sp/>keeping<sp/>singular<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute((hot));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>Singular<sp/>value<sp/>decomposition,<sp/>SVD,<sp/>or<sp/>Schmidt<sp/>decomposition,<sp/>of<sp/>the<sp/>ground<sp/>state,<sp/>where<sp/>the<sp/>truncation<sp/>keeps<sp/>\f$\chi\f$<sp/>(`chi`)<sp/>singular<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>truncate_MPS(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>&amp;theta,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>The<sp/>2-site<sp/>MPS<sp/>to<sp/>truncate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_mps_2site<sp/>&amp;MPS_out,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>chi_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>Bond<sp/>dimension<sp/>of<sp/>the<sp/>current<sp/>position<sp/>(maximum<sp/>number<sp/>of<sp/>singular<sp/>values<sp/>to<sp/>keep<sp/>in<sp/>SVD).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>svd_threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>Minimum<sp/>threshold<sp/>value<sp/>for<sp/>keeping<sp/>singular<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute((hot));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>Singular<sp/>value<sp/>decomposition,<sp/>SVD,<sp/>or<sp/>Schmidt<sp/>decomposition,<sp/>of<sp/>the<sp/>ground<sp/>state,<sp/>where<sp/>the<sp/>truncation<sp/>keeps<sp/>\f$\chi\f$<sp/>(`chi`)<sp/>singular<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1acb6670cc9544d8b75063f7e411f81d3e" kindref="member">enlarge_environment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction<sp/>=<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1a897738e8ac03701e25dd94e46335e5ee" kindref="member">isReal</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><sp/>Eigen::Matrix&lt;T,Eigen::Dynamic,<sp/>Eigen::Dynamic&gt;<sp/><ref refid="classclass__state__infinite_1a26ea6411ae508fbbed931da246b98435" kindref="member">get_H_local_matrix</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><sp/>Eigen::Matrix&lt;T,Eigen::Dynamic,<sp/>Eigen::Dynamic&gt;<sp/><ref refid="classclass__state__infinite_1a0bb81ff999f4b343582ee8fbd23dfa23" kindref="member">get_H_local_sq_matrix</ref><sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1a88adee709151e8e37a6242b867b7d1e8" kindref="member">set_superblock</ref>(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>&amp;Lblock2_,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;Lblock_,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>&amp;MPO_A,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;LA,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;GA,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;LC,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;GB,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>&amp;LB,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>&amp;MPO_B,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>&amp;Rblock_,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>&amp;Rblock2_</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1a1952f86f0e8e7781cb9622599e88f825" kindref="member">set_positions</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>set_current_dimensions()<sp/><sp/><sp/><sp/><sp/><sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*!&lt;<sp/>Update<sp/>variables<sp/>for<sp/>dimensions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1a83a9a18970c6dd4b0f77bffbfb657a1e" kindref="member">swap_AB</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125" refid="structclass__state__infinite_1_1_measurements" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structclass__state__infinite_1_1_measurements" kindref="compound">Measurements</ref><sp/>{</highlight></codeline>
<codeline lineno="126" refid="structclass__state__infinite_1_1_measurements_1a047dd88f95c605657b3973e630f03d63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1a047dd88f95c605657b3973e630f03d63" kindref="member">length</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="127" refid="structclass__state__infinite_1_1_measurements_1abae974a0ece39a460df8bacd5fa499ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1abae974a0ece39a460df8bacd5fa499ff" kindref="member">bond_dimension</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="128" refid="structclass__state__infinite_1_1_measurements_1a68d816ad30132c33c712ea405be9ba4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1a68d816ad30132c33c712ea405be9ba4b" kindref="member">current_entanglement_entropy</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="129" refid="structclass__state__infinite_1_1_measurements_1af0c172fdc52cc70b5f372c8c1008126c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1af0c172fdc52cc70b5f372c8c1008126c" kindref="member">norm</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="130" refid="structclass__state__infinite_1_1_measurements_1a5a62738fcf130c65905125d419f539b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1a5a62738fcf130c65905125d419f539b7" kindref="member">energy_mpo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="131" refid="structclass__state__infinite_1_1_measurements_1aac24ef5f013f8cc371d69c6c3a406684" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1aac24ef5f013f8cc371d69c6c3a406684" kindref="member">energy_per_site_mpo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="132" refid="structclass__state__infinite_1_1_measurements_1a0f5485a63b8ebca6514b13db2885d2ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1a0f5485a63b8ebca6514b13db2885d2ff" kindref="member">energy_variance_mpo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="133" refid="structclass__state__infinite_1_1_measurements_1a2fa57a4a1ace53efdb7787867fdfcbef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1a2fa57a4a1ace53efdb7787867fdfcbef" kindref="member">energy_per_site_ham</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="134" refid="structclass__state__infinite_1_1_measurements_1afede3ef4984c75745ec77d14dcae7e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1afede3ef4984c75745ec77d14dcae7e23" kindref="member">energy_per_site_mom</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="135" refid="structclass__state__infinite_1_1_measurements_1acaf0d4bc74090827559e2c8aba1d1d90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1acaf0d4bc74090827559e2c8aba1d1d90" kindref="member">energy_variance_per_site_mpo</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="136" refid="structclass__state__infinite_1_1_measurements_1a786eb63588ebc07620ca8b68f2e088ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1a786eb63588ebc07620ca8b68f2e088ad" kindref="member">energy_variance_per_site_ham</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="137" refid="structclass__state__infinite_1_1_measurements_1aa8ca000e3f7ccecc2daa9be33bd90b46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1aa8ca000e3f7ccecc2daa9be33bd90b46" kindref="member">energy_variance_per_site_mom</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="138" refid="structclass__state__infinite_1_1_measurements_1a771ea2adc08f5c243c5e87bac9814e63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="structclass__state__infinite_1_1_measurements_1a771ea2adc08f5c243c5e87bac9814e63" kindref="member">truncation_error</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="140" refid="classclass__state__infinite_1af79035b041fc3f69f4f17d656f964358" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="structclass__state__infinite_1_1_measurements" kindref="compound">Measurements</ref><sp/><ref refid="classclass__state__infinite_1af79035b041fc3f69f4f17d656f964358" kindref="member">measurements</ref>;</highlight></codeline>
<codeline lineno="141" refid="classclass__state__infinite_1a1044590d8feba9a066bba8f372ec993a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1a1044590d8feba9a066bba8f372ec993a" kindref="member">has_been_written</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1aa337cbd68bed88136c332c12b8f920b0" kindref="member">do_all_measurements</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite_1a6cb78cd0b78facc2e89c76a6b5dbef04" kindref="member">unset_measurements</ref>()<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Profiling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_eig;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_ene_mpo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_ene_ham;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_ene_mom;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_var_mpo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_var_ham;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_var_mom;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_entropy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_temp1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_temp2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_temp3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>mutable<sp/>class_tic_toc<sp/>t_temp4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>set_profiling_labels();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>print_profiling(class_tic_toc<sp/>&amp;t_parent);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_state_infinite.h"/>
  </compounddef>
</doxygen>
