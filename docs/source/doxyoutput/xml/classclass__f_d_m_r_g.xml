<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classclass__f_d_m_r_g" kind="class" language="C++" prot="public">
    <compoundname>class_fDMRG</compoundname>
    <basecompoundref refid="classclass__algorithm__finite" prot="public" virt="non-virtual">class_algorithm_finite</basecompoundref>
    <includes refid="class__f_d_m_r_g_8h" local="no">class_fDMRG.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classclass__f_d_m_r_g_1ac719179f6fa2f471afdba895b0a8026d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool class_fDMRG::projected_during_saturation</definition>
        <argsstring></argsstring>
        <name>projected_during_saturation</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="21" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classclass__f_d_m_r_g_1a8ad33fc90e97bfd0e1bd81ade8d7ef02" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>class_fDMRG::class_fDMRG</definition>
        <argsstring>(std::shared_ptr&lt; h5pp::File &gt; h5ppFile_)</argsstring>
        <name>class_fDMRG</name>
        <param>
          <type>std::shared_ptr&lt; h5pp::File &gt;</type>
          <declname>h5ppFile_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="19" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="18" bodyend="22"/>
        <references refid="classclass__f_d_m_r_g_1a8ad33fc90e97bfd0e1bd81ade8d7ef02" compoundref="class__f_d_m_r_g_8cpp" startline="18" endline="22">class_fDMRG</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1a08fe1cb78f4ba42593dac8d1ca7c73c9" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_fDMRG::run_simulation</definition>
        <argsstring>() final</argsstring>
        <name>run_simulation</name>
        <reimplements refid="classclass__algorithm__finite_1a0ce48333412bf3d6ee639d09c46e8a51">run_simulation</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="22" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="26" bodyend="61"/>
        <references refid="classclass__f_d_m_r_g_1aac645a52a00193e6a8d15543117e455f" compoundref="class__f_d_m_r_g_8cpp" startline="64" endline="113">check_convergence</references>
        <references refid="classclass__algorithm__base_1a0dfe4e91492006565c1129e45ac185b8" compoundref="class__algorithm__base_8h" startline="43">class_algorithm_base::sim_status</references>
        <references refid="structstatus__data_1a0bf230f68ab2587ea9d80f4ef1aca4dc" compoundref="class__simulation__status_8h" startline="18">status_data::iteration</references>
        <references refid="namespacesettings_1_1fdmrg_1a06f9b3649e0f8f8a5b76b5f315f9d4ec" compoundref="nmspc__settings_8h" startline="131">settings::fdmrg::max_sweeps</references>
        <references refid="classclass__algorithm__base_1a9bef39d158c6e6d1eed969116c7345b4a5657d36364908ad640638b4239c8a97e">class_algorithm_base::MAX_ITERS</references>
        <references refid="structstatus__data_1a66507c5502dd9342583929e5a0953321" compoundref="class__simulation__status_8h" startline="39">status_data::simulation_has_converged</references>
        <references refid="classclass__algorithm__base_1a9bef39d158c6e6d1eed969116c7345b4afd9f6519d3f45276829fe74eb2c4bb85">class_algorithm_base::SUCCEEDED</references>
        <references refid="structstatus__data_1ad492e1e0419f6a35924cfa7fafa8e9c3" compoundref="class__simulation__status_8h" startline="44">status_data::simulation_has_to_stop</references>
        <references refid="classclass__algorithm__base_1a9bef39d158c6e6d1eed969116c7345b4a5c290ac23e3d60150ad896708595fcb7">class_algorithm_base::SATURATED</references>
        <references refid="structstatus__data_1a45e276d6df46dc728b839a192d571be2" compoundref="class__simulation__status_8h" startline="19">status_data::step</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1aac645a52a00193e6a8d15543117e455f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void class_fDMRG::check_convergence</definition>
        <argsstring>() final</argsstring>
        <name>check_convergence</name>
        <reimplements refid="classclass__algorithm__base_1a6d37e1472c3e74f8e50a11c71a8b03ee">check_convergence</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="23" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="64" bodyend="113"/>
        <references refid="namespacetools_1_1common_1_1profile_1ab2944237031c9b3b95d776604b107f76" compoundref="nmspc__tools_8h" startline="378">tools::common::profile::t_con</references>
        <references refid="classclass__tic__toc_1a1924db6e1c9632114e713028e2beca74" compoundref="class__tic__toc_8cpp" startline="37" endline="41">class_tic_toc::tic</references>
        <references refid="classclass__algorithm__base_1a0dfe4e91492006565c1129e45ac185b8" compoundref="class__algorithm__base_8h" startline="43">class_algorithm_base::sim_status</references>
        <references refid="structstatus__data_1a0bf230f68ab2587ea9d80f4ef1aca4dc" compoundref="class__simulation__status_8h" startline="18">status_data::iteration</references>
        <references refid="namespacesettings_1_1fdmrg_1ae628b1a6ea887a9f04c1e27acfe3868b" compoundref="nmspc__settings_8h" startline="132">settings::fdmrg::min_sweeps</references>
        <references refid="structstatus__data_1a04f287ba8285d95324bdb568f5e60057" compoundref="class__simulation__status_8h" startline="48">status_data::variance_mpo_has_converged</references>
        <references refid="structstatus__data_1a05425f160264fc7b0aa9f5bea0bc461a" compoundref="class__simulation__status_8h" startline="46">status_data::entanglement_has_converged</references>
        <references refid="structstatus__data_1a66507c5502dd9342583929e5a0953321" compoundref="class__simulation__status_8h" startline="39">status_data::simulation_has_converged</references>
        <references refid="structstatus__data_1a563478860bb43be3e9c4a00325372c34" compoundref="class__simulation__status_8h" startline="45">status_data::chi_lim_has_reached_chi_max</references>
        <references refid="structstatus__data_1a756b1a37d89d85dd571232acdc7e9131" compoundref="class__simulation__status_8h" startline="55">status_data::variance_mpo_saturated_for</references>
        <references refid="classclass__algorithm__finite_1a8908aad72db98c88a37d4d0696c1a330" compoundref="class__algorithm__finite_8h" startline="38">class_algorithm_finite::max_saturation_iters</references>
        <references refid="structstatus__data_1a621237449da0c96f46a4d97f9e3078b9" compoundref="class__simulation__status_8h" startline="54">status_data::entanglement_saturated_for</references>
        <references refid="structstatus__data_1ad492e1e0419f6a35924cfa7fafa8e9c3" compoundref="class__simulation__status_8h" startline="44">status_data::simulation_has_to_stop</references>
        <references refid="classclass__f_d_m_r_g_1ac719179f6fa2f471afdba895b0a8026d" compoundref="class__f_d_m_r_g_8h" startline="21">projected_during_saturation</references>
        <references refid="classclass__tic__toc_1afde905f387b29b69afd6940a2a8e2268" compoundref="class__tic__toc_8cpp" startline="43" endline="48">class_tic_toc::toc</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1af6173971aac8a926019069605ffbe012" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool class_fDMRG::sim_on</definition>
        <argsstring>() final</argsstring>
        <name>sim_on</name>
        <reimplements refid="classclass__algorithm__base_1ae08aa4b8e9bbd286c9ec76f15553a037">sim_on</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="24" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="120" bodyend="120"/>
        <references refid="namespacesettings_1_1fdmrg_1a0efc934acf5c066b92b26f6bbf6ec05a" compoundref="nmspc__settings_8h" startline="129">settings::fdmrg::on</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1aac4be7a4fa0dd0dc7a2b15509fb2f485" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>long</type>
        <definition>long class_fDMRG::chi_max</definition>
        <argsstring>() final</argsstring>
        <name>chi_max</name>
        <reimplements refid="classclass__algorithm__base_1a76ef69cebc415e32298214af4cf9003b">chi_max</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="25" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="121" bodyend="121"/>
        <references refid="namespacesettings_1_1fdmrg_1a591fd10b121c47245c0ededecc4fa238" compoundref="nmspc__settings_8h" startline="133">settings::fdmrg::chi_max</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1a8a544d36345f8a75addcb271391b0783" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t class_fDMRG::num_sites</definition>
        <argsstring>() final</argsstring>
        <name>num_sites</name>
        <reimplements refid="classclass__algorithm__base_1a0f6c17cedfeb0baba3df055e87655ea8">num_sites</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="26" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="122" bodyend="122"/>
        <references refid="namespacesettings_1_1fdmrg_1a11e487d6f9af65a1d479a6631578ef6c" compoundref="nmspc__settings_8h" startline="130">settings::fdmrg::num_sites</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1a496158a75304ab88926f7389d3994108" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t class_fDMRG::write_freq</definition>
        <argsstring>() final</argsstring>
        <name>write_freq</name>
        <reimplements refid="classclass__algorithm__base_1a14c1cf2ee0f07ec3d4d3acd55ac213a7">write_freq</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="27" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="123" bodyend="123"/>
        <references refid="namespacesettings_1_1fdmrg_1a4d5eed12a79f9d570135c218942c5401" compoundref="nmspc__settings_8h" startline="137">settings::fdmrg::write_freq</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1acf56cd65b80cad2317d6a6fd13d6cab2" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t class_fDMRG::print_freq</definition>
        <argsstring>() final</argsstring>
        <name>print_freq</name>
        <reimplements refid="classclass__algorithm__base_1a5d6af987e476e9a93a2bab9261ac16bb">print_freq</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="28" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="124" bodyend="124"/>
        <references refid="namespacesettings_1_1fdmrg_1aa13535832cc406268ce9d8cb84cf49ab" compoundref="nmspc__settings_8h" startline="136">settings::fdmrg::print_freq</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1a36bc398c7f73f56386d4d048a5b38df4" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool class_fDMRG::chi_grow</definition>
        <argsstring>() final</argsstring>
        <name>chi_grow</name>
        <reimplements refid="classclass__algorithm__base_1a77520add9ead85c0b5a98cdbb46edaf6">chi_grow</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="29" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="125" bodyend="125"/>
        <references refid="namespacesettings_1_1fdmrg_1a1ec29f5e29fb084816e19eb3200232af" compoundref="nmspc__settings_8h" startline="134">settings::fdmrg::chi_grow</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1a3b463724a342287d1cb16410e33b5185" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>long</type>
        <definition>long class_fDMRG::chi_init</definition>
        <argsstring>() final</argsstring>
        <name>chi_init</name>
        <reimplements refid="classclass__algorithm__base_1a43b93d906ce8263b7436c4758231ba5e">chi_init</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="30" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="126" bodyend="126"/>
        <references refid="namespacesettings_1_1fdmrg_1ac8e8a18f4c1106502d4542691c0738b2" compoundref="nmspc__settings_8h" startline="135">settings::fdmrg::chi_init</references>
      </memberdef>
      <memberdef kind="function" id="classclass__f_d_m_r_g_1a1494c07358752254c4dd739c160698f4" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool class_fDMRG::store_wave_function</definition>
        <argsstring>() final</argsstring>
        <name>store_wave_function</name>
        <reimplements refid="classclass__algorithm__finite_1ab10abda24e7005f8b35a2d05e9cc7921">store_wave_function</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="31" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.cpp" bodystart="127" bodyend="127"/>
        <references refid="namespacesettings_1_1fdmrg_1a2c6ec0c3892141068a29cc36c34b9398" compoundref="nmspc__settings_8h" startline="138">settings::fdmrg::store_wavefn</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="130">
        <label>class_fDMRG</label>
        <link refid="classclass__f_d_m_r_g"/>
        <childnode refid="131" relation="public-inheritance">
        </childnode>
      </node>
      <node id="131">
        <label>class_algorithm_finite</label>
        <link refid="classclass__algorithm__finite"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="132">
        <label>class_algorithm_base</label>
        <link refid="classclass__algorithm__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="150">
        <label>std::unique_ptr&lt; class_model_base &gt;</label>
        <childnode refid="151" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="160">
        <label>std::vector&lt; std::list&lt; double &gt; &gt;</label>
        <childnode refid="140" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="155">
        <label>class_environment_base</label>
        <link refid="classclass__environment__base"/>
        <childnode refid="136" relation="usage">
          <edgelabel>side</edgelabel>
        </childnode>
      </node>
      <node id="159">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="133">
        <label>class_fDMRG</label>
        <link refid="classclass__f_d_m_r_g"/>
        <childnode refid="134" relation="public-inheritance">
        </childnode>
      </node>
      <node id="140">
        <label>std::list&lt; double &gt;</label>
      </node>
      <node id="151">
        <label>class_model_base</label>
        <link refid="classclass__model__base"/>
      </node>
      <node id="145">
        <label>std::list&lt; class_mps_site &gt;</label>
        <childnode refid="146" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="153">
        <label>std::list&lt; class_environment_var &gt;</label>
        <childnode refid="154" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="154">
        <label>class_environment_var</label>
        <link refid="classclass__environment__var"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
      </node>
      <node id="148">
        <label>std::list&lt; size_t &gt;</label>
      </node>
      <node id="137">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="142">
        <label>std::list&lt; int &gt;</label>
      </node>
      <node id="147">
        <label>class_state_finite::Cache</label>
        <link refid="structclass__state__finite_1_1_cache"/>
      </node>
      <node id="157">
        <label>std::list&lt; class_environment &gt;</label>
        <childnode refid="158" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="146">
        <label>class_mps_site</label>
        <link refid="classclass__mps__site"/>
      </node>
      <node id="158">
        <label>class_environment</label>
        <link refid="classclass__environment"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>class_state_finite</label>
        <link refid="classclass__state__finite"/>
        <childnode refid="145" relation="usage">
          <edgelabel>MPS_L</edgelabel>
          <edgelabel>MPS_R</edgelabel>
        </childnode>
        <childnode refid="147" relation="usage">
          <edgelabel>cache</edgelabel>
        </childnode>
        <childnode refid="148" relation="usage">
          <edgelabel>active_sites</edgelabel>
        </childnode>
        <childnode refid="149" relation="usage">
          <edgelabel>MPO_L</edgelabel>
          <edgelabel>MPO_R</edgelabel>
        </childnode>
        <childnode refid="152" relation="usage">
          <edgelabel>measurements</edgelabel>
        </childnode>
        <childnode refid="153" relation="usage">
          <edgelabel>ENV2_L</edgelabel>
          <edgelabel>ENV2_R</edgelabel>
        </childnode>
        <childnode refid="156" relation="usage">
          <edgelabel>site_update_tags</edgelabel>
        </childnode>
        <childnode refid="157" relation="usage">
          <edgelabel>ENV_L</edgelabel>
          <edgelabel>ENV_R</edgelabel>
        </childnode>
        <childnode refid="159" relation="usage">
          <edgelabel>truncation_error</edgelabel>
        </childnode>
      </node>
      <node id="139">
        <label>status_data</label>
        <link refid="structstatus__data"/>
      </node>
      <node id="152">
        <label>class_state_finite::Measurements</label>
        <link refid="structclass__state__finite_1_1_measurements"/>
      </node>
      <node id="134">
        <label>class_algorithm_finite</label>
        <link refid="classclass__algorithm__finite"/>
        <childnode refid="135" relation="public-inheritance">
        </childnode>
        <childnode refid="140" relation="usage">
          <edgelabel>V_mpo_vec</edgelabel>
          <edgelabel>S_slopes</edgelabel>
          <edgelabel>V_mpo_slopes</edgelabel>
        </childnode>
        <childnode refid="141" relation="usage">
          <edgelabel>X_mat</edgelabel>
        </childnode>
        <childnode refid="142" relation="usage">
          <edgelabel>X_mpo_vec</edgelabel>
        </childnode>
        <childnode refid="143" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="160" relation="usage">
          <edgelabel>S_mat</edgelabel>
        </childnode>
      </node>
      <node id="138">
        <label>class_simulation_status</label>
        <link refid="classclass__simulation__status"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="135">
        <label>class_algorithm_base</label>
        <link refid="classclass__algorithm__base"/>
        <childnode refid="136" relation="usage">
          <edgelabel>sim_name</edgelabel>
        </childnode>
        <childnode refid="138" relation="usage">
          <edgelabel>sim_status</edgelabel>
        </childnode>
      </node>
      <node id="143">
        <label>std::unique_ptr&lt; class_state_finite &gt;</label>
        <childnode refid="144" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="156">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="149">
        <label>std::list&lt; std::unique_ptr&lt; class_model_base &gt; &gt;</label>
        <childnode refid="150" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="136">
        <label>std::string</label>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>std::vector&lt; std::list&lt; int &gt; &gt;</label>
        <childnode refid="142" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" line="15" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/algorithms/class_fDMRG.h" bodystart="15" bodyend="33"/>
    <listofallmembers>
      <member refid="classclass__f_d_m_r_g_1aac645a52a00193e6a8d15543117e455f" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>check_convergence</name></member>
      <member refid="classclass__algorithm__finite_1a8fe25d66a89a7ca074476f410c62524c" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>check_convergence_entg_entropy</name></member>
      <member refid="classclass__algorithm__finite_1adb9ddcca8ca3a07a687c1abd370dec4a" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>check_convergence_variance</name></member>
      <member refid="classclass__algorithm__base_1aa374f4bdc5b96a72e96688ac874bfe62" prot="protected" virt="non-virtual"><scope>class_fDMRG</scope><name>check_saturation_using_slope</name></member>
      <member refid="classclass__algorithm__base_1a6c3102d68422740613902d7d16604f63" prot="protected" virt="non-virtual"><scope>class_fDMRG</scope><name>check_saturation_using_slope2</name></member>
      <member refid="classclass__f_d_m_r_g_1a36bc398c7f73f56386d4d048a5b38df4" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>chi_grow</name></member>
      <member refid="classclass__f_d_m_r_g_1a3b463724a342287d1cb16410e33b5185" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>chi_init</name></member>
      <member refid="classclass__f_d_m_r_g_1aac4be7a4fa0dd0dc7a2b15509fb2f485" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>chi_max</name></member>
      <member refid="classclass__algorithm__base_1a35e482872c1dec9372c74c40a82208d0" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>class_algorithm_base</name></member>
      <member refid="classclass__algorithm__base_1a790233233d4352402e651a312e7ae76a" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>class_algorithm_base</name></member>
      <member refid="classclass__algorithm__finite_1a400c889ba19892c299f1ae049d3a07bb" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>class_algorithm_finite</name></member>
      <member refid="classclass__f_d_m_r_g_1a8ad33fc90e97bfd0e1bd81ade8d7ef02" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>class_fDMRG</name></member>
      <member refid="classclass__algorithm__finite_1a453b5c2fb7cbbce1e3572259bc81c7d8" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>clear_saturation_status</name></member>
      <member refid="classclass__algorithm__finite_1a6383a637d4b518f378b1d666d50c6206" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>copy_from_tmp</name></member>
      <member refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>h5pp_file</name></member>
      <member refid="classclass__algorithm__finite_1a09b6d44725ae3d32093c37580b59626d" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>h5tbuf_measurements</name></member>
      <member refid="classclass__algorithm__base_1ab0712c1f7e09a4ffcac2d8df99bf4b6b" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>h5tbuf_profiling</name></member>
      <member refid="classclass__algorithm__base_1a068eedc09bbb4355bb691d2aeb48d48d" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>h5tbuf_sim_status</name></member>
      <member refid="classclass__algorithm__finite_1a72b4aa7bd0e8d16a2a98a13d8770dd58" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>has_projected</name></member>
      <member refid="classclass__algorithm__base_1a7d8b31e09c367e1ce51d4586a8adf906" prot="protected" virt="non-virtual"><scope>class_fDMRG</scope><name>log</name></member>
      <member refid="classclass__algorithm__finite_1a8908aad72db98c88a37d4d0696c1a330" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>max_saturation_iters</name></member>
      <member refid="classclass__algorithm__finite_1a5f272b18fd4eb5fee0f35f231b2dfb89" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>max_stuck_iters</name></member>
      <member refid="classclass__algorithm__finite_1a72360228d7c045aee8c2ae3b7c7a8a4f" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>min_saturation_iters</name></member>
      <member refid="classclass__algorithm__finite_1ad171a763b608bcfe1054ce56bf5ea7d2" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>min_stuck_iters</name></member>
      <member refid="classclass__algorithm__finite_1a8dcbb27105c5e5623050c545d8b5f3cf" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>move_center_point</name></member>
      <member refid="classclass__f_d_m_r_g_1a8a544d36345f8a75addcb271391b0783" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>num_sites</name></member>
      <member refid="classclass__f_d_m_r_g_1acf56cd65b80cad2317d6a6fd13d6cab2" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>print_freq</name></member>
      <member refid="classclass__algorithm__base_1ad0c595a0722179ffa0a478052e9f7c39" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>print_profiling</name></member>
      <member refid="classclass__algorithm__finite_1a31460024ef07df92bc57719b2234a725" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>print_status_full</name></member>
      <member refid="classclass__algorithm__finite_1ac996a89d34ba9c9323e04c8e1fad54e2" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>print_status_update</name></member>
      <member refid="classclass__algorithm__base_1ada828b1dc778d6c547a8c03875a26b9a" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>process_memory_in_mb</name></member>
      <member refid="classclass__f_d_m_r_g_1ac719179f6fa2f471afdba895b0a8026d" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>projected_during_saturation</name></member>
      <member refid="classclass__algorithm__base_1aeec0f1d83000ef7ba92bbcdd74bdcabb" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>quietNaN</name></member>
      <member refid="classclass__algorithm__finite_1a52ad711d5cc01fa67e7db4190d748ffb" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>reset_to_random_state</name></member>
      <member refid="classclass__algorithm__finite_1a9bc7b209ddc5b1c246038d33ca327640" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>run</name></member>
      <member refid="classclass__algorithm__finite_1a37993b5dd8c0999078d23f699d533efc" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>run_postprocessing</name></member>
      <member refid="classclass__algorithm__finite_1aef508b162680eadb951cf3811642fce9" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>run_preprocessing</name></member>
      <member refid="classclass__f_d_m_r_g_1a08fe1cb78f4ba42593dac8d1ca7c73c9" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>run_simulation</name></member>
      <member refid="classclass__algorithm__finite_1a713af9a4ad66b29338ededfb17279774" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>S_mat</name></member>
      <member refid="classclass__algorithm__finite_1ad59eb289e48ceb53003be230375f914c" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>S_slopes</name></member>
      <member refid="classclass__algorithm__base_1ac2a5042c5337ef3b8c6d29a115e25843" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>Scalar</name></member>
      <member refid="classclass__algorithm__base_1a64e1bbd06c9d036b60d1cd9536e8f0c8" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>sim_name</name></member>
      <member refid="classclass__f_d_m_r_g_1af6173971aac8a926019069605ffbe012" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>sim_on</name></member>
      <member refid="classclass__algorithm__base_1a0dfe4e91492006565c1129e45ac185b8" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>sim_status</name></member>
      <member refid="classclass__algorithm__base_1a7ee19b5bbea7bb4dca809914690039a8" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>sim_type</name></member>
      <member refid="classclass__algorithm__finite_1a54acaecd0069e1c586e060cdfe41c67a" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>single_DMRG_step</name></member>
      <member refid="classclass__algorithm__finite_1ac14b36df7eb86c0a8ccb05dec4c0eec9" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>state</name></member>
      <member refid="classclass__algorithm__base_1af36e30da0595f116629422821e1e4ced" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>stop_reason</name></member>
      <member refid="classclass__algorithm__base_1a9bef39d158c6e6d1eed969116c7345b4" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>StopReason</name></member>
      <member refid="classclass__f_d_m_r_g_1a1494c07358752254c4dd739c160698f4" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>store_wave_function</name></member>
      <member refid="classclass__algorithm__finite_1af95402763a137d45e2b25ceecc9252af" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>update_bond_dimension_limit</name></member>
      <member refid="classclass__algorithm__finite_1a8a2b8f64844a71351f9a9bd736053e20" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>V_mpo_slopes</name></member>
      <member refid="classclass__algorithm__finite_1a924c4a4f29db461ca496470cc93fc157" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>V_mpo_vec</name></member>
      <member refid="classclass__f_d_m_r_g_1a496158a75304ab88926f7389d3994108" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>write_freq</name></member>
      <member refid="classclass__algorithm__finite_1aa96d6f71f47d67fe96153659fc98b677" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>write_measurements</name></member>
      <member refid="classclass__algorithm__finite_1ab5734a8b4a609be5f402b87bae2c4f64" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>write_profiling</name></member>
      <member refid="classclass__algorithm__finite_1a00b510706001a64633d113f6ec212e6a" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>write_projection</name></member>
      <member refid="classclass__algorithm__finite_1a586a8ac4f8036c870b826485a42bd6d8" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>write_sim_status</name></member>
      <member refid="classclass__algorithm__finite_1a56fa115bbb861cb586ba78ef0624978b" prot="public" virt="virtual"><scope>class_fDMRG</scope><name>write_state</name></member>
      <member refid="classclass__algorithm__finite_1a3907217095a878d781f55a6771b9c0ca" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>X_mat</name></member>
      <member refid="classclass__algorithm__finite_1aaf142efbc8a5964f4741510ab7028c91" prot="public" virt="non-virtual"><scope>class_fDMRG</scope><name>X_mpo_vec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
