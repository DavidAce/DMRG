<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacetools_1_1common_1_1views" kind="namespace" language="C++">
    <compoundname>tools::common::views</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; tools::common::views::theta</definition>
        <argsstring></argsstring>
        <name>theta</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="22" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; tools::common::views::theta_evn_normalized</definition>
        <argsstring></argsstring>
        <name>theta_evn_normalized</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="23" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; tools::common::views::theta_odd_normalized</definition>
        <argsstring></argsstring>
        <name>theta_odd_normalized</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="24" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a05f70fcf569c1c1f7c4f6d573cd8e631" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; tools::common::views::theta_sw</definition>
        <argsstring></argsstring>
        <name>theta_sw</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="25" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a9a9182bb578c2adf5a152015c35d0232" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 3 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 3 &gt; tools::common::views::LBGA</definition>
        <argsstring></argsstring>
        <name>LBGA</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,3&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="26" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1ab94641d1eeeaca3ee2c0b62d40c67585" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 3 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 3 &gt; tools::common::views::LAGB</definition>
        <argsstring></argsstring>
        <name>LAGB</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,3&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="27" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 2 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 2 &gt; tools::common::views::l_evn</definition>
        <argsstring></argsstring>
        <name>l_evn</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="28" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 2 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 2 &gt; tools::common::views::r_evn</definition>
        <argsstring></argsstring>
        <name>r_evn</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="29" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 2 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 2 &gt; tools::common::views::l_odd</definition>
        <argsstring></argsstring>
        <name>l_odd</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="30" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 2 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 2 &gt; tools::common::views::r_odd</definition>
        <argsstring></argsstring>
        <name>r_odd</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="31" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a37826c75be840ac1b3e5cc9bcc96df4c" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; tools::common::views::transfer_matrix_LBGA</definition>
        <argsstring></argsstring>
        <name>transfer_matrix_LBGA</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="32" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a4737ab9e1c7be58e16ef3ebf0c4dedbd" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; tools::common::views::transfer_matrix_LAGB</definition>
        <argsstring></argsstring>
        <name>transfer_matrix_LAGB</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="33" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a8ca6ab75ea4a9e71ef45a0a0e675f185" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; tools::common::views::transfer_matrix_evn</definition>
        <argsstring></argsstring>
        <name>transfer_matrix_evn</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="34" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a2ef7dec8a4db01e3667a71942c40feb5" prot="public" static="no" mutable="no">
        <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; tools::common::views::transfer_matrix_odd</definition>
        <argsstring></argsstring>
        <name>transfer_matrix_odd</name>
        <initializer>= Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt; ()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="35" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tools::common::views::components_computed</definition>
        <argsstring></argsstring>
        <name>components_computed</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="36" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a9dd4897dd844609d0d574825a3988592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::common::views::compute_mps_components</definition>
        <argsstring>(const class_infinite_state &amp;state)</argsstring>
        <name>compute_mps_components</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="280" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="49" bodyend="109"/>
        <references refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" compoundref="views_8cpp" startline="36">components_computed</references>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" compoundref="views_8cpp" startline="22">theta</references>
        <references refid="namespacetools_1_1common_1_1views_1a60dea76b09d3d21e908e3fd3bbacd844" compoundref="views_8cpp" startline="114" endline="127">get_theta</references>
        <references refid="namespacetools_1_1common_1_1views_1a5e45621e3e7cf436074f66c9c7cbd833" compoundref="views_8cpp" startline="259" endline="262">get_transfer_matrix_theta_evn</references>
        <references refid="namespacetools_1_1common_1_1views_1a860f18b0a6b66dfdb3604b037dc802d3" compoundref="views_8cpp" startline="265" endline="267">get_transfer_matrix_theta_odd</references>
        <references refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" compoundref="views_8cpp" startline="29">r_evn</references>
        <references refid="namespace_textra_1a183aedbd02b4a84ab362812c8ddf3748" compoundref="nmspc__tensor__extra_8h" startline="200" endline="202">Textra::Matrix_to_Tensor2</references>
        <references refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" compoundref="views_8cpp" startline="28">l_evn</references>
        <references refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" compoundref="views_8cpp" startline="31">r_odd</references>
        <references refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" compoundref="views_8cpp" startline="30">l_odd</references>
        <references refid="namespacetools_1_1common_1_1views_1a05f70fcf569c1c1f7c4f6d573cd8e631" compoundref="views_8cpp" startline="25">theta_sw</references>
        <references refid="namespacetools_1_1common_1_1views_1aff8b9eb9629f764155555246e4dc38af" compoundref="views_8cpp" startline="150" endline="166">get_theta_swapped</references>
        <references refid="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" compoundref="views_8cpp" startline="23">theta_evn_normalized</references>
        <references refid="namespacetools_1_1common_1_1views_1a717b43409a314727c05f96b506a86d37" compoundref="views_8cpp" startline="173" endline="189">get_theta_evn</references>
        <references refid="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" compoundref="views_8cpp" startline="24">theta_odd_normalized</references>
        <references refid="namespacetools_1_1common_1_1views_1a522b2175b2226689e89d6c0162dcfae5" compoundref="views_8cpp" startline="192" endline="207">get_theta_odd</references>
        <references refid="namespacetools_1_1common_1_1views_1a9a9182bb578c2adf5a152015c35d0232" compoundref="views_8cpp" startline="26">LBGA</references>
        <references refid="namespacetools_1_1common_1_1views_1ab94641d1eeeaca3ee2c0b62d40c67585" compoundref="views_8cpp" startline="27">LAGB</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="namespacetools_1_1common_1_1views_1a8ca6ab75ea4a9e71ef45a0a0e675f185" compoundref="views_8cpp" startline="34">transfer_matrix_evn</references>
        <references refid="namespacetools_1_1common_1_1views_1a2ef7dec8a4db01e3667a71942c40feb5" compoundref="views_8cpp" startline="35">transfer_matrix_odd</references>
        <references refid="namespacetools_1_1common_1_1views_1a4737ab9e1c7be58e16ef3ebf0c4dedbd" compoundref="views_8cpp" startline="33">transfer_matrix_LAGB</references>
        <references refid="namespacetools_1_1common_1_1views_1a37826c75be840ac1b3e5cc9bcc96df4c" compoundref="views_8cpp" startline="32">transfer_matrix_LBGA</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a60dea76b09d3d21e908e3fd3bbacd844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta</definition>
        <argsstring>(const class_finite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>.</para><para>Returns a two-site MPS <verbatim>     1--[ LB ]--[ GA ]--[ LC ]-- [ GB ] -- [ LB ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="282" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="114" bodyend="127"/>
        <references refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" compoundref="class__finite__state_8h" startline="49">class_finite_state::MPS_L</references>
        <references refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" compoundref="nmspc__tensor__extra_8h" startline="121" endline="123">Textra::asDiagonal</references>
        <references refid="classclass__finite__state_1a781bc0bab32617bf299a11124ab136f6" compoundref="class__finite__state_8h" startline="51">class_finite_state::MPS_C</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" compoundref="class__finite__state_8h" startline="50">class_finite_state::MPS_R</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a2cacf4169cbfa730d77e1750b723e2a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>.</para><para>Returns a two-site MPS <verbatim>     1--[ LB ]--[ GA ]--[ LA ]-- [ GB ] -- [ LB ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="284" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="132" bodyend="145"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1aff8b9eb9629f764155555246e4dc38af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta_swapped</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta_swapped</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>, with A and B swapped.</para><para>Returns a two-site MPS with A and B swapped <verbatim>     1--[ LA ]--[ GB ]--[ LB ]-- [ GA ] -- [ LA ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="285" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="150" bodyend="166"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a717b43409a314727c05f96b506a86d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta_evn</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta_evn</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>.</para><para>Returns a right normalized two-site MPS <verbatim>     1--[ LB ]--[ GA ]-- [ LC ] -- [ GB ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="286" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="173" bodyend="189"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a522b2175b2226689e89d6c0162dcfae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta_odd</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta_odd</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>, with A and B swapped.</para><para>Returns a two-site MPS with A and B swapped <verbatim>     1--[ LC ]--[ GB ]-- [ LB ] -- [ GA ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="287" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="192" bodyend="207"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a4664633e874ca86e7726a4527aa87bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_zero</definition>
        <argsstring>(const class_infinite_state &amp;state)</argsstring>
        <name>get_transfer_matrix_zero</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="288" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="211" bodyend="217"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" compoundref="nmspc__tensor__extra_8h" startline="121" endline="123">Textra::asDiagonal</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1acaeed868ea545d685eba6d66a907c62a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_LBGA</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_LBGA</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="289" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="222" bodyend="226"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a3cb8fda91cc03f801258377960ffe008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_GALC</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_GALC</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="290" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="230" bodyend="237"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1ae8da08d904d6866f2b22947da8c2ee3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_GBLB</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_GBLB</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="291" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="240" bodyend="244"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1ab21b6bd5aca956607e5cc4a3c7234d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_LCGB</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_LCGB</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="292" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="248" bodyend="255"/>
        <references refid="classclass__infinite__state_1a70ea9e6e868a7e78d5505714053ac3a4" compoundref="class__infinite__state_8h" startline="48">class_infinite_state::MPS</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a5e45621e3e7cf436074f66c9c7cbd833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_theta_evn</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_theta_evn</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="293" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="259" bodyend="262"/>
        <references refid="namespacetools_1_1common_1_1views_1a717b43409a314727c05f96b506a86d37" compoundref="views_8cpp" startline="173" endline="189">get_theta_evn</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a860f18b0a6b66dfdb3604b037dc802d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_theta_odd</definition>
        <argsstring>(const class_infinite_state &amp;state, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_theta_odd</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="294" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="265" bodyend="267"/>
        <references refid="namespacetools_1_1common_1_1views_1a522b2175b2226689e89d6c0162dcfae5" compoundref="views_8cpp" startline="192" endline="207">get_theta_odd</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1ad217cc9cb9cf14b515343298edfc4040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_AB</definition>
        <argsstring>(const class_infinite_state &amp;state, int p)</argsstring>
        <name>get_transfer_matrix_AB</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="295" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="271" bodyend="286"/>
        <references refid="namespacetools_1_1common_1_1views_1a4664633e874ca86e7726a4527aa87bf2" compoundref="views_8cpp" startline="211" endline="217">get_transfer_matrix_zero</references>
        <references refid="namespacemath_1a950ba2c26eab3a176711e689337ad0e9" compoundref="nmspc__math_8h" startline="33" endline="36">math::mod</references>
        <references refid="namespacetools_1_1common_1_1views_1acaeed868ea545d685eba6d66a907c62a" compoundref="views_8cpp" startline="222" endline="226">get_transfer_matrix_LBGA</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="namespacetools_1_1common_1_1views_1ab21b6bd5aca956607e5cc4a3c7234d5b" compoundref="views_8cpp" startline="248" endline="255">get_transfer_matrix_LCGB</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a949c89e88406fed5fcf642d34e1edea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>.</para><para>Returns a two-site MPS <verbatim>     1--[ LB ]--[ GA ]--[ LA ]-- [ GB ] -- [ LB ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="297" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="307" bodyend="320"/>
        <references refid="classclass__mps__2site_1a236a159e7c4145df81e3fe69bb5eb460" compoundref="class__mps__2site_8cpp" startline="36" endline="36">class_mps_2site::A</references>
        <references refid="classclass__mps__2site_1a1b64ec5742bf3af2869296cde77c7b2c" compoundref="class__mps__2site_8cpp" startline="38" endline="38">class_mps_2site::C</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="classclass__mps__2site_1a7157e32ca4d70f34425202eb1cef88b9" compoundref="class__mps__2site_8cpp" startline="37" endline="37">class_mps_2site::B</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a980151161df1dabfaea5da9ae2d71775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta_swapped</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta_swapped</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>, with A and B swapped.</para><para>Returns a two-site MPS with A and B swapped <verbatim>     1--[ LA ]--[ GB ]--[ LB ]-- [ GA ] -- [ LA ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="298" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="325" bodyend="341"/>
        <references refid="classclass__mps__2site_1a1b64ec5742bf3af2869296cde77c7b2c" compoundref="class__mps__2site_8cpp" startline="38" endline="38">class_mps_2site::C</references>
        <references refid="classclass__mps__2site_1a7157e32ca4d70f34425202eb1cef88b9" compoundref="class__mps__2site_8cpp" startline="37" endline="37">class_mps_2site::B</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="classclass__mps__2site_1a08dacecbeb16571b40bc9872df9a729a" compoundref="class__mps__2site_8h" startline="72">class_mps_2site::MPS_A</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a53a47d2730c8b923207c089dec7169d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta_evn</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta_evn</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>.</para><para>Returns a right normalized two-site MPS <verbatim>     1--[ LB ]--[ GA ]-- [ LC ] -- [ GB ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="299" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="348" bodyend="364"/>
        <references refid="classclass__mps__2site_1a236a159e7c4145df81e3fe69bb5eb460" compoundref="class__mps__2site_8cpp" startline="36" endline="36">class_mps_2site::A</references>
        <references refid="classclass__mps__2site_1a1b64ec5742bf3af2869296cde77c7b2c" compoundref="class__mps__2site_8cpp" startline="38" endline="38">class_mps_2site::C</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="classclass__mps__2site_1ae56a70a46b9f19eb9b8cb26cc12dadbd" compoundref="class__mps__2site_8h" startline="73">class_mps_2site::MPS_B</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1ac7e9874ea10f09be64e5b08689714974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_theta_odd</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_theta_odd</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns rank 4 tensor <formula id="35">$\Theta$</formula>, with A and B swapped.</para><para>Returns a two-site MPS with A and B swapped <verbatim>     1--[ LA ]--[ GB ]-- [ LB ] -- [ GA ]--3
                  |                 |
                  0                 2</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="300" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="367" bodyend="382"/>
        <references refid="classclass__mps__2site_1a1b64ec5742bf3af2869296cde77c7b2c" compoundref="class__mps__2site_8cpp" startline="38" endline="38">class_mps_2site::C</references>
        <references refid="classclass__mps__2site_1ae56a70a46b9f19eb9b8cb26cc12dadbd" compoundref="class__mps__2site_8h" startline="73">class_mps_2site::MPS_B</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="classclass__mps__2site_1a236a159e7c4145df81e3fe69bb5eb460" compoundref="class__mps__2site_8cpp" startline="36" endline="36">class_mps_2site::A</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a686b9c2b5b156a674a8b5cf821190e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_zero</definition>
        <argsstring>(const class_mps_2site &amp;MPS)</argsstring>
        <name>get_transfer_matrix_zero</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="301" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="386" bodyend="392"/>
        <references refid="classclass__mps__2site_1a6b006218dc82ec4b80a17903a37cc881" compoundref="class__mps__2site_8h" startline="74">class_mps_2site::LC</references>
        <references refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" compoundref="nmspc__tensor__extra_8h" startline="121" endline="123">Textra::asDiagonal</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1afa5f608610abfca5e155625b329e2280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_LBGA</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_LBGA</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="302" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="397" bodyend="401"/>
        <references refid="classclass__mps__2site_1a236a159e7c4145df81e3fe69bb5eb460" compoundref="class__mps__2site_8cpp" startline="36" endline="36">class_mps_2site::A</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1aea0bac36161f395733301a37dceaaff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_GALC</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_GALC</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="303" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="405" bodyend="412"/>
        <references refid="classclass__mps__2site_1a1b64ec5742bf3af2869296cde77c7b2c" compoundref="class__mps__2site_8cpp" startline="38" endline="38">class_mps_2site::C</references>
        <references refid="classclass__mps__2site_1a08dacecbeb16571b40bc9872df9a729a" compoundref="class__mps__2site_8h" startline="72">class_mps_2site::MPS_A</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1aecbf8dcf0a09ffd63376a47983c48239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_GBLB</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_GBLB</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="304" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="415" bodyend="419"/>
        <references refid="classclass__mps__2site_1a7157e32ca4d70f34425202eb1cef88b9" compoundref="class__mps__2site_8cpp" startline="37" endline="37">class_mps_2site::B</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1acbcc5f21e4c79ed662c4b97a79f96f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_LCGB</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_LCGB</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="305" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="423" bodyend="430"/>
        <references refid="classclass__mps__2site_1a1b64ec5742bf3af2869296cde77c7b2c" compoundref="class__mps__2site_8cpp" startline="38" endline="38">class_mps_2site::C</references>
        <references refid="classclass__mps__2site_1ae56a70a46b9f19eb9b8cb26cc12dadbd" compoundref="class__mps__2site_8h" startline="73">class_mps_2site::MPS_B</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1ad5c40d98b38bb1d5a8fd190b66b83057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_theta_evn</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_theta_evn</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="306" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="434" bodyend="437"/>
        <references refid="namespacetools_1_1common_1_1views_1a717b43409a314727c05f96b506a86d37" compoundref="views_8cpp" startline="173" endline="189">get_theta_evn</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1a8bbfc538041c8bc900ab3813cf6f7259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_theta_odd</definition>
        <argsstring>(const class_mps_2site &amp;MPS, std::complex&lt; double &gt; norm=1.0)</argsstring>
        <name>get_transfer_matrix_theta_odd</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>norm</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="307" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="440" bodyend="442"/>
        <references refid="namespacetools_1_1common_1_1views_1a522b2175b2226689e89d6c0162dcfae5" compoundref="views_8cpp" startline="192" endline="207">get_theta_odd</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1common_1_1views_1ac864d0ae1481abb03065ac6d98cdeace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1common_1a42bb0a9f13f4c00ce0cff48cd503c9c1" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::common::views::get_transfer_matrix_AB</definition>
        <argsstring>(const class_mps_2site &amp;MPS, int p)</argsstring>
        <name>get_transfer_matrix_AB</name>
        <param>
          <type>const <ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref> &amp;</type>
          <declname>MPS</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="308" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" bodystart="446" bodyend="461"/>
        <references refid="namespacetools_1_1common_1_1views_1a4664633e874ca86e7726a4527aa87bf2" compoundref="views_8cpp" startline="211" endline="217">get_transfer_matrix_zero</references>
        <references refid="namespacemath_1a950ba2c26eab3a176711e689337ad0e9" compoundref="nmspc__math_8h" startline="33" endline="36">math::mod</references>
        <references refid="namespacetools_1_1common_1_1views_1acaeed868ea545d685eba6d66a907c62a" compoundref="views_8cpp" startline="222" endline="226">get_transfer_matrix_LBGA</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="namespacetools_1_1common_1_1views_1ab21b6bd5aca956607e5cc4a3c7234d5b" compoundref="views_8cpp" startline="248" endline="255">get_transfer_matrix_LCGB</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/common/views.cpp" line="21" column="1"/>
  </compounddef>
</doxygen>
