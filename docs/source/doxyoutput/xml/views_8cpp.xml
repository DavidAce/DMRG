<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="views_8cpp" kind="file" language="C++">
    <compoundname>views.cpp</compoundname>
    <includes refid="nmspc__tensor__extra_8h" local="no">general/nmspc_tensor_extra.h</includes>
    <includes refid="eig_8h" local="no">math/eig.h</includes>
    <includes refid="num_8h" local="no">math/num.h</includes>
    <includes refid="class__mps__site_8h" local="no">tensors/state/class_mps_site.h</includes>
    <includes refid="class__state__finite_8h" local="no">tensors/state/class_state_finite.h</includes>
    <includes refid="class__state__infinite_8h" local="no">tensors/state/class_state_infinite.h</includes>
    <includes refid="views_8h" local="no">tools/common/views.h</includes>
    <incdepgraph>
      <node id="36">
        <label>measure/state_measure_infinite.h</label>
        <link refid="state__measure__infinite_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>measure/state_measure_finite.h</label>
        <link refid="state__measure__finite_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>config/nmspc_settings.h</label>
        <link refid="nmspc__settings_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>math/eig.h</label>
        <link refid="eig_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>iterator</label>
      </node>
      <node id="14">
        <label>io/spdlog.h</label>
        <link refid="spdlog_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>class_mps_stash.h</label>
        <link refid="class__mps__stash_8h"/>
      </node>
      <node id="22">
        <label>cmath</label>
      </node>
      <node id="34">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="12">
        <label>tools/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>stdexcept</label>
      </node>
      <node id="24">
        <label>numeric</label>
      </node>
      <node id="13">
        <label>io/fmt.h</label>
        <link refid="io_2fmt_8h"/>
      </node>
      <node id="21">
        <label>math/num.h</label>
        <link refid="num_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/tools/common/views.cpp</label>
        <link refid="views_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="37">
        <label>math/svd/settings.h</label>
        <link refid="svd_2settings_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>eig/solver.h</label>
        <link refid="solver_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>fmt/core.h</label>
      </node>
      <node id="20">
        <label>eig/view.h</label>
        <link refid="view_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>solution.h</label>
        <link refid="solution_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string_view</label>
      </node>
      <node id="17">
        <label>optional</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="4">
        <label>array</label>
      </node>
      <node id="2">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>eig/enums.h</label>
        <link refid="math_2eig_2enums_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>general/nmspc_sfinae.h</label>
        <link refid="nmspc__sfinae_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>settings.h</label>
        <link refid="eig_2settings_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
      <node id="25">
        <label>tensors/state/class_mps_site.h</label>
        <link refid="class__mps__site_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>tools/common/views.h</label>
        <link refid="views_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>complex</label>
      </node>
      <node id="27">
        <label>tensors/state/class_state_finite.h</label>
        <link refid="class__state__finite_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="28">
        <label>config/enums.h</label>
        <link refid="config_2enums_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>typeindex</label>
      </node>
      <node id="32">
        <label>tensors/state/class_state_infinite.h</label>
        <link refid="class__state__infinite_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetools">tools</innernamespace>
    <innernamespace refid="namespacetools_1_1common">tools::common</innernamespace>
    <innernamespace refid="namespacetools_1_1common_1_1views">tools::common::views</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="views_8cpp_1a50c97ac9f934d7db2ce8d888973c9079" prot="public" static="no">
        <type><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">tools::common::views::Scalar</ref></type>
        <definition>using Scalar =  tools::common::views::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/common/views.cpp" line="18" column="1" bodyfile="/home/david/GitProjects/DMRG++/source/tools/common/views.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="views_8cpp_1a7ed1879e1bcaf12c8126138a2424a294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceeig_1ac63fbaf41e008da06f0cdf1f5a184f51" kindref="member">eig::Side</ref></type>
            <declname>side</declname>
            <defname>side</defname>
          </param>
        </templateparamlist>
        <type>std::pair&lt; <ref refid="namespace_eigen_1a5b736602a2b5e99a9c7244c5b2cf071e" kindref="member">Eigen::VectorXcd</ref>, <ref refid="class__algorithm__base_8cpp_1a528e55cc6b435f7efe6750d6faa36cd6" kindref="member">Scalar</ref> &gt;</type>
        <definition>std::pair&lt;Eigen::VectorXcd, Scalar&gt; dominant_eig</definition>
        <argsstring>(const Eigen::Tensor&lt; Scalar, 2 &gt; &amp;transfer_mat, int L, int ncv)</argsstring>
        <name>dominant_eig</name>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="class__algorithm__base_8cpp_1a528e55cc6b435f7efe6750d6faa36cd6" kindref="member">Scalar</ref>, 2 &gt; &amp;</type>
          <declname>transfer_mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/common/views.cpp" line="38" column="11" bodyfile="/home/david/GitProjects/DMRG++/source/tools/common/views.cpp" bodystart="38" bodyend="44"/>
        <references refid="classeig_1_1solver_1a5ba7331e3b316fff73eeeb0e9eaaf9c1" compoundref="solver_8cpp" startline="150" endline="165">eig::solver::eigs</references>
        <references refid="namespaceeig_1a823d2359cc1ce2ae82d999311922051cadfd5b430bc4db2c2836d0227ad9ac0c4">eig::LM</references>
        <references refid="namespaceeig_1a7d7073ae885702b621886a0292962519a255f1870130d89b4635722daa50f3357">eig::NSYM</references>
        <references refid="namespaceeig_1a9ee5a51536cdc5d756ad27cd7344348fa88559a0cfd8250c9d65970cc145c92d4">eig::OFF</references>
        <references refid="namespaceeig_1af7b52b6fd4ed7da235831a1a6a529042a90651ebea9a35ec4e018c8157492e17c">eig::ON</references>
        <references refid="classeig_1_1solver_1adb6f937de4a4ca5b691c811604d34a51" compoundref="solver_8h" startline="10">eig::solver::result</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-01-31.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2018-07-06.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__tensor__extra_8h" kindref="compound">general/nmspc_tensor_extra.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="eig_8h" kindref="compound">math/eig.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="num_8h" kindref="compound">math/num.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__mps__site_8h" kindref="compound">tensors/state/class_mps_site.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__finite_8h" kindref="compound">tensors/state/class_state_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__infinite_8h" kindref="compound">tensors/state/class_state_infinite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="views_8h" kindref="compound">tools/common/views.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>namespace<sp/>Textra;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="views_8cpp_1a50c97ac9f934d7db2ce8d888973c9079" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class__algorithm__base_8cpp_1a528e55cc6b435f7efe6750d6faa36cd6" kindref="member">Scalar</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">tools::common::views::Scalar</ref>;</highlight></codeline>
<codeline lineno="19" refid="namespacetools_1_1common_1_1views" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views" kindref="compound">tools::common::views</ref><sp/>{</highlight></codeline>
<codeline lineno="20" refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" kindref="member">theta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;();</highlight></codeline>
<codeline lineno="21" refid="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" kindref="member">theta_evn_normalized</ref><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;();</highlight></codeline>
<codeline lineno="22" refid="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" kindref="member">theta_odd_normalized</ref><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;();</highlight></codeline>
<codeline lineno="23" refid="namespacetools_1_1common_1_1views_1a05f70fcf569c1c1f7c4f6d573cd8e631" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a05f70fcf569c1c1f7c4f6d573cd8e631" kindref="member">theta_sw</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;();</highlight></codeline>
<codeline lineno="24" refid="namespacetools_1_1common_1_1views_1a36bfe7677c9483dec42ed1514ccae553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>3&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a36bfe7677c9483dec42ed1514ccae553" kindref="member">LAGA</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>3&gt;();</highlight></codeline>
<codeline lineno="25" refid="namespacetools_1_1common_1_1views_1a5fcc6c645e5864269622a52e44c7a467" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>3&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a5fcc6c645e5864269622a52e44c7a467" kindref="member">LCGB</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>3&gt;();</highlight></codeline>
<codeline lineno="26" refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" kindref="member">l_evn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;();</highlight></codeline>
<codeline lineno="27" refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" kindref="member">r_evn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;();</highlight></codeline>
<codeline lineno="28" refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" kindref="member">l_odd</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;();</highlight></codeline>
<codeline lineno="29" refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" kindref="member">r_odd</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;();</highlight></codeline>
<codeline lineno="30" refid="namespacetools_1_1common_1_1views_1a63bd20afdfdcf6aa73749384bd88bd5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a63bd20afdfdcf6aa73749384bd88bd5b" kindref="member">transfer_matrix_LAGA</ref><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;();</highlight></codeline>
<codeline lineno="31" refid="namespacetools_1_1common_1_1views_1a5f3754c29ed7877a4a929274303cd5d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a5f3754c29ed7877a4a929274303cd5d9" kindref="member">transfer_matrix_LCGB</ref><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;();</highlight></codeline>
<codeline lineno="32" refid="namespacetools_1_1common_1_1views_1a8ca6ab75ea4a9e71ef45a0a0e675f185" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a8ca6ab75ea4a9e71ef45a0a0e675f185" kindref="member">transfer_matrix_evn</ref><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;();</highlight></codeline>
<codeline lineno="33" refid="namespacetools_1_1common_1_1views_1a2ef7dec8a4db01e3667a71942c40feb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a2ef7dec8a4db01e3667a71942c40feb5" kindref="member">transfer_matrix_odd</ref><sp/><sp/>=<sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;();</highlight></codeline>
<codeline lineno="34" refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" kindref="member">components_computed</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;eig::S</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e<sp/>s</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e&gt;</highlight></codeline>
<codeline lineno="38" refid="views_8cpp_1a7ed1879e1bcaf12c8126138a2424a294" refkind="member"><highlight class="normal">std::pair&lt;Eigen::VectorXcd,<sp/>Scalar&gt;<sp/><ref refid="views_8cpp_1a7ed1879e1bcaf12c8126138a2424a294" kindref="member">dominant_eig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/>&amp;transfer_mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncv)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeig_1_1solver" kindref="compound">eig::solver</ref><sp/>solver;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>solver.<ref refid="classeig_1_1solver_1a5ba7331e3b316fff73eeeb0e9eaaf9c1" kindref="member">eigs</ref>(transfer_mat.data(),<sp/>L,<sp/>1,<sp/>ncv,<sp/><ref refid="namespaceeig_1a823d2359cc1ce2ae82d999311922051cadfd5b430bc4db2c2836d0227ad9ac0c4" kindref="member">eig::Ritz::LM</ref>,<sp/><ref refid="namespaceeig_1a7d7073ae885702b621886a0292962519a255f1870130d89b4635722daa50f3357" kindref="member">eig::Form::NSYM</ref>,<sp/>side,<sp/>std::nullopt,<sp/><ref refid="namespaceeig_1a9ee5a51536cdc5d756ad27cd7344348fa88559a0cfd8250c9d65970cc145c92d4" kindref="member">eig::Shinv::OFF</ref>,<sp/><ref refid="namespaceeig_1af11f26ac48c727387232e96f0659a8e4a88559a0cfd8250c9d65970cc145c92d4" kindref="member">eig::Vecs::OFF</ref>,<sp/><ref refid="namespaceeig_1af7b52b6fd4ed7da235831a1a6a529042a90651ebea9a35ec4e018c8157492e17c" kindref="member">eig::Dephase::ON</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eigvec<sp/>=<sp/>eig::view::get_eigvec&lt;Scalar&gt;(solver.<ref refid="classeig_1_1solver_1adb6f937de4a4ca5b691c811604d34a51" kindref="member">result</ref>,<sp/>0,<sp/>side).normalized();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eigval<sp/>=<sp/>eig::view::get_eigval&lt;Scalar&gt;(solver.<ref refid="classeig_1_1solver_1adb6f937de4a4ca5b691c811604d34a51" kindref="member">result</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(eigvec,<sp/>eigval);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespacetools_1_1common_1_1views_1a055661bd0c1b24862a0d47e10a1d388e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1a055661bd0c1b24862a0d47e10a1d388e" kindref="member">tools::common::views::compute_mps_components</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" kindref="member">components_computed</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>even<sp/>thetas<sp/>we<sp/>have<sp/><sp/>chiA<sp/>=<sp/>chiB<sp/>on<sp/>the<sp/>outer<sp/>bond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>odd<sp/>thetas<sp/>we<sp/>have<sp/>chiC<sp/>on<sp/>the<sp/>outer<sp/>bond.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>chiA2<sp/>=<sp/>(int)(state.MPS-&gt;chiA()*state.MPS-&gt;chiA());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chiB2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(state.<ref refid="classclass__state__infinite_1a6fe9a16f8940af3014097cc5795a56eb" kindref="member">chiB</ref>()<sp/>*<sp/>state.<ref refid="classclass__state__infinite_1a6fe9a16f8940af3014097cc5795a56eb" kindref="member">chiB</ref>());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chiC2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(state.<ref refid="classclass__state__infinite_1a9df057bd8817774da31206ab823562a1" kindref="member">chiC</ref>()<sp/>*<sp/>state.<ref refid="classclass__state__infinite_1a9df057bd8817774da31206ab823562a1" kindref="member">chiC</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" kindref="member">theta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a160fdb9681661126ea341c2b7fcc37d4" kindref="member">get_theta</ref>(state);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/>theta_evn_transfer_mat<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a5db009920b3ce3e1651f1cc62dc78a59" kindref="member">get_transfer_matrix_theta_evn</ref>(state).reshape(<ref refid="namespace_textra_1a0caeb138a8ea11cca9cd571e5b4b9c83" kindref="member">Textra::array2</ref>{chiB2,<sp/>chiB2});</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/>theta_odd_transfer_mat<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a67327600c310f92fc07203a026f55e8c" kindref="member">get_transfer_matrix_theta_odd</ref>(state).reshape(<ref refid="namespace_textra_1a0caeb138a8ea11cca9cd571e5b4b9c83" kindref="member">Textra::array2</ref>{chiC2,<sp/>chiC2});</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>ncvA<sp/>=<sp/>std::min(16,<sp/>chiA2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncvC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::min(16,<sp/>chiC2);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncvB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::min(16,<sp/>chiB2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[eigvec_R_evn,<sp/>eigval_R_evn]<sp/>=<sp/>dominant_eig&lt;eig::Side::R&gt;(theta_evn_transfer_mat,<sp/>chiB2,<sp/>ncvB);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[eigvec_L_evn,<sp/>eigval_L_evn]<sp/>=<sp/>dominant_eig&lt;eig::Side::L&gt;(theta_evn_transfer_mat,<sp/>chiB2,<sp/>ncvB);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[eigvec_R_odd,<sp/>eigval_R_odd]<sp/>=<sp/>dominant_eig&lt;eig::Side::R&gt;(theta_odd_transfer_mat,<sp/>chiC2,<sp/>ncvC);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[eigvec_L_odd,<sp/>eigval_L_odd]<sp/>=<sp/>dominant_eig&lt;eig::Side::L&gt;(theta_odd_transfer_mat,<sp/>chiC2,<sp/>ncvC);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/>normalization_evn<sp/>=<sp/>sqrt((eigvec_L_evn.transpose()<sp/>*<sp/>eigvec_R_evn).sum());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/>normalization_odd<sp/>=<sp/>sqrt((eigvec_L_odd.transpose()<sp/>*<sp/>eigvec_R_odd).sum());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" kindref="member">r_evn</ref><sp/>=<sp/><ref refid="namespace_textra_1a3087116f15e45dc51ccef75506151be5" kindref="member">Textra::TensorMap</ref>(eigvec_R_evn).reshape(<ref refid="namespace_textra_1a0caeb138a8ea11cca9cd571e5b4b9c83" kindref="member">Textra::array2</ref>{state.<ref refid="classclass__state__infinite_1a6fe9a16f8940af3014097cc5795a56eb" kindref="member">chiB</ref>(),<sp/>state.<ref refid="classclass__state__infinite_1a6fe9a16f8940af3014097cc5795a56eb" kindref="member">chiB</ref>()})<sp/>/<sp/>normalization_evn;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" kindref="member">l_evn</ref><sp/>=<sp/><ref refid="namespace_textra_1a3087116f15e45dc51ccef75506151be5" kindref="member">Textra::TensorMap</ref>(eigvec_L_evn).reshape(<ref refid="namespace_textra_1a0caeb138a8ea11cca9cd571e5b4b9c83" kindref="member">Textra::array2</ref>{state.<ref refid="classclass__state__infinite_1a6fe9a16f8940af3014097cc5795a56eb" kindref="member">chiB</ref>(),<sp/>state.<ref refid="classclass__state__infinite_1a6fe9a16f8940af3014097cc5795a56eb" kindref="member">chiB</ref>()})<sp/>/<sp/>normalization_evn;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" kindref="member">r_odd</ref><sp/>=<sp/><ref refid="namespace_textra_1a3087116f15e45dc51ccef75506151be5" kindref="member">Textra::TensorMap</ref>(eigvec_R_odd).reshape(<ref refid="namespace_textra_1a0caeb138a8ea11cca9cd571e5b4b9c83" kindref="member">Textra::array2</ref>{state.<ref refid="classclass__state__infinite_1a9df057bd8817774da31206ab823562a1" kindref="member">chiC</ref>(),<sp/>state.<ref refid="classclass__state__infinite_1a9df057bd8817774da31206ab823562a1" kindref="member">chiC</ref>()})<sp/>/<sp/>normalization_odd;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" kindref="member">l_odd</ref><sp/>=<sp/><ref refid="namespace_textra_1a3087116f15e45dc51ccef75506151be5" kindref="member">Textra::TensorMap</ref>(eigvec_L_odd).reshape(<ref refid="namespace_textra_1a0caeb138a8ea11cca9cd571e5b4b9c83" kindref="member">Textra::array2</ref>{state.<ref refid="classclass__state__infinite_1a9df057bd8817774da31206ab823562a1" kindref="member">chiC</ref>(),<sp/>state.<ref refid="classclass__state__infinite_1a9df057bd8817774da31206ab823562a1" kindref="member">chiC</ref>()})<sp/>/<sp/>normalization_odd;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" kindref="member">theta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a160fdb9681661126ea341c2b7fcc37d4" kindref="member">get_theta</ref>(state);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a05f70fcf569c1c1f7c4f6d573cd8e631" kindref="member">theta_sw</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a3aee0aab4433cd0fbfd905bcd3254b19" kindref="member">get_theta_swapped</ref>(state);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" kindref="member">theta_evn_normalized</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1aab5cba6dde260f2d04baed270b3203d1" kindref="member">get_theta_evn</ref>(state,<sp/>sqrt(eigval_R_evn));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" kindref="member">theta_odd_normalized</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1ae7b533170a59708a71f8a16d28650004" kindref="member">get_theta_odd</ref>(state,<sp/>sqrt(eigval_R_odd));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a36bfe7677c9483dec42ed1514ccae553" kindref="member">LAGA</ref><sp/>=<sp/>state.<ref refid="classclass__state__infinite_1a70ac44387422458f346b0feaa29e1d33" kindref="member">A_bare</ref>();<sp/></highlight><highlight class="comment">//<sp/>Modified!<sp/>May<sp/>contain<sp/>some<sp/>error?<sp/>Check<sp/>git<sp/>history<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a5fcc6c645e5864269622a52e44c7a467" kindref="member">LCGB</ref><sp/>=<sp/>state.<ref refid="classclass__state__infinite_1af447918805d3fa5fe4b2e9a866d4ae90" kindref="member">LC_diag</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a901fb62e668b43da0e7a8d69d9f437c7" kindref="member">GB</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({1},<sp/>{1}))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1abf5e9be455f15ce199b2240678183aaa" kindref="member">Textra::array3</ref>{1,<sp/>0,<sp/>2});<sp/></highlight><highlight class="comment">//<sp/>Modified!<sp/>May<sp/>contain<sp/>some<sp/>error?<sp/>Check<sp/>git<sp/>history<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a8ca6ab75ea4a9e71ef45a0a0e675f185" kindref="member">transfer_matrix_evn</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" kindref="member">theta_evn_normalized</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" kindref="member">theta_evn_normalized</ref>.conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>2},<sp/>{0,<sp/>2})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3});</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a2ef7dec8a4db01e3667a71942c40feb5" kindref="member">transfer_matrix_odd</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" kindref="member">theta_odd_normalized</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" kindref="member">theta_odd_normalized</ref>.conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>2},<sp/>{0,<sp/>2})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3});</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>transfer_matrix_LCGB_unnormalized<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a5fcc6c645e5864269622a52e44c7a467" kindref="member">LCGB</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a5fcc6c645e5864269622a52e44c7a467" kindref="member">LCGB</ref>.conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0},<sp/>{0})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3});</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>transfer_matrix_LAGA_unnormalized<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a36bfe7677c9483dec42ed1514ccae553" kindref="member">LAGA</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a36bfe7677c9483dec42ed1514ccae553" kindref="member">LAGA</ref>.conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0},<sp/>{0})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3});</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>l_evn_LBGA_r_odd<sp/>=</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" kindref="member">l_evn</ref>.contract(transfer_matrix_LAGA_unnormalized,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1})).contract(<ref refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" kindref="member">r_odd</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>l_odd_LCGB_r_evn<sp/>=</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" kindref="member">l_odd</ref>.contract(transfer_matrix_LCGB_unnormalized,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1})).contract(<ref refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" kindref="member">r_evn</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a5f3754c29ed7877a4a929274303cd5d9" kindref="member">transfer_matrix_LCGB</ref><sp/>=<sp/>transfer_matrix_LCGB_unnormalized<sp/>/<sp/>l_odd_LCGB_r_evn(0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a63bd20afdfdcf6aa73749384bd88bd5b" kindref="member">transfer_matrix_LAGA</ref><sp/>=<sp/>transfer_matrix_LAGA_unnormalized<sp/>/<sp/>l_evn_LBGA_r_odd(0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a5fcc6c645e5864269622a52e44c7a467" kindref="member">LCGB</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a5fcc6c645e5864269622a52e44c7a467" kindref="member">LCGB</ref><sp/>/<sp/>sqrt(l_odd_LCGB_r_evn(0));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a36bfe7677c9483dec42ed1514ccae553" kindref="member">LAGA</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a36bfe7677c9483dec42ed1514ccae553" kindref="member">LAGA</ref><sp/>/<sp/>sqrt(l_evn_LBGA_r_odd(0));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" kindref="member">components_computed</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;level()<sp/>==<sp/><ref refid="namespace_textra_1ae011dc74fd0ff312cc0d957a688142c9" kindref="member">spdlog::level::trace</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>le_re<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" kindref="member">l_evn</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" kindref="member">r_evn</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>lo_ro<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" kindref="member">l_odd</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" kindref="member">r_odd</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>le_laga<sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" kindref="member">l_evn</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a63bd20afdfdcf6aa73749384bd88bd5b" kindref="member">transfer_matrix_LAGA</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1})).contract(<ref refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" kindref="member">r_odd</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>lo_lcgb<sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" kindref="member">l_odd</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a5f3754c29ed7877a4a929274303cd5d9" kindref="member">transfer_matrix_LCGB</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1})).contract(<ref refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" kindref="member">r_evn</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>thth<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" kindref="member">theta</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" kindref="member">theta</ref>.conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({1,<sp/>3,<sp/>0,<sp/>2},<sp/>{1,<sp/>3,<sp/>0,<sp/>2}));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>then_then<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" kindref="member">theta_evn_normalized</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1aaa218965233de49476f1a1c3385ab221" kindref="member">theta_evn_normalized</ref>.conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>2},<sp/>{0,<sp/>2}))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(<ref refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" kindref="member">l_evn</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>2},<sp/>{0,<sp/>1}))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(<ref refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" kindref="member">r_evn</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>thon_thon<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" kindref="member">theta_odd_normalized</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a1b31321ec58943f91583ab72b4bb7add" kindref="member">theta_odd_normalized</ref>.conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>2},<sp/>{0,<sp/>2}))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(<ref refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" kindref="member">l_odd</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>2},<sp/>{0,<sp/>1}))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(<ref refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" kindref="member">r_odd</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>tren_le<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a8ca6ab75ea4a9e71ef45a0a0e675f185" kindref="member">transfer_matrix_evn</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a4dced59ada339f64abc147a4105ffb48" kindref="member">l_evn</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1})).contract(<ref refid="namespacetools_1_1common_1_1views_1aa8e0a0a8e32576ecaf5441895638d323" kindref="member">r_evn</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>0&gt;<sp/>trod_lo<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a2ef7dec8a4db01e3667a71942c40feb5" kindref="member">transfer_matrix_odd</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a0ad3e4e5e90a1003fe66a27583066f3e" kindref="member">l_odd</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1})).contract(<ref refid="namespacetools_1_1common_1_1views_1add7d5b1e2b83dae13a52db4e9484ed85" kindref="member">r_odd</ref>,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Check\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>l_odd_LCGB_r_evn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(l_odd_LCGB_r_evn(0)),<sp/>std::imag(l_odd_LCGB_r_evn(0)));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>l_evn_LBGA_r_odd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(l_evn_LBGA_r_odd(0)),<sp/>std::imag(l_evn_LBGA_r_odd(0)));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>l_evn<sp/>|<sp/>r_evn<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(le_re(0)),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(le_re(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>l_evn.contract(r_evn,<sp/>Textra::idx({0,1},{0,1})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>l_odd<sp/>|<sp/>r_odd<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(lo_ro(0)),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(lo_ro(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>l_odd.contract(r_odd,<sp/>Textra::idx({0,1},{0,1})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>l_evn<sp/>|<sp/>LAGA<sp/><sp/>|<sp/>r_odd<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(le_laga(0)),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(le_laga(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>l_evn.contract(transfer_matrix_LAGA,<sp/>Textra::idx({0,1},{0,1})).contract(r_odd,<sp/>Textra::idx({0,1},{0,1})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>l_odd<sp/>|<sp/>LCGB<sp/><sp/>|<sp/>r_evn<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(lo_lcgb(0)),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(lo_lcgb(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>l_odd.contract(transfer_matrix_LCGB,<sp/>Textra::idx({0,1},{0,1})).contract(r_evn,<sp/>Textra::idx({0,1},{0,1})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta<sp/><sp/><sp/><sp/><sp/>|<sp/>theta<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(thth(0)),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(thth(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>theta.contract(theta.conjugate(),<sp/>Textra::idx({1,3,0,2},{1,3,0,2})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta_evn_normalized<sp/>|<sp/>theta_evn_normalized<sp/>&gt;<sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(then_then(0)),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(then_then(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>theta_evn_normalized.contract(theta_evn_normalized.conjugate(),<sp/>Textra::idx({0,2},{0,2})).contract(l_evn,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Textra::idx({0,2},{0,1})).contract(r_evn,Textra::idx({0,1},{0,1})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta_odd_normalized<sp/>|<sp/>theta_odd_normalized<sp/>&gt;<sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(thon_thon(0)),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(thon_thon(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>theta_odd_normalized.contract(theta_odd_normalized.conjugate(),<sp/>Textra::idx({0,2},{0,2})).contract(l_odd,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Textra::idx({0,2},{0,1})).contract(r_odd,Textra::idx({0,1},{0,1})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta_evn_normalized<sp/>|<sp/>theta_evn_normalized<sp/>&gt;<sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(tren_le(0)),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(tren_le(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>transfer_matrix_evn.contract(l_evn,<sp/>Textra::idx({0,1},{0,1})).contract(r_evn,Textra::idx({0,1},{0,1})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta_odd_normalized<sp/>|<sp/>theta_odd_normalized<sp/>&gt;<sp/>=<sp/>{:.15f}{:+.15f}\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(trod_lo(0)),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::imag(trod_lo(0)));<sp/></highlight><highlight class="comment">//<sp/><sp/>transfer_matrix_odd.contract(l_odd,<sp/>Textra::idx({0,1},{0,1})).contract(r_odd,Textra::idx({0,1},{0,1})));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(str);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="namespacetools_1_1common_1_1views_1a160fdb9681661126ea341c2b7fcc37d4" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a160fdb9681661126ea341c2b7fcc37d4" kindref="member">tools::common::views::get_theta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/>=<sp/>state.<ref refid="classclass__state__finite_1af27b5634665d41f1393d1674396f8530" kindref="member">get_position</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpsA<sp/>=<sp/>state.<ref refid="classclass__state__finite_1a8cff3eaf9bad48263fe1b9056ac62592" kindref="member">get_mps_site</ref>(pos);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpsB<sp/>=<sp/>state.<ref refid="classclass__state__finite_1a8cff3eaf9bad48263fe1b9056ac62592" kindref="member">get_mps_site</ref>(pos<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mpsA.<ref refid="classclass__mps__site_1ac7ede498990cefe06828699f21eae72f" kindref="member">get_M</ref>().contract(mpsB.get_M(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},<sp/>{1}))<sp/>/<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="namespacetools_1_1common_1_1views_1a1183e7301ad32a04234a63807efdeab9" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a160fdb9681661126ea341c2b7fcc37d4" kindref="member">tools::common::views::get_theta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1af0611141cb73e28f845311a5bd4b8a77" kindref="member">A</ref>().contract(state.<ref refid="classclass__state__infinite_1a3f158ccfa299749074dde6f7cf0631e8" kindref="member">B</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},<sp/>{1}))<sp/>/<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="namespacetools_1_1common_1_1views_1a3aee0aab4433cd0fbfd905bcd3254b19" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a3aee0aab4433cd0fbfd905bcd3254b19" kindref="member">tools::common::views::get_theta_swapped</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classclass__state__infinite_1af447918805d3fa5fe4b2e9a866d4ae90" kindref="member">LC_diag</ref>()<sp/></highlight><highlight class="comment">//<sp/>whatever<sp/>L_A<sp/>was<sp/>in<sp/>the<sp/>previous<sp/>moves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a3f158ccfa299749074dde6f7cf0631e8" kindref="member">B</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({1},<sp/>{1}))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a6ef456d46f23394a12509cb07bf57fdd" kindref="member">GA</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},<sp/>{1}))</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1af447918805d3fa5fe4b2e9a866d4ae90" kindref="member">LC_diag</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({3},<sp/>{0}))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{1,<sp/>0,<sp/>2,<sp/>3})<sp/>/</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="namespacetools_1_1common_1_1views_1aab5cba6dde260f2d04baed270b3203d1" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1aab5cba6dde260f2d04baed270b3203d1" kindref="member">tools::common::views::get_theta_evn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1af0611141cb73e28f845311a5bd4b8a77" kindref="member">A</ref>().contract(state.<ref refid="classclass__state__infinite_1a901fb62e668b43da0e7a8d69d9f437c7" kindref="member">GB</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},<sp/>{1}))<sp/>/<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="namespacetools_1_1common_1_1views_1ae7b533170a59708a71f8a16d28650004" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1ae7b533170a59708a71f8a16d28650004" kindref="member">tools::common::views::get_theta_odd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1af447918805d3fa5fe4b2e9a866d4ae90" kindref="member">LC_diag</ref>().contract(state.<ref refid="classclass__state__infinite_1a3f158ccfa299749074dde6f7cf0631e8" kindref="member">B</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({1},<sp/>{1})).contract(state.<ref refid="classclass__state__infinite_1a6ef456d46f23394a12509cb07bf57fdd" kindref="member">GA</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},<sp/>{1})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{1,<sp/>0,<sp/>2,<sp/>3})<sp/>/<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="namespacetools_1_1common_1_1views_1a7d2f40f6043cd64db0623ef8faa32b97" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a7d2f40f6043cd64db0623ef8faa32b97" kindref="member">tools::common::views::get_transfer_matrix_zero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>state.<ref refid="classclass__state__infinite_1a9df057bd8817774da31206ab823562a1" kindref="member">chiC</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/>I<sp/><sp/><sp/>=<sp/><ref refid="namespace_textra_1a9985d656f87652d2d09c81c517be2e07" kindref="member">Textra::asDiagonal</ref>(Eigen::Tensor&lt;Scalar,<sp/>1&gt;(dim));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>I.setConstant(1.0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;Eigen::IndexPair&lt;long&gt;,<sp/>0&gt;<sp/>pair<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>I.contract(I,<sp/>pair).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3});</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="namespacetools_1_1common_1_1views_1a53a53aa529faacabc2340316f4efb48c" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a53a53aa529faacabc2340316f4efb48c" kindref="member">tools::common::views::get_transfer_matrix_LBGA</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1af0611141cb73e28f845311a5bd4b8a77" kindref="member">A</ref>().contract(state.<ref refid="classclass__state__infinite_1af0611141cb73e28f845311a5bd4b8a77" kindref="member">A</ref>().conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0},<sp/>{0})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>3,<sp/>1,<sp/>2})<sp/>/<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="namespacetools_1_1common_1_1views_1ad0d1259ce6f92aa25273f6fb708f7b90" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1ad0d1259ce6f92aa25273f6fb708f7b90" kindref="member">tools::common::views::get_transfer_matrix_GALC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1af447918805d3fa5fe4b2e9a866d4ae90" kindref="member">LC_diag</ref>()</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a6ef456d46f23394a12509cb07bf57fdd" kindref="member">GA</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},<sp/>{0}))</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a6ef456d46f23394a12509cb07bf57fdd" kindref="member">GA</ref>().conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0},<sp/>{0}))</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1af447918805d3fa5fe4b2e9a866d4ae90" kindref="member">LC_diag</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({3},<sp/>{0}))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3})<sp/>/</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="namespacetools_1_1common_1_1views_1a85725fe02dbd35064ccdd8429ab688c4" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a85725fe02dbd35064ccdd8429ab688c4" kindref="member">tools::common::views::get_transfer_matrix_GBLB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1a3f158ccfa299749074dde6f7cf0631e8" kindref="member">B</ref>().contract(state.<ref refid="classclass__state__infinite_1a3f158ccfa299749074dde6f7cf0631e8" kindref="member">B</ref>().conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0},<sp/>{0})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3})<sp/>/<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="namespacetools_1_1common_1_1views_1a9711a0671f1c5ed63c0a7add30b4d212" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a9711a0671f1c5ed63c0a7add30b4d212" kindref="member">tools::common::views::get_transfer_matrix_LCGB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1af447918805d3fa5fe4b2e9a866d4ae90" kindref="member">LC_diag</ref>()</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a901fb62e668b43da0e7a8d69d9f437c7" kindref="member">GB</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({1},<sp/>{1}))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a901fb62e668b43da0e7a8d69d9f437c7" kindref="member">GB</ref>().conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({1},<sp/>{0}))</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1af447918805d3fa5fe4b2e9a866d4ae90" kindref="member">LC_diag</ref>(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},<sp/>{1}))</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>3,<sp/>1,<sp/>2})<sp/>/</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="namespacetools_1_1common_1_1views_1a5db009920b3ce3e1651f1cc62dc78a59" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a5db009920b3ce3e1651f1cc62dc78a59" kindref="member">tools::common::views::get_transfer_matrix_theta_evn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views" kindref="compound">tools::common::views</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1aab5cba6dde260f2d04baed270b3203d1" kindref="member">get_theta_evn</ref>(state).contract(<ref refid="namespacetools_1_1common_1_1views_1aab5cba6dde260f2d04baed270b3203d1" kindref="member">get_theta_evn</ref>(state).conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>2},<sp/>{0,<sp/>2})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3})<sp/>/<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="namespacetools_1_1common_1_1views_1a67327600c310f92fc07203a026f55e8c" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a67327600c310f92fc07203a026f55e8c" kindref="member">tools::common::views::get_transfer_matrix_theta_odd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/><ref refid="namespacetools_1_1common_1_1views_1a8801fa4052fdbe4160e638f289456b9e" kindref="member">Scalar</ref><sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1ae7b533170a59708a71f8a16d28650004" kindref="member">get_theta_odd</ref>(state).contract(<ref refid="namespacetools_1_1common_1_1views_1ae7b533170a59708a71f8a16d28650004" kindref="member">get_theta_odd</ref>(state).conjugate(),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({0,<sp/>2},<sp/>{0,<sp/>2})).shuffle(<ref refid="namespace_textra_1af66a1cb409abbc5dcc3ddef03d8f9043" kindref="member">Textra::array4</ref>{0,<sp/>2,<sp/>1,<sp/>3})<sp/>/<sp/><ref refid="namespace_textra_1afaa9f7837b252493251f108e0b64fc1b" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="namespacetools_1_1common_1_1views_1ad58ebce39073f0a47571bdd435e167f9" refkind="member"><highlight class="normal">Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1ad58ebce39073f0a47571bdd435e167f9" kindref="member">tools::common::views::get_transfer_matrix_AB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>temp<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a7d2f40f6043cd64db0623ef8faa32b97" kindref="member">get_transfer_matrix_zero</ref>(state);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>temp2;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p<sp/>-<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(i,<sp/>2)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>temp.contract(<ref refid="namespacetools_1_1common_1_1views_1a53a53aa529faacabc2340316f4efb48c" kindref="member">get_transfer_matrix_LBGA</ref>(state),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2,<sp/>3},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>temp.contract(<ref refid="namespacetools_1_1common_1_1views_1a9711a0671f1c5ed63c0a7add30b4d212" kindref="member">get_transfer_matrix_LCGB</ref>(state),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2,<sp/>3},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp2;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_theta(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)</highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight><highlight class="comment">//<sp/>*<sp/>Returns<sp/>a<sp/>two-site<sp/>MPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>@verbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1--[<sp/>LA<sp/>]--[<sp/>GA<sp/>]--[<sp/>LC<sp/>]--<sp/>[<sp/>GB<sp/>]<sp/>--<sp/>[<sp/>LB<sp/>]--3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>@endverbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPS.A().contract(MPS.B(),<sp/>Textra::idx({2},{1}))<sp/>/<sp/>norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_theta_swapped(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)</highlight></codeline>
<codeline lineno="302"><highlight class="comment"></highlight><highlight class="comment">//<sp/>*<sp/>Returns<sp/>a<sp/>two-site<sp/>MPS<sp/>with<sp/>A<sp/>and<sp/>B<sp/>swapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>@verbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1--[<sp/>LC<sp/>]--[<sp/>GB<sp/>]--[<sp/>LB<sp/>]--<sp/>[<sp/>GA<sp/>]<sp/>--<sp/>[<sp/>LA<sp/>]--3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>@endverbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>MPS.LC_diag()<sp/>//whatever<sp/>L_A<sp/>was<sp/>in<sp/>the<sp/>previous<sp/>moves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.B(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({1},{1}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.GA(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({2},{1}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.LA_diag(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({3},{0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(Textra::array4{1,0,2,3})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_theta_evn(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)</highlight></codeline>
<codeline lineno="325"><highlight class="comment"></highlight><highlight class="comment">//<sp/>*<sp/>Returns<sp/>a<sp/>right<sp/>normalized<sp/>two-site<sp/>MPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>@verbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1--[<sp/>LA<sp/>]--[<sp/>GA<sp/>]--<sp/>[<sp/>LC<sp/>]<sp/>--<sp/>[<sp/>GB<sp/>]--3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>@endverbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/><sp/>MPS.A()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.GB(),<sp/><sp/>Textra::idx({2},{1}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_theta_odd(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)</highlight></codeline>
<codeline lineno="342"><highlight class="comment"></highlight><highlight class="comment">//<sp/>*<sp/>Returns<sp/>a<sp/>two-site<sp/>MPS<sp/>with<sp/>A<sp/>and<sp/>B<sp/>swapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>@verbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1--[<sp/>LC<sp/>]--[<sp/>GB<sp/>]--<sp/>[<sp/>LB<sp/>]<sp/>--<sp/>[<sp/>GA<sp/>]--3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>@endverbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>MPS.LC_diag()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.B(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({1},{1}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.GA(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({2},{1}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(Textra::array4{1,0,2,3})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_transfer_matrix_zero(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,1&gt;<sp/>I<sp/>=<sp/>MPS.MPS_A-&gt;get_LC();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>I.setConstant(1.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Textra::array&lt;Eigen::IndexPair&lt;long&gt;,0&gt;<sp/>pair<sp/>=<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>asDiagonal(I).contract(asDiagonal(I),<sp/>pair<sp/>).shuffle(Textra::array4{0,2,1,3});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_transfer_matrix_LBGA(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>MPS.A().contract(MPS.A().conjugate()<sp/>,<sp/>Textra::idx({0},{0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(Textra::array4{0,3,1,2})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_transfer_matrix_GALC(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>MPS.LC_diag()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.GA(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({2},{0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.GA().conjugate(),<sp/><sp/><sp/>Textra::idx({0},{0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.LC_diag(),<sp/>Textra::idx({3},<sp/>{0})<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(Textra::array4{0,2,1,3})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_transfer_matrix_GBLB(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>MPS.B().contract(MPS.B().conjugate()<sp/>,<sp/><sp/><sp/>Textra::idx({0},{0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(Textra::array4{0,2,1,3})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_transfer_matrix_LCGB(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>MPS.LC_diag()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.GB(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({1},{1}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.GB().conjugate(),<sp/><sp/><sp/>Textra::idx({1},{0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.LC_diag(),<sp/>Textra::idx({2},<sp/>{1})<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(Textra::array4{0,3,1,2})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_transfer_matrix_theta_evn(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>namespace<sp/>tools::common::views;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>get_theta_evn(MPS).contract(get_theta_evn(MPS).conjugate(),<sp/>Textra::idx({0,2},{0,2})).shuffle(Textra::array4{0,2,1,3})<sp/>/<sp/>norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_transfer_matrix_theta_odd(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>Scalar<sp/>norm)<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>get_theta_odd(MPS).contract(get_theta_odd(MPS).conjugate(),<sp/>Textra::idx({0,2},{0,2})).shuffle(Textra::array4{0,2,1,3})<sp/>/<sp/>norm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eigen::Tensor&lt;Scalar,4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tools::common::views::get_transfer_matrix_AB(const<sp/>class_mps_2site<sp/><sp/>&amp;MPS,<sp/>int<sp/>p)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>temp<sp/>=<sp/>get_transfer_matrix_zero(MPS);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>temp2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p-2;<sp/>i++){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(num::mod(i,2)<sp/>==<sp/>0){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>temp.contract(get_transfer_matrix_LBGA(MPS),<sp/>Textra::idx({2,3},{0,1}));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>temp.contract(get_transfer_matrix_LCGB(MPS),<sp/>Textra::idx({2,3},{0,1}));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>temp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/DMRG++/source/tools/common/views.cpp"/>
  </compounddef>
</doxygen>
