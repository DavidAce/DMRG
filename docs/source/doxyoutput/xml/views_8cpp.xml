<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="views_8cpp" kind="file" language="C++">
    <compoundname>views.cpp</compoundname>
    <includes refid="nmspc__tools_8h" local="no">tools/nmspc_tools.h</includes>
    <includes refid="class__state__infinite_8h" local="no">state/class_state_infinite.h</includes>
    <includes refid="class__state__finite_8h" local="no">state/class_state_finite.h</includes>
    <includes refid="class__mps__2site_8h" local="no">state/class_mps_2site.h</includes>
    <includes refid="class__eigsolver_8h" local="no">math/class_eigsolver.h</includes>
    <includes refid="nmspc__math_8h" local="no">math/nmspc_math.h</includes>
    <incdepgraph>
      <node id="2644">
        <label>Eigen/SparseLU</label>
      </node>
      <node id="2603">
        <label>list</label>
      </node>
      <node id="2647">
        <label>functional</label>
      </node>
      <node id="2621">
        <label>iomanip</label>
      </node>
      <node id="2642">
        <label>Eigen/LU</label>
      </node>
      <node id="2620">
        <label>iterator</label>
      </node>
      <node id="2631">
        <label>state/class_state_finite.h</label>
        <link refid="class__state__finite_8h"/>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2616" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
      </node>
      <node id="2646">
        <label>cmath</label>
      </node>
      <node id="2622">
        <label>general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="2623" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
      </node>
      <node id="2649">
        <label>numeric</label>
      </node>
      <node id="2613">
        <label>Eigen/Core</label>
      </node>
      <node id="2601">
        <label>string</label>
      </node>
      <node id="2608">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2610" relation="include">
        </childnode>
      </node>
      <node id="2605">
        <label>io/nmspc_logger.h</label>
        <link refid="nmspc__logger_8h"/>
        <childnode refid="2606" relation="include">
        </childnode>
        <childnode refid="2607" relation="include">
        </childnode>
      </node>
      <node id="2626">
        <label>map</label>
      </node>
      <node id="2598">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/common/views.cpp</label>
        <link refid="views_8cpp"/>
        <childnode refid="2599" relation="include">
        </childnode>
        <childnode refid="2615" relation="include">
        </childnode>
        <childnode refid="2631" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
        <childnode refid="2645" relation="include">
        </childnode>
      </node>
      <node id="2623">
        <label>experimental/type_traits</label>
      </node>
      <node id="2599">
        <label>tools/nmspc_tools.h</label>
        <link refid="nmspc__tools_8h"/>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2601" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2611" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
      </node>
      <node id="2614">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="2638">
        <label>math/arpack_extra/arpackpp_solver.h</label>
        <link refid="arpackpp__solver_8h"/>
        <childnode refid="2604" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
      </node>
      <node id="2640">
        <label>matrix_product_dense.h</label>
        <link refid="matrix__product__dense_8h"/>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
      </node>
      <node id="2632">
        <label>state/class_environment.h</label>
        <link refid="class__environment_8h"/>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2617" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
      </node>
      <node id="2607">
        <label>spdlog/fmt/bundled/ranges.h</label>
      </node>
      <node id="2635">
        <label>model/class_model_base.h</label>
        <link refid="class__model__base_8h"/>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
      </node>
      <node id="2628">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="2619">
        <label>Eigen/Sparse</label>
      </node>
      <node id="2630">
        <label>simulation/enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="2611">
        <label>tools/finite/opt-internals/enum_classes.h</label>
        <link refid="enum__classes_8h"/>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2612" relation="include">
        </childnode>
      </node>
      <node id="2606">
        <label>spdlog/logger.h</label>
      </node>
      <node id="2634">
        <label>state/class_mps_site.h</label>
        <link refid="class__mps__site_8h"/>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2616" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
      </node>
      <node id="2645">
        <label>math/nmspc_math.h</label>
        <link refid="nmspc__math_8h"/>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2620" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2616" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
      </node>
      <node id="2618">
        <label>general/nmspc_omp.h</label>
        <link refid="nmspc__omp_8h"/>
        <childnode refid="2614" relation="include">
        </childnode>
      </node>
      <node id="2615">
        <label>state/class_state_infinite.h</label>
        <link refid="class__state__infinite_8h"/>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2616" relation="include">
        </childnode>
        <childnode refid="2617" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
      </node>
      <node id="2616">
        <label>optional</label>
      </node>
      <node id="2604">
        <label>vector</label>
      </node>
      <node id="2633">
        <label>spdlog/fmt/fmt.h</label>
      </node>
      <node id="2641">
        <label>complex.h</label>
      </node>
      <node id="2627">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="2648">
        <label>utility</label>
      </node>
      <node id="2625">
        <label>array</label>
      </node>
      <node id="2612">
        <label>sstream</label>
      </node>
      <node id="2643">
        <label>matrix_product_sparse.h</label>
        <link refid="matrix__product__sparse_8h"/>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2619" relation="include">
        </childnode>
        <childnode refid="2644" relation="include">
        </childnode>
      </node>
      <node id="2636">
        <label>state/class_mps_2site.h</label>
        <link refid="class__mps__2site_8h"/>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2617" relation="include">
        </childnode>
      </node>
      <node id="2639">
        <label>math/arpack_extra/matrix_recast.h</label>
        <link refid="matrix__recast_8h"/>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2643" relation="include">
        </childnode>
      </node>
      <node id="2610">
        <label>iostream</label>
      </node>
      <node id="2624">
        <label>math/nmspc_eigutils.h</label>
        <link refid="nmspc__eigutils_8h"/>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2625" relation="include">
        </childnode>
        <childnode refid="2626" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2628" relation="include">
        </childnode>
      </node>
      <node id="2609">
        <label>chrono</label>
      </node>
      <node id="2637">
        <label>math/class_eigsolver.h</label>
        <link refid="class__eigsolver_8h"/>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
      </node>
      <node id="2602">
        <label>complex</label>
      </node>
      <node id="2629">
        <label>simulation/nmspc_settings.h</label>
        <link refid="nmspc__settings_8h"/>
        <childnode refid="2601" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
        <childnode refid="2630" relation="include">
        </childnode>
      </node>
      <node id="2617">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="2618" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2619" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2620" relation="include">
        </childnode>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2622" relation="include">
        </childnode>
      </node>
      <node id="2600">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetools_1_1common_1_1views">tools::common::views</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="views_8cpp_1aa5ed1d7f240d56de106c45d8c7d47c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceeigutils_1_1eig_setting_1a7b4469c018633b8c2c2d596b5e38de74" kindref="member">eigutils::eigSetting::Side</ref></type>
            <declname>side</declname>
            <defname>side</defname>
          </param>
        </templateparamlist>
        <type>std::pair&lt; Eigen::VectorXcd, std::complex&lt; double &gt; &gt;</type>
        <definition>std::pair&lt;Eigen::VectorXcd, std::complex&lt;double&gt; &gt; dominant_eig</definition>
        <argsstring>(Eigen::Tensor&lt; std::complex&lt; double &gt;, 2 &gt; transfer_mat, int L, int ncv)</argsstring>
        <name>dominant_eig</name>
        <param>
          <type>Eigen::Tensor&lt; std::complex&lt; double &gt;, 2 &gt;</type>
          <declname>transfer_mat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/common/views.cpp" line="40" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/common/views.cpp" bodystart="40" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-01-31.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2018-07-06.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__tools_8h" kindref="compound">tools/nmspc_tools.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__infinite_8h" kindref="compound">state/class_state_infinite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__finite_8h" kindref="compound">state/class_state_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__mps__2site_8h" kindref="compound">state/class_mps_2site.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__eigsolver_8h" kindref="compound">math/class_eigsolver.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__math_8h" kindref="compound">math/nmspc_math.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;class_mps_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_textra" kindref="compound">Textra</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views" kindref="compound">tools::common::views</ref>{</highlight></codeline>
<codeline lineno="22" refid="namespacetools_1_1common_1_1views_1a5e9c5e1d5bef73e833cbc054c7935af3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a5e9c5e1d5bef73e833cbc054c7935af3" kindref="member">theta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>();</highlight></codeline>
<codeline lineno="23" refid="namespacetools_1_1common_1_1views_1a4770a1829f476c6daf830b712d0d57db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a4770a1829f476c6daf830b712d0d57db" kindref="member">theta_evn_normalized</ref><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>();</highlight></codeline>
<codeline lineno="24" refid="namespacetools_1_1common_1_1views_1ab6ade4cf09a0141fb611c32c713e0e2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1ab6ade4cf09a0141fb611c32c713e0e2b" kindref="member">theta_odd_normalized</ref><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>();</highlight></codeline>
<codeline lineno="25" refid="namespacetools_1_1common_1_1views_1ac2194a171cc86ee5c187c37fef7ae11b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1ac2194a171cc86ee5c187c37fef7ae11b" kindref="member">theta_sw</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>();</highlight></codeline>
<codeline lineno="26" refid="namespacetools_1_1common_1_1views_1ab3327a05b5c01f98a25e8a9493c890f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,3&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1ab3327a05b5c01f98a25e8a9493c890f4" kindref="member">LAGA</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,3&gt;<sp/>();</highlight></codeline>
<codeline lineno="27" refid="namespacetools_1_1common_1_1views_1aacc6a9a9420e80a6c3a65ac29a239ae8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,3&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1aacc6a9a9420e80a6c3a65ac29a239ae8" kindref="member">LCGB</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,3&gt;<sp/>();</highlight></codeline>
<codeline lineno="28" refid="namespacetools_1_1common_1_1views_1a2b5b6f9460c87209076d19f7edc8bf92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a2b5b6f9460c87209076d19f7edc8bf92" kindref="member">l_evn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/>();</highlight></codeline>
<codeline lineno="29" refid="namespacetools_1_1common_1_1views_1aac00eb090b45f9a68587498eeea97370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1aac00eb090b45f9a68587498eeea97370" kindref="member">r_evn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/>();</highlight></codeline>
<codeline lineno="30" refid="namespacetools_1_1common_1_1views_1a4d84a62c356bd7b16e4b0d08b98ab160" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a4d84a62c356bd7b16e4b0d08b98ab160" kindref="member">l_odd</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/>();</highlight></codeline>
<codeline lineno="31" refid="namespacetools_1_1common_1_1views_1a6409a1374700c7fca7abc92f0c8d99f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a6409a1374700c7fca7abc92f0c8d99f6" kindref="member">r_odd</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/>();</highlight></codeline>
<codeline lineno="32" refid="namespacetools_1_1common_1_1views_1a51c330473734753fe9875a00f2b97a9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a51c330473734753fe9875a00f2b97a9d" kindref="member">transfer_matrix_LAGA</ref><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>();</highlight></codeline>
<codeline lineno="33" refid="namespacetools_1_1common_1_1views_1a58171c86283b19f27d4bc76ff124e347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a58171c86283b19f27d4bc76ff124e347" kindref="member">transfer_matrix_LCGB</ref><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>();</highlight></codeline>
<codeline lineno="34" refid="namespacetools_1_1common_1_1views_1a28385061271c30051d0d8ac567d22ac5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a28385061271c30051d0d8ac567d22ac5" kindref="member">transfer_matrix_evn</ref><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>();</highlight></codeline>
<codeline lineno="35" refid="namespacetools_1_1common_1_1views_1a63f4e0353437c2a8061941bb71ed818d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a63f4e0353437c2a8061941bb71ed818d" kindref="member">transfer_matrix_odd</ref><sp/><sp/><sp/><sp/>=<sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>();</highlight></codeline>
<codeline lineno="36" refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" kindref="member">components_computed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;eigutils::eigSetting::S</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e<sp/>s</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e&gt;</highlight></codeline>
<codeline lineno="40" refid="views_8cpp_1aa5ed1d7f240d56de106c45d8c7d47c0a" refkind="member"><highlight class="normal">std::pair&lt;Eigen::VectorXcd,<sp/>std::complex&lt;double&gt;&gt;<sp/><ref refid="views_8cpp_1aa5ed1d7f240d56de106c45d8c7d47c0a" kindref="member">dominant_eig</ref>(Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/>transfer_mat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncv){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeigutils_1_1eig_setting" kindref="compound">eigutils::eigSetting</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__eigsolver" kindref="compound">class_eigsolver</ref><sp/>solver;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>solver.<ref refid="classclass__eigsolver_1a05d0c7c938a1c72636b4e6b01bf4d77f" kindref="member">eigs</ref>&lt;Storage::DENSE&gt;(transfer_mat.data(),L,<sp/>1,<sp/>ncv,NAN,Form::NONSYMMETRIC,Ritz::LM,side,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXcd<sp/>eigvec<sp/>=<sp/>Eigen::Map&lt;const<sp/>Eigen::VectorXcd&gt;(solver.<ref refid="classclass__eigsolver_1a7718d4fdd0cb874caa750043c1b55fa2" kindref="member">solution</ref>.<ref refid="classeigutils_1_1eig_solution_1a9eea0b54a902215967a612a761f5e0a2" kindref="member">get_eigvecs</ref>&lt;Type::CPLX,Form::NONSYMMETRIC,<sp/>side&gt;().data(),<sp/>solver.<ref refid="classclass__eigsolver_1a7718d4fdd0cb874caa750043c1b55fa2" kindref="member">solution</ref>.<ref refid="classeigutils_1_1eig_solution_1af9690f3e16cb30fd70d88e50c52121b1" kindref="member">meta</ref>.<ref refid="structeigutils_1_1eig_solution_1_1_meta_1af52b4d369e2557402f9dcc3bc5fbd448" kindref="member">rows</ref>,1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>eigval=<sp/>solver.<ref refid="classclass__eigsolver_1a7718d4fdd0cb874caa750043c1b55fa2" kindref="member">solution</ref>.<ref refid="classeigutils_1_1eig_solution_1a94af0d5b1e644b383d2c254fbbc1b15c" kindref="member">get_eigvals</ref>&lt;Form::NONSYMMETRIC&gt;()[0];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(eigvec,eigval);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespacetools_1_1common_1_1views_1a055661bd0c1b24862a0d47e10a1d388e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1a055661bd0c1b24862a0d47e10a1d388e" kindref="member">tools::common::views::compute_mps_components</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" kindref="member">components_computed</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>even<sp/>thetas<sp/>we<sp/>have<sp/><sp/>chiA<sp/>=<sp/>chiB<sp/>on<sp/>the<sp/>outer<sp/>bond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>odd<sp/>thetas<sp/>we<sp/>have<sp/>chiC<sp/>on<sp/>the<sp/>outer<sp/>bond.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>chiA2<sp/>=<sp/>(int)(state.MPS-&gt;chiA()*state.MPS-&gt;chiA());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chiB2<sp/>=<sp/>(int)(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiB()*state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiB());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chiC2<sp/>=<sp/>(int)(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiC()*state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiC());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a5e9c5e1d5bef73e833cbc054c7935af3" kindref="member">theta</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a0d5141e44fee1573a7a64c2ce2f3e59e" kindref="member">get_theta</ref>(state);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/>theta_evn_transfer_mat<sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a9fbc4d04079bbf1a7e61897d2aba21f3" kindref="member">get_transfer_matrix_theta_evn</ref>(state).reshape(<ref refid="namespace_textra_1a9f19da2eaa3b2ac621236d06d85ea382" kindref="member">array2</ref>{chiB2,chiB2});</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,2&gt;<sp/>theta_odd_transfer_mat<sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a1e5e2ed3a2a08224c98a8f85c3eacdf1" kindref="member">get_transfer_matrix_theta_odd</ref>(state).reshape(<ref refid="namespace_textra_1a9f19da2eaa3b2ac621236d06d85ea382" kindref="member">array2</ref>{chiC2,chiC2});</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeigutils_1_1eig_setting" kindref="compound">eigutils::eigSetting</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>ncvA<sp/>=<sp/>std::min(16,<sp/>chiA2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncvC<sp/>=<sp/>std::min(16,<sp/>chiC2);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncvB<sp/>=<sp/>std::min(16,<sp/>chiB2);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[eigvec_R_evn,<sp/>eigval_R_evn]<sp/>=<sp/>dominant_eig&lt;Side::R&gt;(theta_evn_transfer_mat,<sp/>chiB2,<sp/>ncvB);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[eigvec_L_evn,<sp/>eigval_L_evn]<sp/>=<sp/>dominant_eig&lt;Side::L&gt;(theta_evn_transfer_mat,<sp/>chiB2,<sp/>ncvB);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[eigvec_R_odd,<sp/>eigval_R_odd]<sp/>=<sp/>dominant_eig&lt;Side::R&gt;(theta_odd_transfer_mat,<sp/>chiC2,<sp/>ncvC);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[eigvec_L_odd,<sp/>eigval_L_odd]<sp/>=<sp/>dominant_eig&lt;Side::L&gt;(theta_odd_transfer_mat,<sp/>chiC2,<sp/>ncvC);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>normalization_evn<sp/>=<sp/>sqrt((eigvec_L_evn.transpose()<sp/>*<sp/>eigvec_R_evn).sum());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>normalization_odd<sp/>=<sp/>sqrt((eigvec_L_odd.transpose()<sp/>*<sp/>eigvec_R_odd).sum());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1aac00eb090b45f9a68587498eeea97370" kindref="member">r_evn</ref><sp/>=<sp/><ref refid="namespace_textra_1a1ee11e2d4410760ed26158c27a38d2b0" kindref="member">MatrixTensorMap</ref>(eigvec_R_evn).reshape(<ref refid="namespace_textra_1a9f19da2eaa3b2ac621236d06d85ea382" kindref="member">array2</ref>{state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiB(),state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiB()})/normalization_evn;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a2b5b6f9460c87209076d19f7edc8bf92" kindref="member">l_evn</ref><sp/>=<sp/><ref refid="namespace_textra_1a1ee11e2d4410760ed26158c27a38d2b0" kindref="member">MatrixTensorMap</ref>(eigvec_L_evn).reshape(<ref refid="namespace_textra_1a9f19da2eaa3b2ac621236d06d85ea382" kindref="member">array2</ref>{state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiB(),state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiB()})/normalization_evn;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a6409a1374700c7fca7abc92f0c8d99f6" kindref="member">r_odd</ref><sp/>=<sp/><ref refid="namespace_textra_1a1ee11e2d4410760ed26158c27a38d2b0" kindref="member">MatrixTensorMap</ref>(eigvec_R_odd).reshape(<ref refid="namespace_textra_1a9f19da2eaa3b2ac621236d06d85ea382" kindref="member">array2</ref>{state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiC(),state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiC()})/normalization_odd;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a4d84a62c356bd7b16e4b0d08b98ab160" kindref="member">l_odd</ref><sp/>=<sp/><ref refid="namespace_textra_1a1ee11e2d4410760ed26158c27a38d2b0" kindref="member">MatrixTensorMap</ref>(eigvec_L_odd).reshape(<ref refid="namespace_textra_1a9f19da2eaa3b2ac621236d06d85ea382" kindref="member">array2</ref>{state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiC(),state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;chiC()})/normalization_odd;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a5e9c5e1d5bef73e833cbc054c7935af3" kindref="member">theta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a0d5141e44fee1573a7a64c2ce2f3e59e" kindref="member">get_theta</ref>(state);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1ac2194a171cc86ee5c187c37fef7ae11b" kindref="member">theta_sw</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a251635561b8dc6bdeac45fb295540030" kindref="member">get_theta_swapped</ref>(state);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a4770a1829f476c6daf830b712d0d57db" kindref="member">theta_evn_normalized</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a5309629b31a4afeba3596cc060e13ed6" kindref="member">get_theta_evn</ref>(state,<sp/>sqrt(eigval_R_evn));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1ab6ade4cf09a0141fb611c32c713e0e2b" kindref="member">theta_odd_normalized</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1ab9d5269980b66fe0dcf9e6551d6171e0" kindref="member">get_theta_odd</ref>(state,<sp/>sqrt(eigval_R_odd));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1ab3327a05b5c01f98a25e8a9493c890f4" kindref="member">LAGA</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;A_bare();<sp/></highlight><highlight class="comment">//<sp/>Modified!<sp/>May<sp/>contain<sp/>some<sp/>error?<sp/>Check<sp/>git<sp/>history<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1aacc6a9a9420e80a6c3a65ac29a239ae8" kindref="member">LCGB</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;LC().contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;GB(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({1},{1})).shuffle(<ref refid="namespace_textra_1a11ff5da431d0a149284e51800d10c0cc" kindref="member">array3</ref>{1,0,2});<sp/></highlight><highlight class="comment">//<sp/>Modified!<sp/>May<sp/>contain<sp/>some<sp/>error?<sp/>Check<sp/>git<sp/>history<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a28385061271c30051d0d8ac567d22ac5" kindref="member">transfer_matrix_evn</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a4770a1829f476c6daf830b712d0d57db" kindref="member">theta_evn_normalized</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a4770a1829f476c6daf830b712d0d57db" kindref="member">theta_evn_normalized</ref>.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,2})).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3});</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a63f4e0353437c2a8061941bb71ed818d" kindref="member">transfer_matrix_odd</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1ab6ade4cf09a0141fb611c32c713e0e2b" kindref="member">theta_odd_normalized</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1ab6ade4cf09a0141fb611c32c713e0e2b" kindref="member">theta_odd_normalized</ref>.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,2})).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3});</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>transfer_matrix_LCGB_unnormalized<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1aacc6a9a9420e80a6c3a65ac29a239ae8" kindref="member">LCGB</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1aacc6a9a9420e80a6c3a65ac29a239ae8" kindref="member">LCGB</ref>.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0},<sp/>{0})).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,<sp/>2,<sp/>1,<sp/>3});</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>transfer_matrix_LAGA_unnormalized<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1ab3327a05b5c01f98a25e8a9493c890f4" kindref="member">LAGA</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1ab3327a05b5c01f98a25e8a9493c890f4" kindref="member">LAGA</ref>.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0},<sp/>{0})).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,<sp/>2,<sp/>1,<sp/>3});</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,0&gt;<sp/>l_evn_LBGA_r_odd<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a2b5b6f9460c87209076d19f7edc8bf92" kindref="member">l_evn</ref>.contract(transfer_matrix_LAGA_unnormalized,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1})).contract(<ref refid="namespacetools_1_1common_1_1views_1a6409a1374700c7fca7abc92f0c8d99f6" kindref="member">r_odd</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,0&gt;<sp/>l_odd_LCGB_r_evn<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a4d84a62c356bd7b16e4b0d08b98ab160" kindref="member">l_odd</ref>.contract(transfer_matrix_LCGB_unnormalized,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1})).contract(r_evn,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,<sp/>1},<sp/>{0,<sp/>1}));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a58171c86283b19f27d4bc76ff124e347" kindref="member">transfer_matrix_LCGB</ref><sp/>=<sp/>transfer_matrix_LCGB_unnormalized<sp/>/<sp/>l_odd_LCGB_r_evn(0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a51c330473734753fe9875a00f2b97a9d" kindref="member">transfer_matrix_LAGA</ref><sp/>=<sp/>transfer_matrix_LAGA_unnormalized<sp/>/<sp/>l_evn_LBGA_r_odd(0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1aacc6a9a9420e80a6c3a65ac29a239ae8" kindref="member">LCGB</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1aacc6a9a9420e80a6c3a65ac29a239ae8" kindref="member">LCGB</ref><sp/>/<sp/>sqrt(l_odd_LCGB_r_evn(0));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1ab3327a05b5c01f98a25e8a9493c890f4" kindref="member">LAGA</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1ab3327a05b5c01f98a25e8a9493c890f4" kindref="member">LAGA</ref><sp/>/<sp/>sqrt(l_evn_LBGA_r_odd(0));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1views_1a9639d785b811f258c4687f49a2aeb7e5" kindref="member">components_computed</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Check:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(10)<sp/>&lt;&lt;<sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>l_odd_LCGB_r_evn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_odd_LCGB_r_evn(0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>l_evn_LBGA_r_odd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l_evn_LBGA_r_odd(0)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>l_evn<sp/>|<sp/>r_evn<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a2b5b6f9460c87209076d19f7edc8bf92" kindref="member">l_evn</ref>.contract(r_evn,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>l_odd<sp/>|<sp/>r_odd<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a4d84a62c356bd7b16e4b0d08b98ab160" kindref="member">l_odd</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a6409a1374700c7fca7abc92f0c8d99f6" kindref="member">r_odd</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>l_evn<sp/>|<sp/>LAGA<sp/><sp/>|<sp/>r_odd<sp/>&gt;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a2b5b6f9460c87209076d19f7edc8bf92" kindref="member">l_evn</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a51c330473734753fe9875a00f2b97a9d" kindref="member">transfer_matrix_LAGA</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1})).contract(<ref refid="namespacetools_1_1common_1_1views_1a6409a1374700c7fca7abc92f0c8d99f6" kindref="member">r_odd</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>l_odd<sp/>|<sp/>LCGB<sp/><sp/>|<sp/>r_evn<sp/>&gt;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a4d84a62c356bd7b16e4b0d08b98ab160" kindref="member">l_odd</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a58171c86283b19f27d4bc76ff124e347" kindref="member">transfer_matrix_LCGB</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1})).contract(r_evn,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta<sp/><sp/><sp/><sp/><sp/>|<sp/>theta<sp/>&gt;<sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a5e9c5e1d5bef73e833cbc054c7935af3" kindref="member">theta</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a5e9c5e1d5bef73e833cbc054c7935af3" kindref="member">theta</ref>.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1,3,0,2},{1,3,0,2}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta_evn_normalized<sp/>|<sp/>theta_evn_normalized<sp/>&gt;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a4770a1829f476c6daf830b712d0d57db" kindref="member">theta_evn_normalized</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a4770a1829f476c6daf830b712d0d57db" kindref="member">theta_evn_normalized</ref>.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,2})).contract(<ref refid="namespacetools_1_1common_1_1views_1a2b5b6f9460c87209076d19f7edc8bf92" kindref="member">l_evn</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,1})).contract(r_evn,<ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta_evn_normalized<sp/>|<sp/>theta_evn_normalized<sp/>&gt;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a28385061271c30051d0d8ac567d22ac5" kindref="member">transfer_matrix_evn</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a2b5b6f9460c87209076d19f7edc8bf92" kindref="member">l_evn</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1})).contract(r_evn,<ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta_odd_normalized<sp/>|<sp/>theta_odd_normalized<sp/>&gt;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1ab6ade4cf09a0141fb611c32c713e0e2b" kindref="member">theta_odd_normalized</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1ab6ade4cf09a0141fb611c32c713e0e2b" kindref="member">theta_odd_normalized</ref>.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,2})).contract(<ref refid="namespacetools_1_1common_1_1views_1a4d84a62c356bd7b16e4b0d08b98ab160" kindref="member">l_odd</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,1})).contract(<ref refid="namespacetools_1_1common_1_1views_1a6409a1374700c7fca7abc92f0c8d99f6" kindref="member">r_odd</ref>,<ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>theta_odd_normalized<sp/>|<sp/>theta_odd_normalized<sp/>&gt;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacetools_1_1common_1_1views_1a63f4e0353437c2a8061941bb71ed818d" kindref="member">transfer_matrix_odd</ref>.contract(<ref refid="namespacetools_1_1common_1_1views_1a4d84a62c356bd7b16e4b0d08b98ab160" kindref="member">l_odd</ref>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1})).contract(<ref refid="namespacetools_1_1common_1_1views_1a6409a1374700c7fca7abc92f0c8d99f6" kindref="member">r_odd</ref>,<ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,1},{0,1}))<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="116" refid="namespacetools_1_1common_1_1views_1a0d5141e44fee1573a7a64c2ce2f3e59e" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a0d5141e44fee1573a7a64c2ce2f3e59e" kindref="member">tools::common::views::get_theta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__finite_1a4ea331a72ed617c5556723941bc3be30" kindref="member">MPS_L</ref>.back().get_M().contract(state.<ref refid="classclass__state__finite_1ad13069bc0bbfd99d67c9403db4d4c20c" kindref="member">MPS_R</ref>.front().get_M(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{1}))<sp/>/<ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="132" refid="namespacetools_1_1common_1_1views_1a5e06add5b4f88e2a90f7d7b16c29c71d" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a0d5141e44fee1573a7a64c2ce2f3e59e" kindref="member">tools::common::views::get_theta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;A().contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;B(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{1}))<sp/>/<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="150" refid="namespacetools_1_1common_1_1views_1a251635561b8dc6bdeac45fb295540030" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a251635561b8dc6bdeac45fb295540030" kindref="member">tools::common::views::get_theta_swapped</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;LC()<sp/></highlight><highlight class="comment">//whatever<sp/>L_A<sp/>was<sp/>in<sp/>the<sp/>previous<sp/>moves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;B()<sp/>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1},{1}))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;GA(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{1}))</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;LC(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({3},<sp/>{0}))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{1,0,2,3})</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="174" refid="namespacetools_1_1common_1_1views_1a5309629b31a4afeba3596cc060e13ed6" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a5309629b31a4afeba3596cc060e13ed6" kindref="member">tools::common::views::get_theta_evn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;A()</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;GB(),<sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{1}))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="191" refid="namespacetools_1_1common_1_1views_1ab9d5269980b66fe0dcf9e6551d6171e0" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1ab9d5269980b66fe0dcf9e6551d6171e0" kindref="member">tools::common::views::get_theta_odd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;LC()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;B(),<sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1},{1}))</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;GA(),<sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{1}))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{1,0,2,3})</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="210" refid="namespacetools_1_1common_1_1views_1a102cca119d88b783c6b60ed85b5c56de" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a102cca119d88b783c6b60ed85b5c56de" kindref="member">tools::common::views::get_transfer_matrix_zero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,1&gt;<sp/>I<sp/>=<sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;MPS_A-&gt;get_LC();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>I.setConstant(1.0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::array&lt;Eigen::IndexPair&lt;long&gt;,0&gt;<sp/>pair<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">asDiagonal</ref>(I).contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">asDiagonal</ref>(I),<sp/>pair<sp/>).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3});</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="221" refid="namespacetools_1_1common_1_1views_1ac1b668e1718a849acf7f976e9f076cc1" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1ac1b668e1718a849acf7f976e9f076cc1" kindref="member">tools::common::views::get_transfer_matrix_LBGA</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;A().contract(<sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;A().conjugate()<sp/>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0},{0}))</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,3,1,2})</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="229" refid="namespacetools_1_1common_1_1views_1a17681f40ab26ba1d7e08632982bd1a58" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a17681f40ab26ba1d7e08632982bd1a58" kindref="member">tools::common::views::get_transfer_matrix_GALC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;LC()</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;GA(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{0}))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;GA().conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0},{0}))</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;LC(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({3},<sp/>{0})<sp/>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3})</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="239" refid="namespacetools_1_1common_1_1views_1a2ac1508a9edefed03d973125ee451604" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a2ac1508a9edefed03d973125ee451604" kindref="member">tools::common::views::get_transfer_matrix_GBLB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;B().contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;B().conjugate()<sp/>,<sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0},{0}))</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3})</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="247" refid="namespacetools_1_1common_1_1views_1a30148ac9dc25e67edc6724d8e9be29a8" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a30148ac9dc25e67edc6724d8e9be29a8" kindref="member">tools::common::views::get_transfer_matrix_LCGB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;LC()</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;GB(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1},{1}))</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;GB().conjugate(),<sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1},{0}))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(state.<ref refid="classclass__state__infinite_1a09fcfce4431b155f6452f42701026c66" kindref="member">MPS</ref>-&gt;LC(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},<sp/>{1})<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,3,1,2})</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="258" refid="namespacetools_1_1common_1_1views_1a9fbc4d04079bbf1a7e61897d2aba21f3" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a9fbc4d04079bbf1a7e61897d2aba21f3" kindref="member">tools::common::views::get_transfer_matrix_theta_evn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views" kindref="compound">tools::common::views</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1a5309629b31a4afeba3596cc060e13ed6" kindref="member">get_theta_evn</ref>(state).contract(<ref refid="namespacetools_1_1common_1_1views_1a5309629b31a4afeba3596cc060e13ed6" kindref="member">get_theta_evn</ref>(state).conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,2})).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3})<sp/>/<sp/>norm;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="264" refid="namespacetools_1_1common_1_1views_1a1e5e2ed3a2a08224c98a8f85c3eacdf1" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a1e5e2ed3a2a08224c98a8f85c3eacdf1" kindref="member">tools::common::views::get_transfer_matrix_theta_odd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1ab9d5269980b66fe0dcf9e6551d6171e0" kindref="member">get_theta_odd</ref>(state).contract(<ref refid="namespacetools_1_1common_1_1views_1ab9d5269980b66fe0dcf9e6551d6171e0" kindref="member">get_theta_odd</ref>(state).conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,2})).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3})<sp/>/<sp/>norm;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="270" refid="namespacetools_1_1common_1_1views_1a8cc4639f3ddef3920499b599d333db96" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a8cc4639f3ddef3920499b599d333db96" kindref="member">tools::common::views::get_transfer_matrix_AB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref><sp/>&amp;<sp/>state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>temp<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a102cca119d88b783c6b60ed85b5c56de" kindref="member">get_transfer_matrix_zero</ref>(state);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>temp2;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p-2;<sp/>i++){</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacemath_1a950ba2c26eab3a176711e689337ad0e9" kindref="member">math::mod</ref>(i,2)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>temp.contract(<ref refid="namespacetools_1_1common_1_1views_1ac1b668e1718a849acf7f976e9f076cc1" kindref="member">get_transfer_matrix_LBGA</ref>(state),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2,3},{0,1}));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>temp.contract(<ref refid="namespacetools_1_1common_1_1views_1a30148ac9dc25e67edc6724d8e9be29a8" kindref="member">get_transfer_matrix_LCGB</ref>(state),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2,3},{0,1}));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp2;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="306" refid="namespacetools_1_1common_1_1views_1a949c89e88406fed5fcf642d34e1edea0" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a0d5141e44fee1573a7a64c2ce2f3e59e" kindref="member">tools::common::views::get_theta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPS.<ref refid="classclass__mps__2site_1a0855d33ca2a8b9548bb7ec8f821dd1b9" kindref="member">A</ref>().contract(MPS.<ref refid="classclass__mps__2site_1affa4b7514c8c239bae874a13f8a3f2d6" kindref="member">B</ref>(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{1}))<sp/>/<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="323" refid="namespacetools_1_1common_1_1views_1a980151161df1dabfaea5da9ae2d71775" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a251635561b8dc6bdeac45fb295540030" kindref="member">tools::common::views::get_theta_swapped</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPS.<ref refid="classclass__mps__2site_1abd7cd23625abfa85b3adc1514644c982" kindref="member">LC</ref>()<sp/></highlight><highlight class="comment">//whatever<sp/>L_A<sp/>was<sp/>in<sp/>the<sp/>previous<sp/>moves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1affa4b7514c8c239bae874a13f8a3f2d6" kindref="member">B</ref>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1},{1}))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1a108901e63be9a7c4a3ccf93b097157fe" kindref="member">GA</ref>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{1}))</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1ae52d8a455b873f827daf7678ce76f8dc" kindref="member">LA</ref>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({3},{0}))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{1,0,2,3})</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="346" refid="namespacetools_1_1common_1_1views_1a53a47d2730c8b923207c089dec7169d3" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a5309629b31a4afeba3596cc060e13ed6" kindref="member">tools::common::views::get_theta_evn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>MPS.<ref refid="classclass__mps__2site_1a0855d33ca2a8b9548bb7ec8f821dd1b9" kindref="member">A</ref>()</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1af89dd0007ac4d0f4265b5889e356c2d4" kindref="member">GB</ref>(),<sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{1}))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="363" refid="namespacetools_1_1common_1_1views_1ac7e9874ea10f09be64e5b08689714974" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1ab9d5269980b66fe0dcf9e6551d6171e0" kindref="member">tools::common::views::get_theta_odd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPS.<ref refid="classclass__mps__2site_1abd7cd23625abfa85b3adc1514644c982" kindref="member">LC</ref>()</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1affa4b7514c8c239bae874a13f8a3f2d6" kindref="member">B</ref>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1},{1}))</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1a108901e63be9a7c4a3ccf93b097157fe" kindref="member">GA</ref>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{1}))</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{1,0,2,3})</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="382" refid="namespacetools_1_1common_1_1views_1a686b9c2b5b156a674a8b5cf821190e8d" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a102cca119d88b783c6b60ed85b5c56de" kindref="member">tools::common::views::get_transfer_matrix_zero</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,1&gt;<sp/>I<sp/>=<sp/>MPS.<ref refid="classclass__mps__2site_1a73674b6014ab21bafe8ef563190327ef" kindref="member">MPS_A</ref>-&gt;get_LC();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>I.setConstant(1.0);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::array&lt;Eigen::IndexPair&lt;long&gt;,0&gt;<sp/>pair<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">asDiagonal</ref>(I).contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">asDiagonal</ref>(I),<sp/>pair<sp/>).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3});</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="393" refid="namespacetools_1_1common_1_1views_1afa5f608610abfca5e155625b329e2280" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1ac1b668e1718a849acf7f976e9f076cc1" kindref="member">tools::common::views::get_transfer_matrix_LBGA</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPS.<ref refid="classclass__mps__2site_1a0855d33ca2a8b9548bb7ec8f821dd1b9" kindref="member">A</ref>().contract(MPS.<ref refid="classclass__mps__2site_1a0855d33ca2a8b9548bb7ec8f821dd1b9" kindref="member">A</ref>().conjugate()<sp/>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0},{0}))</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,3,1,2})</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="401" refid="namespacetools_1_1common_1_1views_1aea0bac36161f395733301a37dceaaff0" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a17681f40ab26ba1d7e08632982bd1a58" kindref="member">tools::common::views::get_transfer_matrix_GALC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPS.<ref refid="classclass__mps__2site_1abd7cd23625abfa85b3adc1514644c982" kindref="member">LC</ref>()</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1a108901e63be9a7c4a3ccf93b097157fe" kindref="member">GA</ref>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},{0}))</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1a108901e63be9a7c4a3ccf93b097157fe" kindref="member">GA</ref>().conjugate(),<sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0},{0}))</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1abd7cd23625abfa85b3adc1514644c982" kindref="member">LC</ref>(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({3},<sp/>{0})<sp/>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3})</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="411" refid="namespacetools_1_1common_1_1views_1aecbf8dcf0a09ffd63376a47983c48239" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a2ac1508a9edefed03d973125ee451604" kindref="member">tools::common::views::get_transfer_matrix_GBLB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPS.<ref refid="classclass__mps__2site_1affa4b7514c8c239bae874a13f8a3f2d6" kindref="member">B</ref>().contract(MPS.<ref refid="classclass__mps__2site_1affa4b7514c8c239bae874a13f8a3f2d6" kindref="member">B</ref>().conjugate()<sp/>,<sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0},{0}))</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3})</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="419" refid="namespacetools_1_1common_1_1views_1acbcc5f21e4c79ed662c4b97a79f96f7d" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a30148ac9dc25e67edc6724d8e9be29a8" kindref="member">tools::common::views::get_transfer_matrix_LCGB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPS.<ref refid="classclass__mps__2site_1abd7cd23625abfa85b3adc1514644c982" kindref="member">LC</ref>()</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1af89dd0007ac4d0f4265b5889e356c2d4" kindref="member">GB</ref>(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1},{1}))</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1af89dd0007ac4d0f4265b5889e356c2d4" kindref="member">GB</ref>().conjugate(),<sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({1},{0}))</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(MPS.<ref refid="classclass__mps__2site_1abd7cd23625abfa85b3adc1514644c982" kindref="member">LC</ref>(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2},<sp/>{1})<sp/>)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,3,1,2})</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/norm;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="430" refid="namespacetools_1_1common_1_1views_1ad5c40d98b38bb1d5a8fd190b66b83057" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a9fbc4d04079bbf1a7e61897d2aba21f3" kindref="member">tools::common::views::get_transfer_matrix_theta_evn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views" kindref="compound">tools::common::views</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1a5309629b31a4afeba3596cc060e13ed6" kindref="member">get_theta_evn</ref>(MPS).contract(<ref refid="namespacetools_1_1common_1_1views_1a5309629b31a4afeba3596cc060e13ed6" kindref="member">get_theta_evn</ref>(MPS).conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,2})).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3})<sp/>/<sp/>norm;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="436" refid="namespacetools_1_1common_1_1views_1a8bbfc538041c8bc900ab3813cf6f7259" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a1e5e2ed3a2a08224c98a8f85c3eacdf1" kindref="member">tools::common::views::get_transfer_matrix_theta_odd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/>std::complex&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1views_1ab9d5269980b66fe0dcf9e6551d6171e0" kindref="member">get_theta_odd</ref>(MPS).contract(<ref refid="namespacetools_1_1common_1_1views_1ab9d5269980b66fe0dcf9e6551d6171e0" kindref="member">get_theta_odd</ref>(MPS).conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({0,2},{0,2})).shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">array4</ref>{0,2,1,3})<sp/>/<sp/>norm;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;</highlight></codeline>
<codeline lineno="442" refid="namespacetools_1_1common_1_1views_1ac864d0ae1481abb03065ac6d98cdeace" refkind="member"><highlight class="normal"><ref refid="namespacetools_1_1common_1_1views_1a8cc4639f3ddef3920499b599d333db96" kindref="member">tools::common::views::get_transfer_matrix_AB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__mps__2site" kindref="compound">class_mps_2site</ref><sp/><sp/>&amp;MPS,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>temp<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1views_1a102cca119d88b783c6b60ed85b5c56de" kindref="member">get_transfer_matrix_zero</ref>(MPS);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;std::complex&lt;double&gt;,4&gt;<sp/>temp2;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p-2;<sp/>i++){</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacemath_1a950ba2c26eab3a176711e689337ad0e9" kindref="member">math::mod</ref>(i,2)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>temp.contract(<ref refid="namespacetools_1_1common_1_1views_1ac1b668e1718a849acf7f976e9f076cc1" kindref="member">get_transfer_matrix_LBGA</ref>(MPS),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2,3},{0,1}));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>temp.contract(<ref refid="namespacetools_1_1common_1_1views_1a30148ac9dc25e67edc6724d8e9be29a8" kindref="member">get_transfer_matrix_LCGB</ref>(MPS),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">idx</ref>({2,3},{0,1}));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp2;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/tools/common/views.cpp"/>
  </compounddef>
</doxygen>
