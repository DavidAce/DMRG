<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacetools_1_1finite_1_1ops" kind="namespace" language="C++">
    <compoundname>tools::finite::ops</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" prot="public" static="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>using tools::finite::ops::Scalar = typedef std::complex&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="8" column="5" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a2151c6e92bf85e993c06875ac3ccf653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::ops::apply_mpo</definition>
        <argsstring>(class_state_finite &amp;state, const Eigen::Tensor&lt; Scalar, 4 &gt; &amp;mpo, const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;Ledge, const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;Redge)</argsstring>
        <name>apply_mpo</name>
        <param>
          <type><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 4 &gt; &amp;</type>
          <declname>mpo</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>Ledge</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>Redge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="10" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="23" bodyend="27" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="10" declcolumn="17"/>
        <references refid="namespacetools_1_1finite_1_1ops_1a3d61c6cd52ef1a54ea5c1a0a5e950ecf" compoundref="ops_8cpp" startline="29" endline="63">apply_mpos</references>
        <references refid="classclass__state__finite_1acef57556e5eb3ab21c28588aaae9575b" compoundref="class__state__finite_8cpp" startline="115" endline="117">class_state_finite::get_length</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a3d61c6cd52ef1a54ea5c1a0a5e950ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::ops::apply_mpos</definition>
        <argsstring>(class_state_finite &amp;state, const std::vector&lt; Eigen::Tensor&lt; Scalar, 4 &gt;&gt; &amp;mpos, const Eigen::Tensor&lt; Scalar, 1 &gt; &amp;Ledge, const Eigen::Tensor&lt; Scalar, 1 &gt; &amp;Redge)</argsstring>
        <name>apply_mpos</name>
        <param>
          <type><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const std::vector&lt; Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 4 &gt;&gt; &amp;</type>
          <declname>mpos</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 1 &gt; &amp;</type>
          <declname>Ledge</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 1 &gt; &amp;</type>
          <declname>Redge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="11" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="29" bodyend="63" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="11" declcolumn="17"/>
        <references refid="classclass__state__finite_1a79ddc64014b1469e44229868cc3198f4" compoundref="class__state__finite_8h" startline="50">class_state_finite::mps_sites</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a6c67ca91aeaa2b163c54ffd06f24dac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::ops::apply_mpos</definition>
        <argsstring>(class_state_finite &amp;state, const std::vector&lt; Eigen::Tensor&lt; Scalar, 4 &gt;&gt; &amp;mpos, const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;Ledge, const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;Redge)</argsstring>
        <name>apply_mpos</name>
        <param>
          <type><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const std::vector&lt; Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 4 &gt;&gt; &amp;</type>
          <declname>mpos</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>Ledge</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>Redge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="12" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="65" bodyend="180" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="12" declcolumn="17"/>
        <references refid="namespacetools_1_1finite_1_1ops_1a2151c6e92bf85e993c06875ac3ccf653" compoundref="ops_8cpp" startline="23" endline="27">apply_mpo</references>
        <references refid="classclass__state__finite_1a7f2fa97dc037b0b817b51e7aa9e38460" compoundref="class__state__finite_8cpp" startline="244" endline="252">class_state_finite::assert_validity</references>
        <references refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" compoundref="finite_2measure_8cpp" startline="126" endline="138">tools::finite::measure::bond_dimensions</references>
        <references refid="classclass__state__finite_1a123659e5c3939027f7cbad210f9a8b53" compoundref="class__state__finite_8cpp" startline="455" endline="458">class_state_finite::clear_cache</references>
        <references refid="classclass__state__finite_1aeeb103dfd67addd01bb819bb4a4afdbc" compoundref="class__state__finite_8cpp" startline="450" endline="453">class_state_finite::clear_measurements</references>
        <references refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" compoundref="debug_8h" startline="7">settings::debug</references>
        <references refid="namespacetools_1_1finite_1_1measure_1a4515a169c43487b9dd80ed581c0d1d5e" compoundref="finite_2measure_8cpp" startline="177" endline="199">tools::finite::measure::entanglement_entropies</references>
        <references refid="namespaceiter_1aa13063344fcd21c395fe1c4c2ea6e9a0" compoundref="nmspc__iter_8h" startline="69" endline="71">iter::enumerate</references>
        <references refid="classclass__mps__site_1af5b2479fd39a7691bc62f0f1ec161e2b" compoundref="class__mps__site_8cpp" startline="163" endline="166">class_mps_site::get_label</references>
        <references refid="classclass__state__finite_1acef57556e5eb3ab21c28588aaae9575b" compoundref="class__state__finite_8cpp" startline="115" endline="117">class_state_finite::get_length</references>
        <references refid="classclass__state__finite_1a8cff3eaf9bad48263fe1b9056ac62592" compoundref="class__state__finite_8cpp" startline="265" endline="273">class_state_finite::get_mps_site</references>
        <references refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" compoundref="nmspc__tensor__extra_8h" startline="41" endline="41">Textra::idx</references>
        <references refid="classclass__mps__site_1a7fdd521f619a8c39b8549d450814c419" compoundref="class__mps__site_8cpp" startline="55" endline="55">class_mps_site::isCenter</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" compoundref="finite_2measure_8cpp" startline="57" endline="109">tools::finite::measure::norm</references>
        <references refid="namespacetools_1_1finite_1_1measure_1a22e2b3240464cf0e14082b7386acbe3b" compoundref="finite_2measure_8cpp" startline="242" endline="249">tools::finite::measure::spin_components</references>
        <references refid="classclass__state__finite_1aac20894e82fc4759efd31d0606536c7e" compoundref="class__state__finite_8cpp" startline="467" endline="470">class_state_finite::tag_all_sites_normalized</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a03e4f4f7d24c8c7176cc29e7c947af50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::ops::project_to_nearest_sector</definition>
        <argsstring>(class_state_finite &amp;state, const std::string &amp;sector)</argsstring>
        <name>project_to_nearest_sector</name>
        <param>
          <type><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>sector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="13" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="204" bodyend="257" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="13" declcolumn="17"/>
        <references refid="namespacetools_1_1finite_1_1mps_1_1internal_1aa1d56c23e5edb26a4066913db22dde4e" compoundref="product__states_8cpp" startline="53" endline="60">tools::finite::mps::internal::get_pauli</references>
        <references refid="namespacetools_1_1finite_1_1mps_1_1internal_1af50ad4a2ee14680748e5760b9df4b296" compoundref="product__states_8cpp" startline="20" endline="27">tools::finite::mps::internal::get_sign</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="namespacetools_1_1finite_1_1ops_1a8eb586b69849df685d429d453a414984" compoundref="ops_8cpp" startline="182" endline="202">project_to_sector</references>
        <references refid="namespacetools_1_1finite_1_1measure_1ab70288b0d3d905f3ec211b994699861d" compoundref="finite_2measure_8cpp" startline="251" endline="266">tools::finite::measure::spin_component</references>
        <references refid="namespaceqm_1_1spin_half_1ae2a3b703d77bff861c17f02785eb4539" compoundref="nmspc__quantum__mechanics_8cpp" startline="73">qm::spinHalf::sx</references>
        <references refid="namespaceqm_1_1spin_half_1ad89389f68e78e9d72c2249d69ed2d397" compoundref="nmspc__quantum__mechanics_8cpp" startline="76">qm::spinHalf::sy</references>
        <references refid="namespaceqm_1_1spin_half_1ac450a6ccd34bddc24f807f0b3a97ea5f" compoundref="nmspc__quantum__mechanics_8cpp" startline="79">qm::spinHalf::sz</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a8eb586b69849df685d429d453a414984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::ops::project_to_sector</definition>
        <argsstring>(class_state_finite &amp;state, const Eigen::MatrixXcd &amp;paulimatrix, int sign)</argsstring>
        <name>project_to_sector</name>
        <param>
          <type><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_eigen_1aef9ed31256193462d78ea092d5a533da" kindref="member">Eigen::MatrixXcd</ref> &amp;</type>
          <declname>paulimatrix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="14" column="17" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="182" bodyend="202" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="14" declcolumn="17"/>
        <references refid="namespacetools_1_1finite_1_1ops_1a3d61c6cd52ef1a54ea5c1a0a5e950ecf" compoundref="ops_8cpp" startline="29" endline="63">apply_mpos</references>
        <references refid="classclass__state__finite_1a123659e5c3939027f7cbad210f9a8b53" compoundref="class__state__finite_8cpp" startline="455" endline="458">class_state_finite::clear_cache</references>
        <references refid="classclass__state__finite_1aeeb103dfd67addd01bb819bb4a4afdbc" compoundref="class__state__finite_8cpp" startline="450" endline="453">class_state_finite::clear_measurements</references>
        <references refid="namespacetools_1_1common_1_1profile_1ae302ec3b2665b7eb9f69b892d6b8c08e" compoundref="prof_8cpp" startline="68" endline="71">tools::common::profile::get_default_prof</references>
        <references refid="classclass__state__finite_1acef57556e5eb3ab21c28588aaae9575b" compoundref="class__state__finite_8cpp" startline="115" endline="117">class_state_finite::get_length</references>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="log_8h" startline="5">tools::log</references>
        <references refid="namespaceqm_1_1mpo_1a31cb135a8b7fc64fc83d01c6372b06c0" compoundref="nmspc__quantum__mechanics_8cpp" startline="680" endline="718">qm::mpo::parity_projector_mpos</references>
        <references refid="namespacetools_1_1finite_1_1measure_1a22e2b3240464cf0e14082b7386acbe3b" compoundref="finite_2measure_8cpp" startline="242" endline="249">tools::finite::measure::spin_components</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a62c509d985cb97e3a80c137ded09f37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref></type>
        <definition>class_state_finite tools::finite::ops::get_projection_to_sector</definition>
        <argsstring>(const class_state_finite &amp;state, const Eigen::MatrixXcd &amp;paulimatrix, int sign)</argsstring>
        <name>get_projection_to_sector</name>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_eigen_1aef9ed31256193462d78ea092d5a533da" kindref="member">Eigen::MatrixXcd</ref> &amp;</type>
          <declname>paulimatrix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="16" column="24" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="259" bodyend="263" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="16" declcolumn="24"/>
        <references refid="namespacetools_1_1finite_1_1ops_1a8eb586b69849df685d429d453a414984" compoundref="ops_8cpp" startline="182" endline="202">project_to_sector</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1ae6b1db57079ef8bc7bcadbfbb62542fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref></type>
        <definition>class_state_finite tools::finite::ops::get_projection_to_nearest_sector</definition>
        <argsstring>(const class_state_finite &amp;state, const std::string &amp;sector)</argsstring>
        <name>get_projection_to_nearest_sector</name>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>sector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="18" column="24" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="265" bodyend="269" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="18" declcolumn="24"/>
        <references refid="namespacetools_1_1finite_1_1ops_1a03e4f4f7d24c8c7176cc29e7c947af50" compoundref="ops_8cpp" startline="204" endline="257">project_to_nearest_sector</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a465b189c211d37ae93982966c8baf98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::finite::ops::overlap</definition>
        <argsstring>(const class_state_finite &amp;state1, const class_state_finite &amp;state2)</argsstring>
        <name>overlap</name>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state1</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="20" column="20" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="271" bodyend="284" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="20" declcolumn="20"/>
        <references refid="classclass__state__finite_1acef57556e5eb3ab21c28588aaae9575b" compoundref="class__state__finite_8cpp" startline="115" endline="117">class_state_finite::get_length</references>
        <references refid="classclass__mps__site_1ac7ede498990cefe06828699f21eae72f" compoundref="class__mps__site_8cpp" startline="115" endline="131">class_mps_site::get_M</references>
        <references refid="classclass__state__finite_1a8cff3eaf9bad48263fe1b9056ac62592" compoundref="class__state__finite_8cpp" startline="265" endline="273">class_state_finite::get_mps_site</references>
        <references refid="classclass__state__finite_1af27b5634665d41f1393d1674396f8530" compoundref="class__state__finite_8cpp" startline="124" endline="139">class_state_finite::get_position</references>
        <references refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" compoundref="nmspc__tensor__extra_8h" startline="41" endline="41">Textra::idx</references>
        <references refid="namespace_textra_1a82d0a0f369c18c8430752d4108f05acc" compoundref="nmspc__tensor__extra_8h" startline="288" endline="290">Textra::MatrixMap</references>
        <references refid="namespace_textra_1ae011dc74fd0ff312cc0d957a688142c9" compoundref="nmspc__tensor__extra_8h" startline="179" endline="189">Textra::trace</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a58f77875dca562913bda706c62a7b3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::finite::ops::expectation_value</definition>
        <argsstring>(const class_state_finite &amp;state1, const class_state_finite &amp;state2, const std::vector&lt; Eigen::Tensor&lt; Scalar, 4 &gt;&gt; &amp;mpos, const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;Ledge, const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;Redge)</argsstring>
        <name>expectation_value</name>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state1</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state2</declname>
        </param>
        <param>
          <type>const std::vector&lt; Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 4 &gt;&gt; &amp;</type>
          <declname>mpos</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>Ledge</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>Redge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="21" column="20" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="286" bodyend="305" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="21" declcolumn="20"/>
        <references refid="classclass__state__finite_1acef57556e5eb3ab21c28588aaae9575b" compoundref="class__state__finite_8cpp" startline="115" endline="117">class_state_finite::get_length</references>
        <references refid="classclass__mps__site_1ac7ede498990cefe06828699f21eae72f" compoundref="class__mps__site_8cpp" startline="115" endline="131">class_mps_site::get_M</references>
        <references refid="classclass__state__finite_1a8cff3eaf9bad48263fe1b9056ac62592" compoundref="class__state__finite_8cpp" startline="265" endline="273">class_state_finite::get_mps_site</references>
        <references refid="classclass__state__finite_1af27b5634665d41f1393d1674396f8530" compoundref="class__state__finite_8cpp" startline="124" endline="139">class_state_finite::get_position</references>
        <references refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" compoundref="nmspc__tensor__extra_8h" startline="41" endline="41">Textra::idx</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1ops_1a80cb9256a6269dba1d3768626b8e71c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::finite::ops::exp_sq_value</definition>
        <argsstring>(const class_state_finite &amp;state1, const class_state_finite &amp;state2, const std::vector&lt; Eigen::Tensor&lt; Scalar, 4 &gt;&gt; &amp;mpos, const Eigen::Tensor&lt; Scalar, 4 &gt; &amp;Ledge, const Eigen::Tensor&lt; Scalar, 4 &gt; &amp;Redge)</argsstring>
        <name>exp_sq_value</name>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state1</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref> &amp;</type>
          <declname>state2</declname>
        </param>
        <param>
          <type>const std::vector&lt; Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 4 &gt;&gt; &amp;</type>
          <declname>mpos</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 4 &gt; &amp;</type>
          <declname>Ledge</declname>
        </param>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1_1ops_1a39c7843fbc80fa5a1ecaccc914eeb69c" kindref="member">Scalar</ref>, 4 &gt; &amp;</type>
          <declname>Redge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="22" column="20" bodyfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.cpp" bodystart="307" bodyend="326" declfile="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" declline="22" declcolumn="20"/>
        <references refid="classclass__state__finite_1acef57556e5eb3ab21c28588aaae9575b" compoundref="class__state__finite_8cpp" startline="115" endline="117">class_state_finite::get_length</references>
        <references refid="classclass__mps__site_1ac7ede498990cefe06828699f21eae72f" compoundref="class__mps__site_8cpp" startline="115" endline="131">class_mps_site::get_M</references>
        <references refid="classclass__state__finite_1a8cff3eaf9bad48263fe1b9056ac62592" compoundref="class__state__finite_8cpp" startline="265" endline="273">class_state_finite::get_mps_site</references>
        <references refid="classclass__state__finite_1af27b5634665d41f1393d1674396f8530" compoundref="class__state__finite_8cpp" startline="124" endline="139">class_state_finite::get_position</references>
        <references refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" compoundref="nmspc__tensor__extra_8h" startline="41" endline="41">Textra::idx</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/GitProjects/DMRG++/source/tools/finite/ops.h" line="7" column="1"/>
  </compounddef>
</doxygen>
