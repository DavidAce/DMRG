<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacetools_1_1infinite_1_1debug" kind="namespace" language="C++">
    <compoundname>tools::infinite::debug</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1debug_1aad8fbe251a7e3a2c7a26faa61d61e44c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::infinite::debug::check_integrity</definition>
        <argsstring>(const class_infinite_state &amp;state, const class_simulation_status &amp;sim_status)</argsstring>
        <name>check_integrity</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__simulation__status" kindref="compound">class_simulation_status</ref> &amp;</type>
          <declname>sim_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="243" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/infinite/debug.cpp" bodystart="12" bodyend="32"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="namespacetools_1_1finite_1_1debug_1ac04a2c7103eb4e428175e373c3b0100c" compoundref="finite_2debug_8cpp" startline="32" endline="232">tools::finite::debug::check_integrity_of_mps</references>
        <references refid="namespacetools_1_1infinite_1_1print_1aa1baae33590d40df78cccb68d0f19ddb" compoundref="infinite_2print_8cpp" startline="17" endline="22">tools::infinite::print::print_state</references>
        <references refid="namespacetools_1_1infinite_1_1measure_1a601facbe89d868ffadaafdb9a1a7d6f5" compoundref="infinite_2measure_8cpp" startline="406" endline="412">tools::infinite::measure::norm</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1debug_1a949607f389bc6ba5eb2171b87fefef4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::infinite::debug::check_integrity_of_sim</definition>
        <argsstring>(const class_infinite_state &amp;state, const class_simulation_status &amp;sim_status)</argsstring>
        <name>check_integrity_of_sim</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__simulation__status" kindref="compound">class_simulation_status</ref> &amp;</type>
          <declname>sim_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1debug_1a9e95eb2e81af56102b05c1995c972b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::infinite::debug::check_integrity_of_mps</definition>
        <argsstring>(const class_infinite_state &amp;state)</argsstring>
        <name>check_integrity_of_mps</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="245" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/infinite/debug.cpp" bodystart="37" bodyend="161"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1debug_1a551d3124a2f096b563cfbc8833772f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::infinite::debug::check_normalization_routine</definition>
        <argsstring>(const class_infinite_state &amp;state)</argsstring>
        <name>check_normalization_routine</name>
        <param>
          <type>const <ref refid="classclass__infinite__state" kindref="compound">class_infinite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="246" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="242" column="1"/>
  </compounddef>
</doxygen>
