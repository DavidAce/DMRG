<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacetools_1_1infinite_1_1measure" kind="namespace" language="C++">
    <compoundname>tools::infinite::measure</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacetools_1_1infinite_1_1measure_1a6deac2212a6da5e89307edeff8ec71d9" prot="public" static="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>using tools::infinite::measure::Scalar = typedef std::complex&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="11" column="5" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a8f2a9f5a8d62b3621fcd83df9b21c5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::infinite::measure::do_all_measurements</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>do_all_measurements</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="13" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="15" bodyend="25" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="13" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a517710e668b0111d86ccab7dea589394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::infinite::measure::do_all_measurements</definition>
        <argsstring>(const class_state_infinite &amp;state)</argsstring>
        <name>do_all_measurements</name>
        <param>
          <type>const <ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="14" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="27" bodyend="32" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="14" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a69cf11302a3bbbafd2ffef1de31989ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tools::infinite::measure::length</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>length</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="16" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="34" bodyend="34" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="16" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a5852ce8697aa14bf157e2cbe81a3be7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tools::infinite::measure::length</definition>
        <argsstring>(const class_edges_infinite &amp;edges)</argsstring>
        <name>length</name>
        <param>
          <type>const <ref refid="classclass__edges__infinite" kindref="compound">class_edges_infinite</ref> &amp;</type>
          <declname>edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="17" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="35" bodyend="35" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="17" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a64e18edd16eb044bcaf44469bc885ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long tools::infinite::measure::bond_dimension</definition>
        <argsstring>(const class_state_infinite &amp;state)</argsstring>
        <name>bond_dimension</name>
        <param>
          <type>const <ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="18" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="43" bodyend="47" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="18" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a860d7ed08bbc15df634ab137a7b32eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::truncation_error</definition>
        <argsstring>(const class_state_infinite &amp;state)</argsstring>
        <name>truncation_error</name>
        <param>
          <type>const <ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="19" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="49" bodyend="53" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="19" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a2c553c8536fb81c5cf371b12e35c8f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::norm</definition>
        <argsstring>(const class_state_infinite &amp;state)</argsstring>
        <name>norm</name>
        <param>
          <type>const <ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="20" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="37" bodyend="41" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="20" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a5f7cd48eec3194c0d02aa53050d28f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::entanglement_entropy</definition>
        <argsstring>(const class_state_infinite &amp;state)</argsstring>
        <name>entanglement_entropy</name>
        <param>
          <type>const <ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="21" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="55" bodyend="63" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="21" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1ae1ab58fcaec28b125b22c8ac8b113e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename state_or_mps_type</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double tools::infinite::measure::energy_minus_energy_reduced</definition>
        <argsstring>(const state_or_mps_type &amp;state, const class_model_infinite &amp;model, const class_edges_infinite &amp;edges)</argsstring>
        <name>energy_minus_energy_reduced</name>
        <param>
          <type>const state_or_mps_type &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__model__infinite" kindref="compound">class_model_infinite</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__edges__infinite" kindref="compound">class_edges_infinite</ref> &amp;</type>
          <declname>edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="24" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="66" bodyend="78" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="24" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1abc55042f3fe9f3ea3e64d31896600a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename state_or_mps_type</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double tools::infinite::measure::energy_mpo</definition>
        <argsstring>(const state_or_mps_type &amp;state, const class_model_infinite &amp;model, const class_edges_infinite &amp;edges)</argsstring>
        <name>energy_mpo</name>
        <param>
          <type>const state_or_mps_type &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__model__infinite" kindref="compound">class_model_infinite</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__edges__infinite" kindref="compound">class_edges_infinite</ref> &amp;</type>
          <declname>edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="26" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="86" bodyend="92" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="26" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a2283571fb9ddaedbc3d50e89d946d522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename state_or_mps_type</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double tools::infinite::measure::energy_per_site_mpo</definition>
        <argsstring>(const state_or_mps_type &amp;state, const class_model_infinite &amp;model, const class_edges_infinite &amp;edges)</argsstring>
        <name>energy_per_site_mpo</name>
        <param>
          <type>const state_or_mps_type &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__model__infinite" kindref="compound">class_model_infinite</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__edges__infinite" kindref="compound">class_edges_infinite</ref> &amp;</type>
          <declname>edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="28" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="98" bodyend="101" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="28" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1aa5e135430c4a3c285f6a4972fe2155d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename state_or_mps_type</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double tools::infinite::measure::energy_variance_mpo</definition>
        <argsstring>(const state_or_mps_type &amp;state, const class_model_infinite &amp;model, const class_edges_infinite &amp;edges)</argsstring>
        <name>energy_variance_mpo</name>
        <param>
          <type>const state_or_mps_type &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__model__infinite" kindref="compound">class_model_infinite</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__edges__infinite" kindref="compound">class_edges_infinite</ref> &amp;</type>
          <declname>edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="30" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="109" bodyend="138" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="30" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a5fdaab6447c154cd9720d8b834170a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename state_or_mps_type</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double tools::infinite::measure::energy_variance_per_site_mpo</definition>
        <argsstring>(const state_or_mps_type &amp;state, const class_model_infinite &amp;model, const class_edges_infinite &amp;edges)</argsstring>
        <name>energy_variance_per_site_mpo</name>
        <param>
          <type>const state_or_mps_type &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__model__infinite" kindref="compound">class_model_infinite</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__edges__infinite" kindref="compound">class_edges_infinite</ref> &amp;</type>
          <declname>edges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="32" column="12" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="146" bodyend="150" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="32" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a9f45be62e977490803ca97abb94b32ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_mpo</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_mpo</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="34" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="157" bodyend="161" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="34" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1ab736e5e958daa1b7429728c0ce3254d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_per_site_mpo</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_per_site_mpo</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="35" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="163" bodyend="169" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="35" declcolumn="19"/>
        <references refid="namespacetools_1_1infinite_1_1measure_1a69cf11302a3bbbafd2ffef1de31989ee" compoundref="infinite_2measure_8cpp" startline="34" endline="34">length</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a0ff056dbcf87401557156fdc802be894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_variance_mpo</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_variance_mpo</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="36" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="171" bodyend="175" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="36" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1ad65c173af2297ca2a6a313abb1e88506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_variance_per_site_mpo</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_variance_per_site_mpo</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="37" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="177" bodyend="182" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="37" declcolumn="19"/>
        <references refid="namespacetools_1_1infinite_1_1measure_1a69cf11302a3bbbafd2ffef1de31989ee" compoundref="infinite_2measure_8cpp" startline="34" endline="34">length</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1ac1916cc76d3077f384a9502a5a017964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_mpo</definition>
        <argsstring>(const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;mps, const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_mpo</name>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1infinite_1_1measure_1a6deac2212a6da5e89307edeff8ec71d9" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>mps</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="39" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="184" bodyend="186" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="39" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a9681d5453ba5aa271a34d31fd297c8a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_per_site_mpo</definition>
        <argsstring>(const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;mps, const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_per_site_mpo</name>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1infinite_1_1measure_1a6deac2212a6da5e89307edeff8ec71d9" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>mps</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="40" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="187" bodyend="189" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="40" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a025e205b4dab4731a456c5dbc24dd38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_variance_mpo</definition>
        <argsstring>(const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;mps, const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_variance_mpo</name>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1infinite_1_1measure_1a6deac2212a6da5e89307edeff8ec71d9" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>mps</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="41" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="190" bodyend="192" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="41" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1ab1d32cdbdbae2053797e6b3b87d29d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_variance_per_site_mpo</definition>
        <argsstring>(const Eigen::Tensor&lt; Scalar, 3 &gt; &amp;mps, const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_variance_per_site_mpo</name>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="namespacetools_1_1infinite_1_1measure_1a6deac2212a6da5e89307edeff8ec71d9" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>mps</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="42" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.cpp" bodystart="193" bodyend="195" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="42" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a5f97c023ac5900d6961a0f23a51123d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_per_site_ham</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_per_site_ham</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="44" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure_ham.cpp" bodystart="18" bodyend="45" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="44" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a564124518e60fd2f24f8b50b55ac3b63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_per_site_mom</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_per_site_mom</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="45" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure_mom.cpp" bodystart="54" bodyend="82" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="45" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1ab68500e123314ceee061039c7df370f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_variance_per_site_ham</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_variance_per_site_ham</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="46" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure_ham.cpp" bodystart="47" bodyend="174" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="46" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1infinite_1_1measure_1a1d3a4106d2bbb62e9f844966c935bc1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tools::infinite::measure::energy_variance_per_site_mom</definition>
        <argsstring>(const class_tensors_infinite &amp;tensors)</argsstring>
        <name>energy_variance_per_site_mom</name>
        <param>
          <type>const <ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref> &amp;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="47" column="19" bodyfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure_mom.cpp" bodystart="84" bodyend="88" declfile="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" declline="47" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/GitProjects/DMRG++/source/tools/infinite/measure.h" line="10" column="34"/>
  </compounddef>
</doxygen>
