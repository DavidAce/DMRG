<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class__algorithm__infinite_8h" kind="file" language="C++">
    <compoundname>class_algorithm_infinite.h</compoundname>
    <includes refid="class__algorithm__base_8h" local="no">algorithms/class_algorithm_base.h</includes>
    <includes refid="class__tensors__infinite_8h" local="no">tensors/class_tensors_infinite.h</includes>
    <includedby refid="class__algorithm__infinite_8cpp" local="yes">/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp</includedby>
    <includedby refid="class__idmrg_8h" local="yes">/home/david/GitProjects/DMRG++/source/algorithms/class_idmrg.h</includedby>
    <includedby refid="class__itebd_8h" local="yes">/home/david/GitProjects/DMRG++/source/algorithms/class_itebd.h</includedby>
    <incdepgraph>
      <node id="24">
        <label>measure/tensors_measure_infinite.h</label>
        <link refid="tensors__measure__infinite_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>limits</label>
      </node>
      <node id="19">
        <label>Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="14">
        <label>tensors/class_tensors_infinite.h</label>
        <link refid="class__tensors__infinite_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>numeric</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="22">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h</label>
      </node>
      <node id="26">
        <label>math/svd/settings.h</label>
        <link refid="svd_2settings_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorMacros.h</label>
      </node>
      <node id="27">
        <label>fmt/core.h</label>
      </node>
      <node id="9">
        <label>string_view</label>
      </node>
      <node id="13">
        <label>optional</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="15">
        <label>general/eigen_tensor_fwd_decl.h</label>
        <link refid="eigen__tensor__fwd__decl_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>array</label>
      </node>
      <node id="20">
        <label>Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="21">
        <label>Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="18">
        <label>Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="2">
        <label>algorithms/class_algorithm_base.h</label>
        <link refid="class__algorithm__base_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h</label>
        <link refid="class__algorithm__infinite_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>complex</label>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
      <node id="6">
        <label>config/enums.h</label>
        <link refid="config_2enums_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithms/class_algorithm_status.h</label>
        <link refid="class__algorithm__status_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_idmrg.h</label>
        <link refid="class__idmrg_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_launcher.cpp</label>
        <link refid="class__algorithm__launcher_8cpp"/>
      </node>
      <node id="6">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_itebd.h</label>
        <link refid="class__itebd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_itebd.cpp</label>
        <link refid="class__itebd_8cpp"/>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h</label>
        <link refid="class__algorithm__infinite_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.cpp</label>
        <link refid="class__algorithm__infinite_8cpp"/>
      </node>
      <node id="5">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_idmrg.cpp</label>
        <link refid="class__idmrg_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classclass__algorithm__infinite" prot="public">class_algorithm_infinite</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-06-24.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__algorithm__base_8h" kindref="compound">algorithms/class_algorithm_base.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__tensors__infinite_8h" kindref="compound">tensors/class_tensors_infinite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__state__infinite" kindref="compound">class_state_infinite</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__model__infinite" kindref="compound">class_model_infinite</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__edges__infinite" kindref="compound">class_edges_infinite</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classclass__algorithm__infinite" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classclass__algorithm__infinite" kindref="compound">class_algorithm_infinite</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__base" kindref="compound">class_algorithm_base</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inherit<sp/>the<sp/>constructor<sp/>of<sp/>class_algorithm_base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__base_1a35e482872c1dec9372c74c40a82208d0" kindref="member">class_algorithm_base::class_algorithm_base</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a0ad18e5b809b20e90df53c67e2421ef2" kindref="member">class_algorithm_infinite</ref>(std::shared_ptr&lt;h5pp::File&gt;<sp/>h5ppFile_,<sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9" kindref="member">AlgorithmType</ref><sp/><ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>);</highlight></codeline>
<codeline lineno="17" refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__tensors__infinite" kindref="compound">class_tensors_infinite</ref><sp/><ref refid="classclass__algorithm__infinite_1ae94c13ba920ab9e766ab8c1dd206001a" kindref="member">tensors</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_state_infinite&gt;<sp/>state;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::shared_ptr&lt;class_h5table_buffer&lt;class_h5table_measurements_infinite&gt;&gt;<sp/><sp/>h5tbuf_measurements;<sp/>//Written<sp/>every<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classclass__algorithm__infinite_1abdf68a4ae64f7302ad9e82a48d468e8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1abdf68a4ae64f7302ad9e82a48d468e8a" kindref="member">run_simulation</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a2cabf133e43683569ef43b9639476dab" kindref="member">run_preprocessing</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1aa7176e26e0dd793557a649fc6c0b75f1" kindref="member">run_postprocessing</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1ae14b72b2eb26ac37f453c24cd2c5a68c" kindref="member">run</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1acb14ea81ee6e72bc06bd3fbd1627249b" kindref="member">update_variance_max_digits</ref>(std::optional&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref><sp/>=<sp/>std::nullopt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a93e97af4e20920c9690ff47fe78ddd60" kindref="member">update_bond_dimension_limit</ref>(std::optional&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&gt;<sp/>max_bond_dim<sp/>=<sp/>std::nullopt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a97d87cb8fcb7ddd09913e1cabdcd1394" kindref="member">randomize_model</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a2573591517d4f3874fa0ab7c6cbea2a8" kindref="member">randomize_state</ref>(<ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11" kindref="member">ResetReason</ref><sp/>reason,<sp/>std::optional&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;<sp/>sector<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&gt;<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref><sp/>=<sp/>std::nullopt,<sp/>std::optional&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref><sp/>=<sp/>std::nullopt);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a2602edae65f1a9bf3b5437c2cdc446de" kindref="member">clear_convergence_status</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>override;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a7453802a0486ef742f2cba4b44060526" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref><sp/>storage_reason<sp/>=<sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref>::<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a0f15e1247e93ddfa95c008106eb0d22f" kindref="member">CHECKPOINT</ref>,<sp/>std::optional&lt;<ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5" kindref="member">CopyPolicy</ref>&gt;<sp/>copy_policy<sp/>=<sp/>std::nullopt)<sp/>final;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1af232e6d037549f0aae338b402aa9c722" kindref="member">print_status_update</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a993724b938167db865be9b23f291b5d9" kindref="member">print_status_full</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clang-format<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a56ef1b5db54adc543de14e45914df2dd" kindref="member">check_convergence_variance_mpo</ref>(std::optional&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>threshold<sp/>=<sp/>std::nullopt,<sp/>std::optional&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>sensitivity<sp/>=<sp/>std::nullopt);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a1981c6eb3dd36a72d4b9660a428124d2" kindref="member">check_convergence_variance_ham</ref>(std::optional&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>threshold<sp/>=<sp/>std::nullopt,<sp/>std::optional&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>sensitivity<sp/>=<sp/>std::nullopt);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1add59585709650152d0ab044fd88e715e" kindref="member">check_convergence_variance_mom</ref>(std::optional&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>threshold<sp/>=<sp/>std::nullopt,<sp/>std::optional&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>sensitivity<sp/>=<sp/>std::nullopt);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__infinite_1a678214cd778c2be70fc86cab66e406ae" kindref="member">check_convergence_entg_entropy</ref>(std::optional&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>sensitivity<sp/>=<sp/>std::nullopt);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/><ref refid="classclass__algorithm__infinite_1ae453c5a7ba02dc74b473f1a2f20552cd" kindref="member">var_mpo_iter</ref>;<sp/></highlight><highlight class="comment">//<sp/>History<sp/>of<sp/>energy<sp/>variances<sp/>(from<sp/>mpo)<sp/>at<sp/>each<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/><ref refid="classclass__algorithm__infinite_1a1cdf17c99c068a231d0f7804d2d48734" kindref="member">var_ham_iter</ref>;</highlight></codeline>
<codeline lineno="47" refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/><ref refid="classclass__algorithm__infinite_1ad93d7551dc4d3cb8aa08e1de053d4d37" kindref="member">var_mom_iter</ref>;</highlight></codeline>
<codeline lineno="48" refid="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/><ref refid="classclass__algorithm__infinite_1aa2eef810a05455e20d99ed8053003539" kindref="member">entropy_iter</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_infinite.h"/>
  </compounddef>
</doxygen>
