<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ceres__direct__functor_8cpp" kind="file" language="C++">
    <compoundname>ceres_direct_functor.cpp</compoundname>
    <includes refid="ceres__direct__functor_8h" local="yes">ceres_direct_functor.h</includes>
    <includes refid="debug_8h" local="no">config/debug.h</includes>
    <includes refid="class__tensors__finite_8h" local="no">tensors/class_tensors_finite.h</includes>
    <includes refid="contraction_8h" local="no">tools/common/contraction.h</includes>
    <includes refid="log_8h" local="no">tools/common/log.h</includes>
    <includes refid="prof_8h" local="no">tools/common/prof.h</includes>
    <includes refid="opt-internal_8h" local="no">tools/finite/opt-internal/opt-internal.h</includes>
    <includes refid="math_2svd_8h" local="no">math/svd.h</includes>
    <incdepgraph>
      <node id="5">
        <label>ceres/iteration_callback.h</label>
      </node>
      <node id="20">
        <label>limits</label>
      </node>
      <node id="9">
        <label>tensors/class_tensors_finite.h</label>
        <link refid="class__tensors__finite_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>iterator</label>
      </node>
      <node id="2">
        <label>ceres_direct_functor.h</label>
        <link refid="ceres__direct__functor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>tools/common/contraction.h</label>
        <link refid="contraction_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>io/spdlog.h</label>
        <link refid="spdlog_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="46">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>config/debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="33">
        <label>tools/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="34">
        <label>io/fmt.h</label>
        <link refid="io_2fmt_8h"/>
      </node>
      <node id="45">
        <label>math/num.h</label>
        <link refid="num_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="42">
        <label>math/svd.h</label>
        <link refid="math_2svd_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>measure/tensors_measure_finite.h</label>
        <link refid="tensors__measure__finite_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="29">
        <label>tensors/edges/class_env_pair.h</label>
        <link refid="class__env__pair_8h"/>
      </node>
      <node id="25">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h</label>
      </node>
      <node id="30">
        <label>math/svd/settings.h</label>
        <link refid="svd_2settings_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorMacros.h</label>
      </node>
      <node id="31">
        <label>fmt/core.h</label>
      </node>
      <node id="4">
        <label>ceres/first_order_function.h</label>
      </node>
      <node id="15">
        <label>string_view</label>
      </node>
      <node id="28">
        <label>optional</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
      <node id="18">
        <label>general/eigen_tensor_fwd_decl.h</label>
        <link refid="eigen__tensor__fwd__decl_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>tools/common/prof.h</label>
        <link refid="prof_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>array</label>
      </node>
      <node id="43">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="24">
        <label>Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/tools/finite/opt-internal/ceres_direct_functor.cpp</label>
        <link refid="ceres__direct__functor_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>tools/finite/opt-internal/opt-internal.h</label>
        <link refid="opt-internal_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>chrono</label>
      </node>
      <node id="21">
        <label>Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="44">
        <label>general/nmspc_sfinae.h</label>
        <link refid="nmspc__sfinae_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>tools/finite/opt.h</label>
        <link refid="finite_2opt_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>type_traits</label>
      </node>
      <node id="40">
        <label>ceres/gradient_problem_solver.h</label>
      </node>
      <node id="11">
        <label>complex</label>
      </node>
      <node id="3">
        <label>tools/finite/opt-internal/ceres_base.h</label>
        <link refid="ceres__base_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="12">
        <label>config/enums.h</label>
        <link refid="config_2enums_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacedebug">debug</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-07-15.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ceres__direct__functor_8h" kindref="compound">ceres_direct_functor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="debug_8h" kindref="compound">config/debug.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__tensors__finite_8h" kindref="compound">tensors/class_tensors_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="contraction_8h" kindref="compound">tools/common/contraction.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log_8h" kindref="compound">tools/common/log.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prof_8h" kindref="compound">tools/common/prof.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="opt-internal_8h" kindref="compound">tools/finite/opt-internal/opt-internal.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="math_2svd_8h" kindref="compound">math/svd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedebug" kindref="compound">debug</ref>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="16" refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">hasNaN</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::EigenBase&lt;Derived&gt;<sp/>&amp;obj,<sp/>[[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj.derived().hasNaN();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar,<sp/>auto<sp/>rank&gt;</highlight></codeline>
<codeline lineno="21" refid="namespacedebug_1aed4c52c34fbb8fe91d9f4bbe3b349c54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">hasNaN</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,<sp/>rank&gt;<sp/>&amp;tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Map&lt;const<sp/>Eigen::Matrix&lt;Scalar,<sp/>Eigen::Dynamic,<sp/>1&gt;&gt;<sp/>vector(tensor.data(),<sp/>tensor.size());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">hasNaN</ref>(vector,<sp/>name);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1finite_1_1opt_1_1internal" kindref="compound">tools::finite::opt::internal</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="31" refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a2cb9c5ba89f9725b5830361ca74358b2" refkind="member"><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a2cb9c5ba89f9725b5830361ca74358b2" kindref="member">ceres_direct_functor&lt;Scalar&gt;::ceres_direct_functor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__tensors__finite" kindref="compound">class_tensors_finite</ref><sp/>&amp;tensors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__status" kindref="compound">class_algorithm_status</ref><sp/>&amp;status)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__base__functor" kindref="compound">ceres_base_functor</ref>(tensors,<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Constructing<sp/>direct<sp/>functor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same&lt;Scalar,<sp/>double&gt;::value)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;-<sp/>Generating<sp/>real-valued<sp/>multisite<sp/>components&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a550e3150463193c78ec09a739ab692e9" kindref="member">mpo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1a0b9db303a34df4b74e23f4983b5a72b9" kindref="member">get_multisite_mpo</ref>().real();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1ac6b7935725bbd4c6f573a547d70d05c4" kindref="member">mpo2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1abd4db7bccd10cded53ab521ffa9d84a3" kindref="member">get_multisite_mpo_squared</ref>().real();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;env_ene<sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1aec9c56a31e44834b29cfd80267b7a0b4" kindref="member">get_multisite_ene_blk</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;env_var<sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1a5b7b07dd18d5509ad4e6448a69aa3627" kindref="member">get_multisite_var_blk</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a4b4e3326e33d636f17c59cce065a95d2" kindref="member">envL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env_ene.L.real();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a77d6844e2023e884ed51f16aa7ccd7de" kindref="member">envR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env_ene.R.real();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1aff6cb0098987b7474437a0bc5e5e4969" kindref="member">env2L</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env_var.L.real();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a7279c342dcaaccae09149992db75afe0" kindref="member">env2R</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env_var.R.real();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same&lt;<ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref>,<sp/>std::complex&lt;double&gt;&gt;::value)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;-<sp/>Generating<sp/>complex-valued<sp/>multisite<sp/>components&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a550e3150463193c78ec09a739ab692e9" kindref="member">mpo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1a0b9db303a34df4b74e23f4983b5a72b9" kindref="member">get_multisite_mpo</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1ac6b7935725bbd4c6f573a547d70d05c4" kindref="member">mpo2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1abd4db7bccd10cded53ab521ffa9d84a3" kindref="member">get_multisite_mpo_squared</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;env_ene<sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1aec9c56a31e44834b29cfd80267b7a0b4" kindref="member">get_multisite_ene_blk</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;env_var<sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1a5b7b07dd18d5509ad4e6448a69aa3627" kindref="member">get_multisite_var_blk</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a4b4e3326e33d636f17c59cce065a95d2" kindref="member">envL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env_ene.L;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a77d6844e2023e884ed51f16aa7ccd7de" kindref="member">envR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env_ene.R;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1aff6cb0098987b7474437a0bc5e5e4969" kindref="member">env2L</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env_var.L;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a7279c342dcaaccae09149992db75afe0" kindref="member">env2R</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>env_var.R;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(<ref refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" kindref="member">settings::debug</ref>){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>msg;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">debug::hasNaN</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a550e3150463193c78ec09a739ab692e9" kindref="member">mpo</ref>))<sp/>msg.append(</highlight><highlight class="stringliteral">&quot;\t<sp/>mpo\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">debug::hasNaN</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1ac6b7935725bbd4c6f573a547d70d05c4" kindref="member">mpo2</ref>))<sp/><sp/><sp/>msg.append(</highlight><highlight class="stringliteral">&quot;\t<sp/>mpo2\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">debug::hasNaN</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a4b4e3326e33d636f17c59cce065a95d2" kindref="member">envL</ref><sp/><sp/>))<sp/>msg.append(</highlight><highlight class="stringliteral">&quot;\t<sp/>envL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">debug::hasNaN</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a77d6844e2023e884ed51f16aa7ccd7de" kindref="member">envR</ref><sp/><sp/>))<sp/>msg.append(</highlight><highlight class="stringliteral">&quot;\t<sp/>envR\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">debug::hasNaN</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1aff6cb0098987b7474437a0bc5e5e4969" kindref="member">env2L</ref><sp/>))<sp/>msg.append(</highlight><highlight class="stringliteral">&quot;\t<sp/>env2L\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacedebug_1a0f6c677b6f8eca6e032f39cfbba3e433" kindref="member">debug::hasNaN</ref>(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a7279c342dcaaccae09149992db75afe0" kindref="member">env2R</ref><sp/>))<sp/>msg.append(</highlight><highlight class="stringliteral">&quot;\t<sp/>env2R\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>msg.empty())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;The<sp/>following<sp/>objects<sp/>have<sp/>nan&apos;s:\n{}&quot;</highlight><highlight class="normal">,msg));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;-<sp/>Allocating<sp/>memory<sp/>for<sp/>matrix-vector<sp/>products&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1af628a1cd598b6103b98b30f2279c6802" kindref="member">dims</ref><sp/>=<sp/>tensors.<ref refid="classclass__tensors__finite_1afdbc4ffdfdcb6ba6b9f7a5bedc02369c" kindref="member">active_problem_dims</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1af1deec2e11c578d8c7a1de7371f50ca0" kindref="member">Hn_tensor</ref>.resize(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1af628a1cd598b6103b98b30f2279c6802" kindref="member">dims</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1ac5d9c952f319c69b7ab445f308e3cdee" kindref="member">H2n_tensor</ref>.resize(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1af628a1cd598b6103b98b30f2279c6802" kindref="member">dims</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__base__functor_1ada202e879d518f4246b989b5b083a554" kindref="member">num_parameters</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1af628a1cd598b6103b98b30f2279c6802" kindref="member">dims</ref>[0]<sp/>*<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1af628a1cd598b6103b98b30f2279c6802" kindref="member">dims</ref>[1]<sp/>*<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1af628a1cd598b6103b98b30f2279c6802" kindref="member">dims</ref>[2]);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same&lt;<ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref>,<sp/>std::complex&lt;double&gt;&gt;::value)<sp/>{<sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__base__functor_1ada202e879d518f4246b989b5b083a554" kindref="member">num_parameters</ref><sp/>*=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;-<sp/>Compressing<sp/>mpo²<sp/>and<sp/>corresponding<sp/>environments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>compress();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="81" refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a8253aa3a22ca3487ee441f30a9898870" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a8253aa3a22ca3487ee441f30a9898870" kindref="member">ceres_direct_functor&lt;Scalar&gt;::Evaluate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*v_double_double,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*fx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*grad_double_double)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>t_step-&gt;tic();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref><sp/>var;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref><sp/>nHn,<sp/>nH2n;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vv,<sp/>log10var;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>vecSize<sp/>=<sp/>NumParameters();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same&lt;<ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref>,<sp/>std::complex&lt;double&gt;&gt;::value)<sp/>{<sp/>vecSize<sp/>=<sp/>NumParameters()<sp/>/<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Map&lt;const<sp/>VectorType&gt;<sp/>v(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v_double_double),<sp/>vecSize);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(<ref refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" kindref="member">settings::debug</ref>){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v.hasNaN())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;ceres_direct_functor::Evaluate:<sp/>v<sp/>has<sp/>nan&apos;s<sp/>at<sp/>counter<sp/>{}\n{}&quot;</highlight><highlight class="normal">,counter,v));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a193c9026300753666cca82313af2047f" kindref="member">VectorType</ref><sp/>n<sp/>=<sp/>v.normalized();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>vv<sp/><sp/><sp/>=<sp/>v.squaredNorm();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref><sp/>=<sp/>std::sqrt(vv);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>get_H2n(n);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>get_Hn(n);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Hn<sp/><sp/>=<sp/>Eigen::Map&lt;VectorType&gt;(Hn_tensor.data(),<sp/>Hn_tensor.size());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>H2n<sp/>=<sp/>Eigen::Map&lt;VectorType&gt;(H2n_tensor.data(),<sp/>H2n_tensor.size());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>print_path<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>t_nHn-&gt;tic();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>nHn<sp/>=<sp/>n.dot(Hn);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>t_nHn-&gt;toc();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>t_nH2n-&gt;tic();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>nH2n<sp/>=<sp/>n.dot(H2n);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>t_nH2n-&gt;toc();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>this<sp/>next<sp/>bit<sp/>carefully<sp/>to<sp/>avoid<sp/>negative<sp/>variance<sp/>when<sp/>numbers<sp/>are<sp/>very<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>=<sp/>nH2n<sp/>-<sp/>nHn<sp/>*<sp/>nHn;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>std::numeric_limits&lt;double&gt;::epsilon();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(var)<sp/>&lt;<sp/>-eps<sp/>or<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nH2n)<sp/>&lt;<sp/>-eps))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Counter<sp/>=<sp/>{}<sp/>|<sp/>DIRECT<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;negative:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;var<sp/><sp/>{:.16f}<sp/>+<sp/>{:.16f}i<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nHn<sp/><sp/>{:.16f}<sp/>+<sp/>{:.16f}i<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nH2n<sp/>{:.16f}<sp/>+<sp/>{:.16f}i<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;grad<sp/>{:8.4e}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(var),<sp/>std::imag(var),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nHn),<sp/>std::imag(nHn),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nH2n),<sp/>std::imag(nH2n),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad_max_norm);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>var<sp/>=<sp/>std::abs(var);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>var<sp/>=<sp/>std::real(var)<sp/>==<sp/>0.0<sp/>?<sp/>eps<sp/>:<sp/>var;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nHn<sp/>+<sp/><ref refid="namespacetools_1_1finite_1_1measure_1adf8bc0e9cd41a987d462608c75a36b40" kindref="member">energy_reduced</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8145a38b82bae9aa25597372b688670e" kindref="member">energy_per_site</ref><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref><sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetools_1_1finite_1_1measure_1a1d47691c527644e67b5fbb53f46aa7a9" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>variance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::abs(var);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>variance_per_site<sp/>=<sp/>variance<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetools_1_1finite_1_1measure_1a1d47691c527644e67b5fbb53f46aa7a9" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>norm_offset<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::abs(vv)<sp/>-<sp/>1.0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log10var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::log10(variance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>work<sp/>with<sp/>a<sp/>small<sp/>offset<sp/>on<sp/>the<sp/>variance:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>When<sp/>the<sp/>variance<sp/>is<sp/>very<sp/>low,<sp/>numerical<sp/>noise<sp/>will<sp/>sometimes<sp/>cause<sp/>nH2n<sp/>&lt;<sp/>0<sp/>or<sp/>var<sp/>&lt;<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>think<sp/>this<sp/>is<sp/>caused<sp/>by<sp/>H2<sp/>being<sp/>slightly<sp/>non-symmetric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var_offset<sp/>=<sp/>std::clamp(<ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(var)<sp/>+<sp/>1e-12,<sp/>eps,<sp/>std::abs(var)<sp/>+<sp/>1e-12<sp/>)<sp/><sp/>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>log10var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::log10(var_offset);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/>fx[0]<sp/>=<sp/>log10var;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Map&lt;VectorType&gt;<sp/>grad(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="namespacetools_1_1finite_1_1opt_1a0ea0d5df283a6c0c2e2bee91ca0f9414" kindref="member">Scalar</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(grad_double_double),<sp/>vecSize);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(grad_double_double<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>one_over_norm<sp/><sp/>=<sp/>1.0/<ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>var_1<sp/>=<sp/>1.0<sp/>/<sp/>var_offset<sp/>/<sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">std::log</ref>(10);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>var_1<sp/>*<sp/>one_over_norm<sp/>*<sp/>(H2n<sp/>-<sp/>2.0<sp/>*<sp/>nHn<sp/>*<sp/>Hn<sp/>-<sp/>(nH2n<sp/>-<sp/>2.0<sp/>*<sp/>nHn<sp/>*<sp/>nHn)<sp/>*<sp/>n);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr(std::is_same&lt;Scalar,<sp/>double&gt;::value)<sp/>{<sp/>grad<sp/>*=<sp/>2.0;<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad_max_norm<sp/>=<sp/>grad.template<sp/>lpNorm&lt;Eigen::Infinity&gt;();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::isnan(log10var)<sp/>or<sp/>std::isinf(log10var))<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;log₁₀<sp/>variance<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;log₁₀(var)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(variance));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;counter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>counter);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;vecsize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>vecSize);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;vv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(vv),<sp/>std::imag(vv));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;nH2n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nH2n),<sp/>std::imag(nH2n));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;nHn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(nHn),<sp/>std::imag(nHn));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}<sp/>+<sp/>i{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="ceres__subspace__hamiltonian_8cpp_1aedc0ad84d1e764530814f57ad931d02a" kindref="member">std::real</ref>(var),<sp/>std::imag(var));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;energy<sp/>offset<sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>energy_offset);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;energy<sp/>reduced<sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1adf8bc0e9cd41a987d462608c75a36b40" kindref="member">energy_reduced</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;norm<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">norm</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;norm<sp/><sp/><sp/>offset<sp/><sp/><sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>norm_offset);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Direct<sp/>functor<sp/>failed<sp/>at<sp/>counter<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacelinalg_1_1tensor_1a4fab1b7985e6991f7f0eb430f436a150" kindref="member">std::to_string</ref>(counter));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>t_step-&gt;toc();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="178" refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a23784a554b11687593861af05dd09418" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a23784a554b11687593861af05dd09418" kindref="member">ceres_direct_functor&lt;Scalar&gt;::get_H2n</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a193c9026300753666cca82313af2047f" kindref="member">VectorType</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>t_H2n-&gt;tic();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v_tensor<sp/>=<sp/>Eigen::TensorMap&lt;const<sp/>Eigen::Tensor&lt;const<sp/>Scalar,<sp/>3&gt;&gt;(v.derived().data(),<sp/>dims);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1contraction_1a8fc132d09a968c9503d8491a80d14d35" kindref="member">tools::common::contraction::matrix_vector_product</ref>(H2n_tensor,<sp/>v_tensor,<sp/>mpo2,<sp/>env2L,<sp/>env2R);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>t_H2n-&gt;toc();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>ops<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1opt_1_1internal_1aa2fc1c9fa6b304ab47e3d433380bb7e1" kindref="member">tools::finite::opt::internal::get_ops</ref>(dims[0],<sp/>dims[1],<sp/>dims[2],<sp/>mpo.dimension(0));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>NOTE<sp/>2020-10-05</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>I<sp/>ran<sp/>some<sp/>benchmarks<sp/>to<sp/>figure<sp/>out<sp/>if<sp/>the<sp/>order<sp/>of<sp/>indices<sp/>matter,<sp/>for<sp/>instance</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>we<sp/>should<sp/>list<sp/>&quot;spin&quot;<sp/>dimensions<sp/>before<sp/>mpo<sp/>dimension<sp/>or<sp/>vice<sp/>versa.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>It<sp/>turns<sp/>out<sp/>there<sp/>is<sp/>a<sp/>large<sp/>difference<sp/>in<sp/>favor<sp/>of<sp/>taking<sp/>spin<sp/>dimensions<sp/>before</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>mpo<sp/>dimensions.<sp/>The<sp/>number<sp/>of<sp/>operations<sp/>increases<sp/>with<sp/>the<sp/>number<sp/>of<sp/>sites.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>percentages<sp/>below<sp/>are<sp/>100*(ops_m<sp/>-<sp/>ops_d)<sp/>/<sp/>ops_d,<sp/>where<sp/>_d<sp/>and<sp/>_m<sp/>denote</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>taking<sp/>spin<sp/>dim<sp/>&quot;d&quot;<sp/>first<sp/>or<sp/>mpo<sp/>dim<sp/>&quot;m&quot;<sp/>first.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi=256<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi=512</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>l<sp/>=<sp/>2:<sp/><sp/><sp/><sp/>-0.65%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.32%</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>l<sp/>=<sp/>3:<sp/><sp/><sp/><sp/><sp/>3.68%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.84%</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>l<sp/>=<sp/>4:<sp/><sp/><sp/><sp/>25.17%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12.97%</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>l<sp/>=<sp/>5:<sp/><sp/><sp/>110.31%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>59.80%</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>l<sp/>=<sp/>6:<sp/><sp/><sp/>399.50%<sp/>(*)<sp/><sp/><sp/><sp/><sp/><sp/>234.72%</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>l<sp/>=<sp/>7:<sp/><sp/>1243.46%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>815.45%</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>l<sp/>=<sp/>8:<sp/><sp/>3370.13%<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2498.57%</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>However,<sp/>it<sp/>turns<sp/>out<sp/>that<sp/>Eigen<sp/>already<sp/>switches<sp/>the<sp/>order<sp/>around<sp/>to<sp/>take<sp/>the<sp/>fastest<sp/>route</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>So<sp/>it<sp/>does<sp/>not<sp/>matter<sp/>for<sp/>us<sp/>in<sp/>which<sp/>order<sp/>we<sp/>do<sp/>it...<sp/>i.e.<sp/>a<sp/>line<sp/>like</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo,<sp/>Textra::idx({0,<sp/>3},<sp/>{2,<sp/>0}))</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>equivalent<sp/>to</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo,<sp/>Textra::idx({3,<sp/>0},<sp/>{0,<sp/>2}))</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>following<sp/>benchmark<sp/>result<sp/>revealed<sp/>this<sp/>fact:</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:21:26][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>m<sp/>|<sp/>psi<sp/>dimensions<sp/>{4,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>1/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>0.4296<sp/>s<sp/>|<sp/>GOp/s<sp/>104.1811</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:21:27][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>m<sp/>|<sp/>psi<sp/>dimensions<sp/>{4,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>2/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>0.4258<sp/>s<sp/>|<sp/>GOp/s<sp/>105.0995</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:21:27][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>m<sp/>|<sp/>psi<sp/>dimensions<sp/>{4,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>3/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>0.4179<sp/>s<sp/>|<sp/>GOp/s<sp/>107.0952</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:21:27][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>m<sp/>|<sp/>total<sp/>time<sp/>1.2733<sp/>s</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:21:28][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>d<sp/>|<sp/>psi<sp/>dimensions<sp/>{4,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>1/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>0.4572<sp/>s<sp/>|<sp/>GOp/s<sp/>98.4875</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:21:28][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>d<sp/>|<sp/>psi<sp/>dimensions<sp/>{4,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>2/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>0.4225<sp/>s<sp/>|<sp/>GOp/s<sp/>106.5780</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:21:29][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>d<sp/>|<sp/>psi<sp/>dimensions<sp/>{4,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>3/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>0.4460<sp/>s<sp/>|<sp/>GOp/s<sp/>100.9666</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:21:29][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>d<sp/>|<sp/>total<sp/>time<sp/>1.3257<sp/>s</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:23:06][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>m<sp/>|<sp/>psi<sp/>dimensions<sp/>{64,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>1/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>9.7150<sp/>s<sp/>|<sp/>GOp/s<sp/>515.3747</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:23:16][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>m<sp/>|<sp/>psi<sp/>dimensions<sp/>{64,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>2/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>9.7767<sp/>s<sp/>|<sp/>GOp/s<sp/>512.1229</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:23:25][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>m<sp/>|<sp/>psi<sp/>dimensions<sp/>{64,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>3/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>9.5951<sp/>s<sp/>|<sp/>GOp/s<sp/>521.8139</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:23:25][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>m<sp/>|<sp/>total<sp/>time<sp/>29.0868<sp/>s</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:23:35][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>d<sp/>|<sp/>psi<sp/>dimensions<sp/>{64,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>1/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>9.7333<sp/>s<sp/>|<sp/>GOp/s<sp/>106.3428</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:23:45][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>d<sp/>|<sp/>psi<sp/>dimensions<sp/>{64,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>2/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>9.7678<sp/>s<sp/>|<sp/>GOp/s<sp/>105.9679</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:23:55][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>d<sp/>|<sp/>psi<sp/>dimensions<sp/>{64,<sp/>256,<sp/>256}<sp/>|<sp/>iter<sp/>3/3<sp/>|<sp/><sp/>time<sp/><sp/><sp/>9.7425<sp/>s<sp/>|<sp/>GOp/s<sp/>106.2432</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>[2020-10-05<sp/>15:23:55][tensorbench][<sp/><sp/>info<sp/><sp/>]<sp/>H²|Ψ&gt;<sp/>version<sp/>cpu3<sp/>d<sp/>|<sp/>total<sp/>time<sp/>29.2436<sp/>s</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Notice<sp/>how<sp/>in<sp/>the<sp/>case<sp/>d^6=64<sp/>and<sp/>chi<sp/>=<sp/>256<sp/>the<sp/>supposed<sp/>expected<sp/>improvement<sp/>should<sp/>be<sp/>~400%<sp/>which<sp/>agrees<sp/>with<sp/>point<sp/>(*)<sp/>above</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="237" refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a211bb3adeaba68f0070ba29bec01e6ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a211bb3adeaba68f0070ba29bec01e6ba" kindref="member">ceres_direct_functor&lt;Scalar&gt;::get_Hn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a193c9026300753666cca82313af2047f" kindref="member">VectorType</ref><sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>t_Hn-&gt;tic();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v_tensor<sp/>=<sp/>Eigen::TensorMap&lt;const<sp/>Eigen::Tensor&lt;const<sp/>Scalar,<sp/>3&gt;&gt;(v.derived().data(),<sp/>dims);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1contraction_1a8fc132d09a968c9503d8491a80d14d35" kindref="member">tools::common::contraction::matrix_vector_product</ref>(Hn_tensor,<sp/>v_tensor,<sp/>mpo,<sp/>envL,<sp/>envR);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>t_Hn-&gt;toc();</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="247" refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1ab43e51d1875106c434cb750efdeb6430" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1ab43e51d1875106c434cb750efdeb6430" kindref="member">ceres_direct_functor&lt;Scalar&gt;::compress</ref>(){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readyCompress)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsvd_1_1settings" kindref="compound">svd::settings</ref><sp/>svd_settings;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>svd_settings.<ref refid="structsvd_1_1settings_1a137063a182afc9c80d91c86feb047aa7" kindref="member">use_lapacke</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>svd_settings.<ref refid="structsvd_1_1settings_1a08fb51096b63dc44b0e2b1abe96bdd67" kindref="member">use_bdc</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>svd_settings.<ref refid="structsvd_1_1settings_1abb1784f960b306432bd857a066052b7c" kindref="member">threshold</ref><sp/>=<sp/>1e-18;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>svd_settings.<ref refid="structsvd_1_1settings_1aa8c802686d205c5f958c5b48c44970c1" kindref="member">switchsize</ref><sp/>=<sp/>4096;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsvd_1_1solver" kindref="compound">svd::solver</ref><sp/><ref refid="namespacesvd" kindref="compound">svd</ref>(svd_settings);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,<sp/>4&gt;<sp/>mpo2_l2r;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compress<sp/>left<sp/>to<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[U,S,V]<sp/>=<sp/><ref refid="namespacesvd" kindref="compound">svd</ref>.split_mpo_l2r(mpo2);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>env2R_tmp<sp/>=<sp/>env2R.contract(V,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},{1}));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env2R<sp/>=<sp/>env2R_tmp;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpo2<sp/>=<sp/>U.contract(<ref refid="namespace_textra_1a9985d656f87652d2d09c81c517be2e07" kindref="member">Textra::asDiagonal</ref>(S),<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({1},{0})).shuffle(std::array&lt;long,4&gt;{0,3,1,2});</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compress<sp/>right<sp/>to<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[U,S,V]<sp/>=<sp/><ref refid="namespacesvd" kindref="compound">svd</ref>.split_mpo_r2l(mpo2);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>env2L_tmp<sp/>=<sp/>env2L.contract(U,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({2},{0}));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env2L<sp/>=<sp/>env2L_tmp;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpo2<sp/>=<sp/><ref refid="namespace_textra_1a9985d656f87652d2d09c81c517be2e07" kindref="member">Textra::asDiagonal</ref>(S).contract(V,<sp/><ref refid="namespace_textra_1a1016341dbbd0dbced92875cd7ce7268e" kindref="member">Textra::idx</ref>({1},{0}));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>readyCompress<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Compressed<sp/>mpo²<sp/>dimensions<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>mpo2.dimensions());</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scalar&gt;</highlight></codeline>
<codeline lineno="278" refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a23e70464be07a67518509f6d9d5945d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1a23e70464be07a67518509f6d9d5945d1" kindref="member">ceres_direct_functor&lt;Scalar&gt;::set_shift</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>shift_)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readyShift)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>This<sp/>only<sp/>happens<sp/>once!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(readyCompress)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>shift<sp/>the<sp/>mpo:<sp/>it<sp/>is<sp/>already<sp/>compressed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>shift_;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Setting<sp/>shift:<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>shift_);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>MPO<sp/>is<sp/>a<sp/>rank4<sp/>tensor<sp/>ijkl<sp/>where<sp/>the<sp/>first<sp/>2<sp/>ij<sp/>indices<sp/>draw<sp/>a<sp/>simple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rank2<sp/>matrix,<sp/>where<sp/>each<sp/>element<sp/>is<sp/>also<sp/>a<sp/>matrix<sp/>with<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determined<sp/>by<sp/>the<sp/>last<sp/>2<sp/>indices<sp/>kl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>shift<sp/>an<sp/>MPO,<sp/>all<sp/>we<sp/>do<sp/>is<sp/>subtract<sp/>a<sp/>diagonal<sp/>matrix<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>botton<sp/>left<sp/>corner<sp/>of<sp/>the<sp/>ij-matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>mpo<sp/>(hamiltonian)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>extents<sp/>and<sp/>handy<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shape<sp/>=<sp/>mpo.dimensions();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;long,<sp/>4&gt;<sp/>offset4{shape[0]<sp/>-<sp/>1,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;long,<sp/>4&gt;<sp/>extent4{1,<sp/>1,<sp/>shape[2],<sp/>shape[3]};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;long,<sp/>2&gt;<sp/>extent2{shape[2],<sp/>shape[3]};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1ad4eb38945d2e4c896cb79c3e2f636f43" kindref="member">MatrixType</ref><sp/>sigma_Id<sp/>=<sp/>shift<sp/>*<sp/>MatrixType::Identity(extent2[0],<sp/>extent2[1]);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::TensorMap&lt;Eigen::Tensor&lt;Scalar,<sp/>2&gt;&gt;<sp/>sigma_Id_map(sigma_Id.data(),<sp/>sigma_Id.rows(),<sp/>sigma_Id.cols());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpo.slice(offset4,<sp/>extent4).reshape(extent2)<sp/>-=<sp/>sigma_Id_map;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>is<sp/>with<sp/>mpo²<sp/>(hamiltonian<sp/>squared).<sp/>Here<sp/>we<sp/>must<sp/>shift²</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>extents<sp/>and<sp/>handy<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shape<sp/>=<sp/>mpo2.dimensions();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;long,<sp/>4&gt;<sp/>offset4{shape[0]<sp/>-<sp/>1,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;long,<sp/>4&gt;<sp/>extent4{1,<sp/>1,<sp/>shape[2],<sp/>shape[3]};</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;long,<sp/>2&gt;<sp/>extent2{shape[2],<sp/>shape[3]};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor_1ad4eb38945d2e4c896cb79c3e2f636f43" kindref="member">MatrixType</ref><sp/>sigma_Id<sp/>=<sp/>shift<sp/>*<sp/>shift<sp/>*<sp/>MatrixType::Identity(extent2[0],<sp/>extent2[1]);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::TensorMap&lt;Eigen::Tensor&lt;Scalar,<sp/>2&gt;&gt;<sp/>sigma_Id_map(sigma_Id.data(),<sp/>sigma_Id.rows(),<sp/>sigma_Id.cols());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpo2.slice(offset4,<sp/>extent4).reshape(extent2)<sp/>-=<sp/>sigma_Id_map;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>readyShift<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor" kindref="compound">tools::finite::opt::internal::ceres_direct_functor&lt;double&gt;</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtools_1_1finite_1_1opt_1_1internal_1_1ceres__direct__functor" kindref="compound">tools::finite::opt::internal::ceres_direct_functor&lt;std::complex&lt;double&gt;</ref>&gt;;</highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/DMRG++/source/tools/finite/opt-internal/ceres_direct_functor.cpp"/>
  </compounddef>
</doxygen>
