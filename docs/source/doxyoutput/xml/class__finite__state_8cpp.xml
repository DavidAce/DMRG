<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class__finite__state_8cpp" kind="file" language="C++">
    <compoundname>class_finite_state.cpp</compoundname>
    <includes refid="class__finite__state_8h" local="yes">class_finite_state.h</includes>
    <includes refid="nmspc__tools_8h" local="no">tools/nmspc_tools.h</includes>
    <includes refid="nmspc__quantum__mechanics_8h" local="no">general/nmspc_quantum_mechanics.h</includes>
    <includes local="no">spdlog/fmt/bundled/ranges.h</includes>
    <incdepgraph>
      <node id="1840">
        <label>iomanip</label>
      </node>
      <node id="1838">
        <label>iterator</label>
      </node>
      <node id="1841">
        <label>general/nmspc_type_check.h</label>
        <link refid="nmspc__type__check_8h"/>
        <childnode refid="1842" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1837" relation="include">
        </childnode>
      </node>
      <node id="1835">
        <label>Eigen/Core</label>
      </node>
      <node id="1852">
        <label>string</label>
      </node>
      <node id="1853">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1839" relation="include">
        </childnode>
      </node>
      <node id="1847">
        <label>io/nmspc_logger.h</label>
        <link refid="nmspc__logger_8h"/>
        <childnode refid="1848" relation="include">
        </childnode>
        <childnode refid="1849" relation="include">
        </childnode>
        <childnode refid="1850" relation="include">
        </childnode>
      </node>
      <node id="1842">
        <label>experimental/type_traits</label>
      </node>
      <node id="1851">
        <label>tools/nmspc_tools.h</label>
        <link refid="nmspc__tools_8h"/>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1852" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1853" relation="include">
        </childnode>
      </node>
      <node id="1837">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="1829">
        <label>/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_finite_state.cpp</label>
        <link refid="class__finite__state_8cpp"/>
        <childnode refid="1830" relation="include">
        </childnode>
        <childnode refid="1851" relation="include">
        </childnode>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1857" relation="include">
        </childnode>
      </node>
      <node id="1843">
        <label>state/class_environment.h</label>
        <link refid="class__environment_8h"/>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1844" relation="include">
        </childnode>
      </node>
      <node id="1857">
        <label>spdlog/fmt/bundled/ranges.h</label>
      </node>
      <node id="1846">
        <label>model/class_model_base.h</label>
        <link refid="class__model__base_8h"/>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1837" relation="include">
        </childnode>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
      <node id="1848">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="1836">
        <label>Eigen/Sparse</label>
      </node>
      <node id="1830">
        <label>class_finite_state.h</label>
        <link refid="class__finite__state_8h"/>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1832" relation="include">
        </childnode>
        <childnode refid="1833" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1843" relation="include">
        </childnode>
        <childnode refid="1845" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
      </node>
      <node id="1833">
        <label>optional</label>
      </node>
      <node id="1856">
        <label>vector</label>
      </node>
      <node id="1844">
        <label>spdlog/fmt/fmt.h</label>
      </node>
      <node id="1849">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="1839">
        <label>iostream</label>
      </node>
      <node id="1854">
        <label>chrono</label>
      </node>
      <node id="1855">
        <label>general/nmspc_quantum_mechanics.h</label>
        <link refid="nmspc__quantum__mechanics_8h"/>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1837" relation="include">
        </childnode>
        <childnode refid="1832" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
      </node>
      <node id="1832">
        <label>complex</label>
      </node>
      <node id="1834">
        <label>general/nmspc_tensor_extra.h</label>
        <link refid="nmspc__tensor__extra_8h"/>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1837" relation="include">
        </childnode>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1839" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
      </node>
      <node id="1850">
        <label>spdlog/sinks/stdout_sinks.h</label>
      </node>
      <node id="1831">
        <label>memory</label>
      </node>
      <node id="1845">
        <label>state/class_vidal_site.h</label>
        <link refid="class__vidal__site_8h"/>
        <childnode refid="1834" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-01-29.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__finite__state_8h" kindref="compound">class_finite_state.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__tools_8h" kindref="compound">tools/nmspc_tools.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__quantum__mechanics_8h" kindref="compound">general/nmspc_quantum_mechanics.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/fmt/bundled/ranges.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>make<sp/>a<sp/>destructor<sp/>manually<sp/>for<sp/>the<sp/>enclosing<sp/>class<sp/>&quot;class_finite_state&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>encloses<sp/>&quot;class_model_base&quot;.<sp/>Otherwise<sp/>unique_ptr<sp/>will<sp/>forcibly<sp/>inline<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>own<sp/>default<sp/>deleter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>us<sp/>to<sp/>forward<sp/>declare<sp/>the<sp/>abstract<sp/>base<sp/>class<sp/>&quot;class_model_base&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>more:<sp/>https://stackoverflow.com/questions/33212686/how-to-use-unique-ptr-with-forward-declared-type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>And<sp/>here:<sp/><sp/>https://stackoverflow.com/questions/6012157/is-stdunique-ptrt-required-to-know-the-full-definition-of-t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="classclass__finite__state_1a8f19bcc4a4848b10588e18e3063ba025" kindref="member">class_finite_state::~class_finite_state</ref>()=</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classclass__finite__state_1aadfec8507fe890d3685f8624e6fa4e40" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state_1ac007780c5f9fb144aa26a2c8a3d6f66e" kindref="member">class_finite_state::class_finite_state</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref><sp/>&amp;<sp/>other){</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>other;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classclass__finite__state_1a31ece922c1df7f6deb83579afb2fcca6" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref>&amp;<sp/><ref refid="classclass__finite__state_1a31ece922c1df7f6deb83579afb2fcca6" kindref="member">class_finite_state::operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref><sp/>&amp;<sp/>other){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>self-assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(&amp;other<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>all<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1adec110837d5184d9cd8ffb4dc97d2551" kindref="member">num_sweeps</ref><sp/>=<sp/>other.<ref refid="classclass__finite__state_1adec110837d5184d9cd8ffb4dc97d2551" kindref="member">num_sweeps</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1ad7c2b92abcda8d64c390c2f3b9f3927f" kindref="member">num_moves</ref><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1ad7c2b92abcda8d64c390c2f3b9f3927f" kindref="member">num_moves</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a257bd9a7491d2d25c82082bd76ea0fff" kindref="member">direction</ref><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1a257bd9a7491d2d25c82082bd76ea0fff" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1adb4a942ea807cf214437c9a078b5c31e" kindref="member">chi_max</ref><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1adb4a942ea807cf214437c9a078b5c31e" kindref="member">chi_max</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1ab95ffeb138dea0a739dcab7c59c44321" kindref="member">MPS_C</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1ab95ffeb138dea0a739dcab7c59c44321" kindref="member">MPS_C</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a4cdeeeffc013c85f8cd657b2fd06fe0e" kindref="member">ENV_L</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1a4cdeeeffc013c85f8cd657b2fd06fe0e" kindref="member">ENV_L</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" kindref="member">ENV_R</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" kindref="member">ENV_R</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a4a6f7da1f22176f584726f3132ca01c9" kindref="member">ENV2_L</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1a4a6f7da1f22176f584726f3132ca01c9" kindref="member">ENV2_L</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1ac698101229f4b0af09c22a12a45fc5c1" kindref="member">truncation_error</ref><sp/>=<sp/>other.<ref refid="classclass__finite__state_1ac698101229f4b0af09c22a12a45fc5c1" kindref="member">truncation_error</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref><sp/>=<sp/>other.<ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.<ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>MPO&apos;s<sp/>are<sp/>special<sp/>and<sp/>the<sp/>whole<sp/>point<sp/>of<sp/>doing<sp/>this<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>.clear();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>.clear();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>mpo:<sp/>other.<ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>)<sp/>this-&gt;<ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>.emplace_back(mpo-&gt;clone());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>mpo:<sp/>other.<ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>)<sp/>this-&gt;<ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>.emplace_back(mpo-&gt;clone());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classclass__finite__state_1abe811f34bf53c45089eb7878f7dccdc4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1abe811f34bf53c45089eb7878f7dccdc4" kindref="member">class_finite_state::do_all_measurements</ref>(){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetools_1_1finite" kindref="compound">tools::finite</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a318ad377c472789df9713294b59788f1" kindref="member">length</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a7ea586a94abc0dc2941e01d1c6ceebc5" kindref="member">measure::length</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1af042370ea31d47fdc261e6827e86ac57" kindref="member">bond_dimension_current</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1afa191922f51d01db89c40c7fe8a8588d" kindref="member">measure::bond_dimension_current</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a729ef146fb2e5c81b355e60cb9522ec0" kindref="member">bond_dimension_midchain</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a291f3347e7b6f62644d330bf88cbcca1" kindref="member">measure::bond_dimension_midchain</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1aa65086fe9e146d381d987e1fd2941dc8" kindref="member">bond_dimensions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a24ce7e82c8d286c098cd67e3b9339d68" kindref="member">measure::bond_dimensions</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1afa6883ebbbbe1bff5f922d499a19aab4" kindref="member">norm</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" kindref="member">measure::norm</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a7cfa40e6d2c88d78e6418094f603603d" kindref="member">energy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1ad0bf82691db6ea773183f4f38c245636" kindref="member">measure::energy</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//This<sp/>number<sp/>is<sp/>needed<sp/>for<sp/>variance<sp/>calculation!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a7d515b15cfdd205b7ca1bf6e51ebbd15" kindref="member">energy_per_site</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a81b06529556e68f882c591397b39ef2f" kindref="member">measure::energy_per_site</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a8b47be757b3751ca9ee49c07a6102324" kindref="member">energy_variance_mpo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5a593749b940023e4150387fb657fcd6" kindref="member">measure::energy_variance</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a5d9b8e22eb2c5fbb1532ac82658e7157" kindref="member">energy_variance_per_site</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a0435b2ea12613bfa030adc9dab6c8e52" kindref="member">measure::energy_variance_per_site</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a5f91cc77cb6af61ae6abd97d311b8da8" kindref="member">entanglement_entropy_current</ref><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a12d36574cc9c432e24fa11fd3e9302de" kindref="member">measure::entanglement_entropy_current</ref><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1ae474957f0142cb20d39632a9797087de" kindref="member">entanglement_entropy_midchain</ref><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a7b50dc2af206a2a62705243ffca08d75" kindref="member">measure::entanglement_entropy_midchain</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a581133f1d7650f3045392243e6b9537c" kindref="member">entanglement_entropies</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5fa07e0eb6987bcc1431afdfbced7016" kindref="member">measure::entanglement_entropies</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a8b1e7873a5a64430a1adba5dd7e5d3c3" kindref="member">spin_components</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a273e4dc80361488ebb574bf6a3caf69d" kindref="member">measure::spin_components</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classclass__finite__state_1a81aa7a226829ccc4630397c1f51a53db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a81aa7a226829ccc4630397c1f51a53db" kindref="member">class_finite_state::set_positions</ref>(){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;MPS:<sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>){MPS.set_position(pos++);}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;MPS:<sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>){MPS.set_position(pos++);}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ENV:<sp/><ref refid="classclass__finite__state_1a4cdeeeffc013c85f8cd657b2fd06fe0e" kindref="member">ENV_L</ref>){ENV.set_position(pos++);}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ENV:<sp/><ref refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" kindref="member">ENV_R</ref>){ENV.set_position(pos++);}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ENV2:<sp/><ref refid="classclass__finite__state_1a4a6f7da1f22176f584726f3132ca01c9" kindref="member">ENV2_L</ref>){ENV2.set_position(pos++);}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ENV2:<sp/><ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref>){ENV2.set_position(pos++);}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;MPO<sp/>:<sp/><ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>){MPO-&gt;set_position(pos++);}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;MPO<sp/>:<sp/><ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>){MPO-&gt;set_position(pos++);}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">class_finite_state::get_length</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.size()<sp/>+<sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.size();}</highlight></codeline>
<codeline lineno="91" refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" kindref="member">class_finite_state::get_position</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.size()<sp/>-<sp/>1u;}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classclass__finite__state_1a8cde46f744a1652d4415f8026f803a32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classclass__finite__state_1a8cde46f744a1652d4415f8026f803a32" kindref="member">class_finite_state::get_sweeps</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1adec110837d5184d9cd8ffb4dc97d2551" kindref="member">num_sweeps</ref>;}</highlight></codeline>
<codeline lineno="94" refid="classclass__finite__state_1adb91e38c38ff737fca69b4eb7b6c96fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classclass__finite__state_1adb91e38c38ff737fca69b4eb7b6c96fd" kindref="member">class_finite_state::reset_sweeps</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="classclass__finite__state_1adec110837d5184d9cd8ffb4dc97d2551" kindref="member">num_sweeps</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1adec110837d5184d9cd8ffb4dc97d2551" kindref="member">num_sweeps</ref>;}</highlight></codeline>
<codeline lineno="95" refid="classclass__finite__state_1aecbc8d3c32a92821f4bd8531d6c495b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1aecbc8d3c32a92821f4bd8531d6c495b8" kindref="member">class_finite_state::set_sweeps</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_sweeps_)<sp/>{<ref refid="classclass__finite__state_1adec110837d5184d9cd8ffb4dc97d2551" kindref="member">num_sweeps</ref><sp/>=<sp/>num_sweeps_;}</highlight></codeline>
<codeline lineno="96" refid="classclass__finite__state_1a2b8226a4c67eb4fbe693aa84d6e070aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a2b8226a4c67eb4fbe693aa84d6e070aa" kindref="member">class_finite_state::increment_sweeps</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="classclass__finite__state_1adec110837d5184d9cd8ffb4dc97d2551" kindref="member">num_sweeps</ref>++;}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classclass__finite__state_1a82a39cab33893065293460515ae27d4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classclass__finite__state_1a82a39cab33893065293460515ae27d4c" kindref="member">class_finite_state::get_moves</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1ad7c2b92abcda8d64c390c2f3b9f3927f" kindref="member">num_moves</ref>;}</highlight></codeline>
<codeline lineno="99" refid="classclass__finite__state_1afbe18254d26ec6235b569ea7d3d3b5a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classclass__finite__state_1afbe18254d26ec6235b569ea7d3d3b5a4" kindref="member">class_finite_state::reset_moves</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="classclass__finite__state_1ad7c2b92abcda8d64c390c2f3b9f3927f" kindref="member">num_moves</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1ad7c2b92abcda8d64c390c2f3b9f3927f" kindref="member">num_moves</ref>;}</highlight></codeline>
<codeline lineno="100" refid="classclass__finite__state_1a62f5e4db99599620907363b670bbd2b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a62f5e4db99599620907363b670bbd2b6" kindref="member">class_finite_state::set_moves</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_moves_)<sp/><sp/>{<sp/><ref refid="classclass__finite__state_1ad7c2b92abcda8d64c390c2f3b9f3927f" kindref="member">num_moves</ref><sp/>=<sp/>num_moves_;}</highlight></codeline>
<codeline lineno="101" refid="classclass__finite__state_1a1ab89b6db86f7bda2aa839a8d9849637" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a1ab89b6db86f7bda2aa839a8d9849637" kindref="member">class_finite_state::increment_moves</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="classclass__finite__state_1ad7c2b92abcda8d64c390c2f3b9f3927f" kindref="member">num_moves</ref>++;}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classclass__finite__state_1af48976dedeb43c8d4b62526ef275c239" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1af48976dedeb43c8d4b62526ef275c239" kindref="member">class_finite_state::get_chi_max</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1adb4a942ea807cf214437c9a078b5c31e" kindref="member">chi_max</ref>;}</highlight></codeline>
<codeline lineno="105" refid="classclass__finite__state_1aa27e16591529e8f3f8bbf368739eb585" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1aa27e16591529e8f3f8bbf368739eb585" kindref="member">class_finite_state::set_chi_max</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>chi_max_){<sp/><ref refid="classclass__finite__state_1adb4a942ea807cf214437c9a078b5c31e" kindref="member">chi_max</ref><sp/>=<sp/>chi_max_;}</highlight></codeline>
<codeline lineno="106" refid="classclass__finite__state_1a304474ccfccd73c3371441ab4b1c2e0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classclass__finite__state_1a304474ccfccd73c3371441ab4b1c2e0e" kindref="member">class_finite_state::get_direction</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a257bd9a7491d2d25c82082bd76ea0fff" kindref="member">direction</ref>;}</highlight></codeline>
<codeline lineno="107" refid="classclass__finite__state_1add3d724c6d0ed8dec3e9f6c3f0dd4a5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1add3d724c6d0ed8dec3e9f6c3f0dd4a5a" kindref="member">class_finite_state::flip_direction</ref>()<sp/>{<ref refid="classclass__finite__state_1a257bd9a7491d2d25c82082bd76ea0fff" kindref="member">direction</ref><sp/>*=<sp/>-1;}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">Eigen::DSizes&lt;long,3&gt;</highlight></codeline>
<codeline lineno="111" refid="classclass__finite__state_1a923a9d3414153af04829131cb57a797e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a923a9d3414153af04829131cb57a797e" kindref="member">class_finite_state::dimensions_2site</ref>()</highlight><highlight class="keyword"><sp/><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::DSizes&lt;long,3&gt;<sp/>dimensions;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensions[1]<sp/>=<sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.back().get_chiL();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensions[2]<sp/>=<sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.front().get_chiR();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensions[0]<sp/>=<sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.back().get_spin_dim()<sp/>*<sp/><sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.front().get_spin_dim();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dimensions;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119" refid="classclass__finite__state_1a3489177cc5e19033c4641d43415bac85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><ref refid="classclass__finite__state_1a3489177cc5e19033c4641d43415bac85" kindref="member">class_finite_state::size_2site</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dims<sp/>=<sp/><ref refid="classclass__finite__state_1a923a9d3414153af04829131cb57a797e" kindref="member">dimensions_2site</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dims[0]*dims[1]*dims[2];</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classclass__finite__state_1a08e76b77b09ea869173b53cb8e438b70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a08e76b77b09ea869173b53cb8e438b70" kindref="member">class_finite_state::position_is_the_middle</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/><ref refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" kindref="member">get_position</ref>()<sp/>+<sp/>1<sp/>==<sp/>(size_t)(<ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>()<sp/>/<sp/>2.0)<sp/>and<sp/><ref refid="classclass__finite__state_1a257bd9a7491d2d25c82082bd76ea0fff" kindref="member">direction</ref><sp/>==<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127" refid="classclass__finite__state_1a6b761f288537cacbca9b571c176a4f7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a6b761f288537cacbca9b571c176a4f7b" kindref="member">class_finite_state::position_is_the_middle_any_direction</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/><ref refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" kindref="member">get_position</ref>()<sp/>+<sp/>1<sp/>==<sp/>(size_t)(<ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>()<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classclass__finite__state_1aad5f6a1732f6e6114ea511a8ae175483" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1aad5f6a1732f6e6114ea511a8ae175483" kindref="member">class_finite_state::position_is_the_left_edge</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" kindref="member">get_position</ref>()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classclass__finite__state_1a168b714b82d768f5e2063fe65d004f4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a168b714b82d768f5e2063fe65d004f4a" kindref="member">class_finite_state::position_is_the_right_edge</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" kindref="member">get_position</ref>()<sp/>==<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>()<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classclass__finite__state_1ac0b9060bf116f0d50211ad754b1d503b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1ac0b9060bf116f0d50211ad754b1d503b" kindref="member">class_finite_state::position_is_any_edge</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1aad5f6a1732f6e6114ea511a8ae175483" kindref="member">position_is_the_left_edge</ref>()<sp/>or<sp/><ref refid="classclass__finite__state_1a168b714b82d768f5e2063fe65d004f4a" kindref="member">position_is_the_right_edge</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classclass__finite__state_1a806048e0a88bc33edf42825969729b69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a806048e0a88bc33edf42825969729b69" kindref="member">class_finite_state::position_is_at</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" kindref="member">get_position</ref>()<sp/>==<sp/>pos;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classclass__finite__state_1a7c92b77eb488a51f7be65c1b053a3a7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a7c92b77eb488a51f7be65c1b053a3a7a" kindref="member">class_finite_state::isReal</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mps_real<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mpo_real<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>mps<sp/>:<sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref><sp/>){mps_real<sp/>=<sp/>mps_real<sp/>and<sp/>mps.isReal();}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>mps<sp/>:<sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref><sp/>){mps_real<sp/>=<sp/>mps_real<sp/>and<sp/>mps.isReal();}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>mpo<sp/>:<sp/><ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref><sp/>){mpo_real<sp/>=<sp/>mpo_real<sp/>and<sp/>mpo-&gt;isReal();}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>mpo<sp/>:<sp/><ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref><sp/>){mpo_real<sp/>=<sp/>mpo_real<sp/>and<sp/>mpo-&gt;isReal();}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mps_real<sp/>and<sp/>mpo_real;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classclass__finite__state_1a96207fcc3378d0bcc7c884055d9862b0" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,3&gt;<sp/><ref refid="classclass__finite__state_1a96207fcc3378d0bcc7c884055d9862b0" kindref="member">class_finite_state::get_A</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.back().get_L()).contract(<ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.back().get_G(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({1},{1})).shuffle(<ref refid="namespace_textra_1a11ff5da431d0a149284e51800d10c0cc" kindref="member">Textra::array3</ref>{1,0,2});</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classclass__finite__state_1a329621889f03d2af14130fda0b834457" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,3&gt;<sp/><ref refid="classclass__finite__state_1a329621889f03d2af14130fda0b834457" kindref="member">class_finite_state::get_B</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.front().get_G().contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.front().get_L()),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}));</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classclass__finite__state_1a9b5d49eca3ca64dae7bbd8e1d2b1d03d" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,4&gt;<sp/><ref refid="classclass__finite__state_1a9b5d49eca3ca64dae7bbd8e1d2b1d03d" kindref="member">class_finite_state::get_theta</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a96207fcc3378d0bcc7c884055d9862b0" kindref="member">get_A</ref>()</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__finite__state_1ab95ffeb138dea0a739dcab7c59c44321" kindref="member">MPS_C</ref>),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(<ref refid="classclass__finite__state_1a329621889f03d2af14130fda0b834457" kindref="member">get_B</ref>(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{1}));</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__vidal__site" kindref="compound">class_vidal_site</ref><sp/>&amp;<sp/><ref refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" kindref="member">class_finite_state::get_MPS</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_MPS(pos)<sp/>pos<sp/>out<sp/>of<sp/>range:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pos));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&lt;=<sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.back().get_position()){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mps_it<sp/>=<sp/>std::next(<ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.begin(),pos);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mps_it-&gt;get_position()<sp/>!=<sp/>pos)<sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_MPS(pos):<sp/>Mismatch<sp/>in<sp/>mps<sp/>L<sp/>position<sp/>and<sp/>pos:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>mps_it-&gt;get_position(),<sp/>pos));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mps_it;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&lt;<sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.front().get_position())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_MPS(pos):<sp/>Mismatch<sp/>in<sp/>pos<sp/>and<sp/>MPSR<sp/>front<sp/>position:<sp/>{}<sp/>&lt;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pos,<sp/><sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.front().get_position()));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mps_it<sp/>=<sp/>std::next(<ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.begin(),<sp/>pos<sp/>-<sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.front().get_position());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mps_it-&gt;get_position()<sp/>!=<sp/>pos)<sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_MPS(pos):<sp/>Mismatch<sp/>in<sp/>mps<sp/>R<sp/>position<sp/>and<sp/>pos:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>mps_it-&gt;get_position(),<sp/>pos));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mps_it;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classclass__finite__state_1a5a2b9693adbb336ccd26213a2e0c6d18" refkind="member"><highlight class="normal"><ref refid="classclass__vidal__site" kindref="compound">class_vidal_site</ref><sp/>&amp;<sp/><ref refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" kindref="member">class_finite_state::get_MPS</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classclass__vidal__site" kindref="compound">class_vidal_site</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).<ref refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" kindref="member">get_MPS</ref>(pos));</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__model__base" kindref="compound">class_model_base</ref><sp/>&amp;<sp/><ref refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" kindref="member">class_finite_state::get_MPO</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>())</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_MPO(pos)<sp/>pos<sp/>out<sp/>of<sp/>range:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pos));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&lt;=<sp/><ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>.back()-&gt;get_position()){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mpo_it<sp/>=<sp/>std::next(<ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>.begin(),pos)-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpo_it-&gt;get_position()<sp/>!=<sp/>pos)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_MPO(pos):<sp/>Mismatch<sp/>in<sp/>mpo<sp/>position<sp/>and<sp/>pos:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>mpo_it-&gt;get_position(),<sp/>pos));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mpo_it;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&lt;<sp/><ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>.front()-&gt;get_position())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_MPS(pos):<sp/>Mismatch<sp/>in<sp/>pos<sp/>and<sp/>MPOR<sp/>front<sp/>position:<sp/>{}<sp/>&lt;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pos,<sp/><sp/><ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>.front()-&gt;get_position()));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mpo_it<sp/>=<sp/>std::next(<ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>.begin(),<sp/>pos<sp/>-<sp/><ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>.front()-&gt;get_position())-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpo_it-&gt;get_position()<sp/>!=<sp/>pos)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_MPO(pos):<sp/>Mismatch<sp/>in<sp/>mpo<sp/>position<sp/>and<sp/>pos:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>mpo_it-&gt;get_position(),<sp/>pos));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mpo_it;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classclass__finite__state_1a51a1259ac932563fa1803ebbe7ee10d4" refkind="member"><highlight class="normal"><ref refid="classclass__model__base" kindref="compound">class_model_base</ref><sp/>&amp;<sp/><ref refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" kindref="member">class_finite_state::get_MPO</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos){</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classclass__model__base" kindref="compound">class_model_base</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).<ref refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" kindref="member">get_MPO</ref>(pos));</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;class_finite_state::Scalar,3&gt;<sp/>&amp;<sp/><ref refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" kindref="member">class_finite_state::get_G</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::as_const(<ref refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" kindref="member">get_MPS</ref>(pos).<ref refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" kindref="member">get_G</ref>());</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classclass__finite__state_1ae7248f79413fc3c76df6e92db866f983" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,3&gt;<sp/>&amp;<sp/><ref refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" kindref="member">class_finite_state::get_G</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,3&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).<ref refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" kindref="member">get_G</ref>(pos));</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;class_finite_state::Scalar,1&gt;<sp/>&amp;<sp/><ref refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" kindref="member">class_finite_state::get_L</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(pos<sp/>==<sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.back().get_position()<sp/>+<sp/>1){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1ab95ffeb138dea0a739dcab7c59c44321" kindref="member">MPS_C</ref>;}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;=<sp/><ref refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" kindref="member">MPS_L</ref>.back().get_position())<sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" kindref="member">get_MPS</ref>(pos).<ref refid="classclass__vidal__site_1afe3069cfa9af24394840fd6d08cb154d" kindref="member">get_L</ref>();}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/><ref refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" kindref="member">MPS_R</ref>.front().get_position())<sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" kindref="member">get_MPS</ref>(pos-1).<ref refid="classclass__vidal__site_1afe3069cfa9af24394840fd6d08cb154d" kindref="member">get_L</ref>();}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unhandled<sp/>position&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classclass__finite__state_1adf065531466ca5f0860771b0cd7c3e18" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,1&gt;<sp/>&amp;<sp/><ref refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" kindref="member">class_finite_state::get_L</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,1&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).<ref refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" kindref="member">get_L</ref>(pos));</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classclass__finite__state_1a2bab98a347afda673594adf709f55413" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,3&gt;<sp/><ref refid="classclass__finite__state_1a96207fcc3378d0bcc7c884055d9862b0" kindref="member">class_finite_state::get_A</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" kindref="member">get_L</ref>(pos)).contract(<ref refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" kindref="member">get_G</ref>(pos),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({1},{1})).shuffle(<ref refid="namespace_textra_1a11ff5da431d0a149284e51800d10c0cc" kindref="member">Textra::array3</ref>{1,0,2});</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classclass__finite__state_1a5c6bd5c2fc63f3aa4d6a9e09ede8020b" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,3&gt;<sp/><ref refid="classclass__finite__state_1a329621889f03d2af14130fda0b834457" kindref="member">class_finite_state::get_B</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" kindref="member">get_G</ref>(pos).contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" kindref="member">get_L</ref>(pos+1)),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}));</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classclass__finite__state_1a7aedc2c9a2f2f33bf376431395a499d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__environment" kindref="compound">class_environment</ref><sp/>&amp;<sp/><ref refid="classclass__finite__state_1a7aedc2c9a2f2f33bf376431395a499d1" kindref="member">class_finite_state::get_ENVL</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;<sp/><ref refid="classclass__finite__state_1a4cdeeeffc013c85f8cd657b2fd06fe0e" kindref="member">ENV_L</ref>.back().get_position()<sp/>)<sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENVL(pos):<sp/><sp/>pos<sp/>is<sp/>not<sp/>in<sp/>left<sp/>side:<sp/>{}&quot;</highlight><highlight class="normal">,pos));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/><ref refid="classclass__finite__state_1a4cdeeeffc013c85f8cd657b2fd06fe0e" kindref="member">ENV_L</ref>.size())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENVL(pos)<sp/>pos<sp/>out<sp/>of<sp/>range:<sp/>{}&quot;</highlight><highlight class="normal">,pos));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>env_it<sp/>=<sp/>std::next(<ref refid="classclass__finite__state_1a4cdeeeffc013c85f8cd657b2fd06fe0e" kindref="member">ENV_L</ref>.begin(),<sp/>pos);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_it-&gt;get_position()<sp/>!=<sp/>pos)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENVL(pos):<sp/>Mismatch<sp/>in<sp/>env<sp/>position<sp/>and<sp/>pos:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>env_it-&gt;get_position(),<sp/>pos));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*env_it;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classclass__finite__state_1a4573393d6b6d20bd80ece83113f9c442" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__environment" kindref="compound">class_environment</ref><sp/>&amp;<sp/><ref refid="classclass__finite__state_1a4573393d6b6d20bd80ece83113f9c442" kindref="member">class_finite_state::get_ENVR</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/><ref refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" kindref="member">ENV_R</ref>.front().get_position()<sp/>){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENVR(pos):<sp/><sp/>pos<sp/>is<sp/>not<sp/>in<sp/>right<sp/>side:<sp/>{}&quot;</highlight><highlight class="normal"><sp/>,<sp/>pos));}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>()<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENVR(pos):<sp/><sp/>pos<sp/>out<sp/>of<sp/>range:<sp/>{}&quot;</highlight><highlight class="normal"><sp/>,<sp/>pos));}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&lt;<sp/><ref refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" kindref="member">ENV_R</ref>.front().get_position())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENVR(pos):<sp/>Mismatch<sp/>in<sp/>pos<sp/>and<sp/>ENVR<sp/>front<sp/>position:<sp/>{}<sp/>&lt;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pos,<sp/><sp/><ref refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" kindref="member">ENV_R</ref>.front().get_position()));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>env_it<sp/>=<sp/>std::next(<ref refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" kindref="member">ENV_R</ref>.begin(),<sp/>pos<sp/>-<sp/><ref refid="classclass__finite__state_1ae95fa8eba5c5f26a8945c5152a9356f5" kindref="member">ENV_R</ref>.front().get_position());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_it-&gt;get_position()<sp/>!=<sp/>pos)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENVR(pos):<sp/>Mismatch<sp/>in<sp/>env<sp/>position<sp/>and<sp/>pos:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>env_it-&gt;get_position(),<sp/>pos));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*env_it;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classclass__finite__state_1accbbf1266e0015b4693aefa54a3614b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__environment__var" kindref="compound">class_environment_var</ref><sp/>&amp;<sp/><ref refid="classclass__finite__state_1accbbf1266e0015b4693aefa54a3614b9" kindref="member">class_finite_state::get_ENV2L</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;<sp/><ref refid="classclass__finite__state_1a4a6f7da1f22176f584726f3132ca01c9" kindref="member">ENV2_L</ref>.back().get_position()<sp/>)<sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENV2L(pos):<sp/><sp/>pos<sp/>is<sp/>not<sp/>in<sp/>left<sp/>side:<sp/>{}&quot;</highlight><highlight class="normal">,pos));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/><ref refid="classclass__finite__state_1a4a6f7da1f22176f584726f3132ca01c9" kindref="member">ENV2_L</ref>.size())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENV2L(pos)<sp/>pos<sp/>out<sp/>of<sp/>range:<sp/>{}&quot;</highlight><highlight class="normal">,pos));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>env2_it<sp/>=<sp/>std::next(<ref refid="classclass__finite__state_1a4a6f7da1f22176f584726f3132ca01c9" kindref="member">ENV2_L</ref>.begin(),<sp/>pos);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env2_it-&gt;get_position()<sp/>!=<sp/>pos)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENV2L(pos):<sp/>Mismatch<sp/>in<sp/>env<sp/>position<sp/>and<sp/>pos:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>env2_it-&gt;get_position(),<sp/>pos));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*env2_it;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classclass__finite__state_1aa221609ca29e4f80632b6d9b5fd078de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__environment__var" kindref="compound">class_environment_var</ref><sp/>&amp;<sp/><ref refid="classclass__finite__state_1aa221609ca29e4f80632b6d9b5fd078de" kindref="member">class_finite_state::get_ENV2R</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/><ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref>.front().get_position()<sp/>)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENV2R(pos):<sp/><sp/>pos<sp/>is<sp/>not<sp/>in<sp/>right<sp/>side:<sp/>{}&quot;</highlight><highlight class="normal"><sp/>,<sp/>pos));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;<sp/><ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref>.back().get_position()<sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENV2R(pos):<sp/><sp/>pos<sp/>is<sp/>not<sp/>in<sp/>right<sp/>side:<sp/>{}&quot;</highlight><highlight class="normal"><sp/>,<sp/>pos));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>()<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENV2R(pos):<sp/><sp/>pos<sp/>out<sp/>of<sp/>range:<sp/>{}&quot;</highlight><highlight class="normal"><sp/>,<sp/>pos));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos<sp/>&lt;<sp/><ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref>.front().get_position())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENV2R(pos):<sp/>Mismatch<sp/>in<sp/>pos<sp/>and<sp/>ENV2R<sp/>front<sp/>position:<sp/>{}<sp/>&lt;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>pos,<sp/><sp/><ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref>.front().get_position()));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>env2_it<sp/>=<sp/>std::next(<ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref>.begin(),<sp/>pos<sp/>-<sp/><ref refid="classclass__finite__state_1ad5960e27ead5a41ac0ecbcd9f8643728" kindref="member">ENV2_R</ref>.front().get_position());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env2_it-&gt;get_position()<sp/>!=<sp/>pos)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(fmt::format(</highlight><highlight class="stringliteral">&quot;get_ENV2R(pos):<sp/>Mismatch<sp/>in<sp/>env2<sp/>position<sp/>and<sp/>pos:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>env2_it-&gt;get_position(),<sp/>pos));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*env2_it;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classclass__finite__state_1a25cde46e0f0751d3d62ad45c254bf2ed" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,4&gt;<sp/><ref refid="classclass__finite__state_1a9b5d49eca3ca64dae7bbd8e1d2b1d03d" kindref="member">class_finite_state::get_theta</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a96207fcc3378d0bcc7c884055d9862b0" kindref="member">get_A</ref>(pos)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(<ref refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" kindref="member">get_L</ref>(pos+1)),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}))</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(<ref refid="classclass__finite__state_1a329621889f03d2af14130fda0b834457" kindref="member">get_B</ref>(pos+1),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{1}));</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>reduced<sp/>energy<sp/>MPO&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classclass__finite__state_1a3a7052caca98bd5c1b2d99aa8582e3c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="classclass__finite__state_1a3a7052caca98bd5c1b2d99aa8582e3c3" kindref="member">class_finite_state::isReduced</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reduced<sp/>=<sp/><ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>.front()-&gt;isReduced();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpo<sp/>:<sp/><ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reduced<sp/>!=<sp/>mpo-&gt;isReduced()){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;First<sp/>MPO<sp/>has<sp/>isReduce:<sp/>{},<sp/>but<sp/>MPO<sp/>at<sp/>pos<sp/>{}<sp/>has<sp/>isReduce:<sp/>{}&quot;</highlight><highlight class="normal">,reduced,<sp/>mpo-&gt;get_position(),<sp/>mpo-&gt;isReduced()));}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpo<sp/>:<sp/><ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reduced<sp/>!=<sp/>mpo-&gt;isReduced()){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;First<sp/>MPO<sp/>has<sp/>isReduce:<sp/>{},<sp/>but<sp/>MPO<sp/>at<sp/>pos<sp/>{}<sp/>has<sp/>isReduce:<sp/>{}&quot;</highlight><highlight class="normal">,reduced,<sp/>mpo-&gt;get_position(),<sp/>mpo-&gt;isReduced()));}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reduced;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classclass__finite__state_1a9836c470ac6318f415b1df4034d6530e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a9836c470ac6318f415b1df4034d6530e" kindref="member">class_finite_state::get_energy_reduced</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>that<sp/>all<sp/>energies<sp/>are<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e_reduced<sp/>=<sp/><ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>.front()-&gt;get_reduced_energy();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpo<sp/>:<sp/><ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpo-&gt;get_reduced_energy()<sp/>!=<sp/>e_reduced){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Reduced<sp/>energy<sp/>mismatch!&quot;</highlight><highlight class="normal">);}}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpo<sp/>:<sp/><ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpo-&gt;get_reduced_energy()<sp/>!=<sp/>e_reduced){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Reduced<sp/>energy<sp/>mismatch!&quot;</highlight><highlight class="normal">);}}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e_reduced*<ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="classclass__finite__state_1a676679d2e78d031b43016baca197da13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a676679d2e78d031b43016baca197da13" kindref="member">class_finite_state::set_reduced_energy</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>site_energy){</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__finite__state_1a9836c470ac6318f415b1df4034d6530e" kindref="member">get_energy_reduced</ref>()<sp/>==<sp/>site_energy)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1aa02506c564252a93d2c53e17454c6826" kindref="member">multimpo</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpo<sp/>:<sp/><ref refid="classclass__finite__state_1a906a5be3c78240633bc2b41b46a9573e" kindref="member">MPO_L</ref>)<sp/>mpo-&gt;set_reduced_energy(site_energy);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpo<sp/>:<sp/><ref refid="classclass__finite__state_1a33bf7fe5a45f262ffdf1f7b380741c83" kindref="member">MPO_R</ref>)<sp/>mpo-&gt;set_reduced_energy(site_energy);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1mps_1a39333dfe4f63e99d175302ff77155464" kindref="member">tools::finite::mps::rebuild_environments</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="classclass__finite__state_1a9cf7e9c62851ae862ed9cf4cff840ff0" refkind="member"><highlight class="normal">std::list&lt;size_t&gt;<sp/><ref refid="classclass__finite__state_1a9cf7e9c62851ae862ed9cf4cff840ff0" kindref="member">class_finite_state::activate_sites</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>threshold,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_sites){</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1aa826b1da2dc225002a215e8741fbcbfb" kindref="member">clear_cache</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1multisite_1a4f3f0123799362edd861eaedd6ed4510" kindref="member">tools::finite::multisite::generate_site_list</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,threshold,<sp/>max_sites);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classclass__finite__state_1af815d761506be3a8e1aa9845cc41d1b5" refkind="member"><highlight class="normal">Eigen::DSizes&lt;long,3&gt;<sp/><ref refid="classclass__finite__state_1af815d761506be3a8e1aa9845cc41d1b5" kindref="member">class_finite_state::active_dimensions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1multisite_1a1fe27a2b64badb43c42ddc1279eb0d62" kindref="member">tools::finite::multisite::get_dimensions</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classclass__finite__state_1a3ad3dcbfff6963012088e3c5f2ed5a06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a3ad3dcbfff6963012088e3c5f2ed5a06" kindref="member">class_finite_state::active_problem_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1multisite_1a8f8903b5e719e33fa273ca6026e97cd5" kindref="member">tools::finite::multisite::get_problem_size</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classclass__finite__state_1a8f37806611e917bcf0ba5322044c5949" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,3&gt;<sp/><sp/><sp/><ref refid="classclass__finite__state_1a8f37806611e917bcf0ba5322044c5949" kindref="member">class_finite_state::get_multitheta</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1ab34440df6aacd0977363b9c622adf9e2" kindref="member">multitheta</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1ab34440df6aacd0977363b9c622adf9e2" kindref="member">multitheta</ref>.value();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>multi<sp/>theta...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.empty()){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;No<sp/>active<sp/>sites<sp/>on<sp/>which<sp/>to<sp/>build<sp/>multitheta&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>multitheta;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,3&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;site<sp/>:<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>){</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first){multitheta<sp/>=<sp/><ref refid="classclass__finite__state_1a96207fcc3378d0bcc7c884055d9862b0" kindref="member">get_A</ref>(site);<sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>A<sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__finite__state_1a96207fcc3378d0bcc7c884055d9862b0" kindref="member">get_A</ref>(site);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim0<sp/>=<sp/>multitheta.dimension(0)<sp/>*<sp/>A.dimension(0);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim1<sp/>=<sp/>multitheta.dimension(1);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim2<sp/>=<sp/>A.dimension(2);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>multitheta</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(A,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{1}))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">Textra::array4</ref>{0,2,1,3})</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.reshape(<ref refid="namespace_textra_1a11ff5da431d0a149284e51800d10c0cc" kindref="member">Textra::array3</ref>{dim0,dim1,dim2});</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multitheta<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>L<sp/>=<sp/><ref refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" kindref="member">get_L</ref>(active_sites.back()+1);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>multitheta.contract(<ref refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" kindref="member">Textra::asDiagonal</ref>(L),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>multi<sp/>theta...<sp/>OK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1ab34440df6aacd0977363b9c622adf9e2" kindref="member">multitheta</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1ab34440df6aacd0977363b9c622adf9e2" kindref="member">multitheta</ref>.value();</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="classclass__finite__state_1a1e0d4d3cb509385ecd6acda4f4f5fcc0" refkind="member"><highlight class="normal">Eigen::Tensor&lt;class_finite_state::Scalar,4&gt;<sp/><sp/><sp/><ref refid="classclass__finite__state_1a1e0d4d3cb509385ecd6acda4f4f5fcc0" kindref="member">class_finite_state::get_multimpo</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1aa02506c564252a93d2c53e17454c6826" kindref="member">multimpo</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1aa02506c564252a93d2c53e17454c6826" kindref="member">multimpo</ref>.value();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>multi<sp/>mpo...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.empty()){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;No<sp/>active<sp/>sites<sp/>on<sp/>which<sp/>to<sp/>build<sp/>multimpo&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>multimpo;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,4&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;site<sp/>:<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>){</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first){multimpo<sp/>=<sp/><ref refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" kindref="member">get_MPO</ref>(site).<ref refid="classclass__model__base_1a0789119b3413f70affbdbc5f7b15e829" kindref="member">MPO</ref>();<sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;mpo<sp/>=<sp/><ref refid="classclass__finite__state_1a53311263b0717873d16e1abf02b9b6a7" kindref="member">get_MPO</ref>(site).<ref refid="classclass__model__base_1a0789119b3413f70affbdbc5f7b15e829" kindref="member">MPO</ref>();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim0<sp/>=<sp/>multimpo.dimension(0);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim1<sp/>=<sp/>mpo.dimension(1);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim2<sp/>=<sp/>multimpo.dimension(2)<sp/>*<sp/>mpo.dimension(2);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim3<sp/>=<sp/>multimpo.dimension(3)<sp/>*<sp/>mpo.dimension(3);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>multimpo</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({1},{0}))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1a3d45de3aad22e5851745e69630523d49" kindref="member">Textra::array6</ref>{0,3,1,4,2,5})</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.reshape(<ref refid="namespace_textra_1aed08040fb74720378781c145b88c1d5a" kindref="member">Textra::array4</ref>{dim0,dim1,dim2,dim3});</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multimpo<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>multi<sp/>mpo...<sp/>OK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1aa02506c564252a93d2c53e17454c6826" kindref="member">multimpo</ref><sp/>=<sp/>multimpo;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref>.<ref refid="structclass__finite__state_1_1_cache_1aa02506c564252a93d2c53e17454c6826" kindref="member">multimpo</ref>.value();</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">std::pair&lt;std::reference_wrapper&lt;const<sp/>class_environment&gt;<sp/>,<sp/>std::reference_wrapper&lt;const<sp/>class_environment&gt;&gt;</highlight></codeline>
<codeline lineno="393" refid="classclass__finite__state_1a9a79f0c089bca0ea36c5ca38e8a5911d" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state_1a9a79f0c089bca0ea36c5ca38e8a5911d" kindref="member">class_finite_state::get_multienv</ref><sp/>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<ref refid="classclass__finite__state_1a7aedc2c9a2f2f33bf376431395a499d1" kindref="member">get_ENVL</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front()),<sp/><ref refid="classclass__finite__state_1a4573393d6b6d20bd80ece83113f9c442" kindref="member">get_ENVR</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back()));</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">std::pair&lt;std::reference_wrapper&lt;const<sp/>class_environment_var&gt;<sp/>,<sp/>std::reference_wrapper&lt;const<sp/>class_environment_var&gt;&gt;</highlight></codeline>
<codeline lineno="398" refid="classclass__finite__state_1aaa77dd85e43adfd62ee1156565690e58" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state_1aaa77dd85e43adfd62ee1156565690e58" kindref="member">class_finite_state::get_multienv2</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(<ref refid="classclass__finite__state_1accbbf1266e0015b4693aefa54a3614b9" kindref="member">get_ENV2L</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front()),<sp/><ref refid="classclass__finite__state_1aa221609ca29e4f80632b6d9b5fd078de" kindref="member">get_ENV2R</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back()));</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="classclass__finite__state_1a053002cbda922db46174d98f2d7b1377" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state_1a8f2285381f12e6056936efcc5f8c73cf" kindref="member">class_finite_state::TType&lt;6&gt;</ref><sp/><ref refid="classclass__finite__state_1a053002cbda922db46174d98f2d7b1377" kindref="member">class_finite_state::get_multi_hamiltonian</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(cache.multiham)<sp/>return<sp/>cache.multiham.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mpo<sp/>=<sp/><ref refid="classclass__finite__state_1a1e0d4d3cb509385ecd6acda4f4f5fcc0" kindref="member">get_multimpo</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>multi<sp/>hamiltonian...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>envL<sp/>=<sp/><ref refid="classclass__finite__state_1a7aedc2c9a2f2f33bf376431395a499d1" kindref="member">get_ENVL</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>envR<sp/>=<sp/><ref refid="classclass__finite__state_1a4573393d6b6d20bd80ece83113f9c442" kindref="member">get_ENVR</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envL.get_position()<sp/>!=<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>in<sp/>ENVL<sp/>and<sp/>active<sp/>site<sp/>positions:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>envL.get_position()<sp/>,<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front()));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envR.get_position()<sp/>!=<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back())<sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>in<sp/>ENVR<sp/>and<sp/>active<sp/>site<sp/>positions:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>envR.get_position()<sp/>,<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back()));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cache.multiham<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a8f2285381f12e6056936efcc5f8c73cf" kindref="member">TType&lt;6&gt;</ref><sp/>multiham<sp/>=</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envL.<ref refid="classclass__environment_1a1b3e96fea0bbdd34c2e01e9427649fa4" kindref="member">block</ref></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}))</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(envR.block<sp/><sp/><sp/><sp/>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{2}))</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1a3d45de3aad22e5851745e69630523d49" kindref="member">Textra::array6</ref>{2,0,4,3,1,5});</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>multi<sp/>hamiltonian...<sp/>OK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>cache.multiham.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>multiham;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="classclass__finite__state_1affea7e8ff410bed449df34d29755081a" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state_1a8f2285381f12e6056936efcc5f8c73cf" kindref="member">class_finite_state::TType&lt;6&gt;</ref><sp/><sp/><sp/><ref refid="classclass__finite__state_1affea7e8ff410bed449df34d29755081a" kindref="member">class_finite_state::get_multi_hamiltonian2</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(cache.multiham_sq)<sp/>return<sp/>cache.multiham_sq.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mpo<sp/>=<sp/><ref refid="classclass__finite__state_1a1e0d4d3cb509385ecd6acda4f4f5fcc0" kindref="member">get_multimpo</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>multi<sp/>hamiltonian<sp/>squared...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>env2L<sp/>=<sp/><ref refid="classclass__finite__state_1accbbf1266e0015b4693aefa54a3614b9" kindref="member">get_ENV2L</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front());</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>env2R<sp/>=<sp/><ref refid="classclass__finite__state_1aa221609ca29e4f80632b6d9b5fd078de" kindref="member">get_ENV2R</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env2L.get_position()<sp/>!=<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>in<sp/>ENVL<sp/>and<sp/>active<sp/>site<sp/>positions:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>env2L.get_position()<sp/>,<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front()));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env2R.get_position()<sp/>!=<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back())<sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>in<sp/>ENVR<sp/>and<sp/>active<sp/>site<sp/>positions:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>env2R.get_position()<sp/>,<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back()));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cache.multiham_sq<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a8f2285381f12e6056936efcc5f8c73cf" kindref="member">TType&lt;6&gt;</ref><sp/>multiham_sq<sp/>=</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env2L.<ref refid="classclass__environment__var_1abf95de609b4a669c32ae3258001d4e40" kindref="member">block</ref></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}))</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({5,2},{2,0}))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2R.block<sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2,4},{2,3}))</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.shuffle(<ref refid="namespace_textra_1a3d45de3aad22e5851745e69630523d49" kindref="member">Textra::array6</ref>{2,0,4,3,1,5});</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>multi<sp/>hamiltonian<sp/>squared...<sp/>OK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>multiham_sq;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>cache.multiham_sq.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="classclass__finite__state_1a530fd15693c27d806187774e661707db" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state_1a27d4acea86f4ca9189be11ae00e682c2" kindref="member">class_finite_state::MType</ref><sp/><ref refid="classclass__finite__state_1a530fd15693c27d806187774e661707db" kindref="member">class_finite_state::get_multi_hamiltonian_matrix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(cache.multiham_mat)<sp/>return<sp/>cache.multiham_mat.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size<sp/>=<sp/><ref refid="classclass__finite__state_1a3ad3dcbfff6963012088e3c5f2ed5a06" kindref="member">active_problem_size</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ham_tensor<sp/>=<sp/><ref refid="classclass__finite__state_1a053002cbda922db46174d98f2d7b1377" kindref="member">get_multi_hamiltonian</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cols<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ham_tensor.dimension(0)*<sp/>ham_tensor.dimension(1)*<sp/>ham_tensor.dimension(2);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rows<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ham_tensor.dimension(3)*<sp/>ham_tensor.dimension(4)*<sp/>ham_tensor.dimension(5);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rows<sp/>!=<sp/>size)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>hamiltonian<sp/>dim0*dim1*dim2<sp/>and<sp/>cols:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,cols,<sp/>size));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cols<sp/>!=<sp/>size)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>hamiltonian<sp/>dim3*dim4*dim5<sp/>and<sp/>rows:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,rows,<sp/>size));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;MType&gt;<sp/>(ham_tensor.data(),size,size).transpose();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cache.multiham_mat<sp/>=<sp/><sp/>Eigen::Map&lt;MType&gt;<sp/>(ham_tensor.data(),size,size).transpose();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>cache.multiham_mat.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="classclass__finite__state_1a7aac0b56ade9a1d071bf73d2544010dd" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state_1a27d4acea86f4ca9189be11ae00e682c2" kindref="member">class_finite_state::MType</ref><sp/><ref refid="classclass__finite__state_1a7aac0b56ade9a1d071bf73d2544010dd" kindref="member">class_finite_state::get_multi_hamiltonian2_matrix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(cache.multiham_sq_mat)<sp/>return<sp/>cache.multiham_sq_mat.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size<sp/>=<sp/><ref refid="classclass__finite__state_1a3ad3dcbfff6963012088e3c5f2ed5a06" kindref="member">active_problem_size</ref>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ham_squared_tensor<sp/>=<sp/><ref refid="classclass__finite__state_1affea7e8ff410bed449df34d29755081a" kindref="member">get_multi_hamiltonian2</ref>();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cols<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ham_squared_tensor.dimension(0)*<sp/>ham_squared_tensor.dimension(1)*<sp/>ham_squared_tensor.dimension(2);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rows<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ham_squared_tensor.dimension(3)*<sp/>ham_squared_tensor.dimension(4)*<sp/>ham_squared_tensor.dimension(5);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rows<sp/>!=<sp/>size)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>hamiltonian<sp/>sq<sp/>dim0*dim1*dim2<sp/>and<sp/>cols:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,cols,<sp/>size));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cols<sp/>!=<sp/>size)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>hamiltonian<sp/>sq<sp/>dim3*dim4*dim5<sp/>and<sp/>rows:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,rows,<sp/>size));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;MType&gt;<sp/>(ham_squared_tensor.data(),size,size).transpose();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cache.multiham_sq_mat<sp/><sp/>=<sp/>Eigen::Map&lt;MType&gt;<sp/>(ham_squared_tensor.data(),size,size).transpose();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>cache.multiham_sq_mat.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classclass__finite__state_1a4b8a0f53d7f4890157c3f2f7c24937a2" refkind="member"><highlight class="normal"><ref refid="classclass__finite__state_1a27d4acea86f4ca9189be11ae00e682c2" kindref="member">class_finite_state::MType</ref><sp/><sp/><ref refid="classclass__finite__state_1a4b8a0f53d7f4890157c3f2f7c24937a2" kindref="member">class_finite_state::get_multi_hamiltonian2_subspace_matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a27d4acea86f4ca9189be11ae00e682c2" kindref="member">MType</ref><sp/>&amp;<sp/>eigvecs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(cache.multiham_sq_sub)<sp/>return<sp/>cache.multiham_sq_sub.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mpo<sp/>=<sp/><ref refid="classclass__finite__state_1a1e0d4d3cb509385ecd6acda4f4f5fcc0" kindref="member">get_multimpo</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>hamiltonian<sp/>squared<sp/>matrix<sp/>in<sp/>subspace...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dims<sp/>=<sp/><ref refid="classclass__finite__state_1af815d761506be3a8e1aa9845cc41d1b5" kindref="member">active_dimensions</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::DSizes&lt;long,4&gt;<sp/>eigvecs_dims<sp/>{dims[0],dims[1],dims[2],eigvecs.cols()};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eigvecs_tensor<sp/>=<sp/>Eigen::TensorMap&lt;const<sp/>Eigen::Tensor&lt;const<sp/>Scalar,4&gt;&gt;(eigvecs.data(),<sp/>eigvecs_dims<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>env2L<sp/>=<sp/><ref refid="classclass__finite__state_1accbbf1266e0015b4693aefa54a3614b9" kindref="member">get_ENV2L</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front());</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>env2R<sp/>=<sp/><ref refid="classclass__finite__state_1aa221609ca29e4f80632b6d9b5fd078de" kindref="member">get_ENV2R</ref>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back());</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env2L.get_position()<sp/>!=<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>in<sp/>ENVL<sp/>and<sp/>active<sp/>site<sp/>positions:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>env2L.get_position()<sp/>,<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front()));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env2R.get_position()<sp/>!=<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back())<sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Mismatch<sp/>in<sp/>ENVR<sp/>and<sp/>active<sp/>site<sp/>positions:<sp/>{}<sp/>!=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>env2R.get_position()<sp/>,<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.back()));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>log2chiL<sp/><sp/>=<sp/>std::log2(dims[1]);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>log2chiR<sp/><sp/>=<sp/>std::log2(dims[2]);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>log2spin<sp/><sp/>=<sp/>std::log2(dims[0]);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Tensor&lt;Scalar,2&gt;<sp/>H2;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log2spin<sp/>&gt;<sp/>log2chiL<sp/>+<sp/>log2chiR){</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(log2chiL<sp/>&gt;=<sp/>log2chiR){</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;trace(&quot;get_H2<sp/>path:<sp/>log2spin<sp/>&gt;<sp/>log2chiL<sp/>+<sp/>log2chiR<sp/><sp/>and<sp/><sp/>log2chiL<sp/>&gt;=<sp/>log2chiR<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H2<sp/>=</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigvecs_tensor</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2L.block,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({1},{0}))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({0,4},{2,0}))</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2R.block,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({0,4},{0,2}))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({3,2,5},{2,0,1}))</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(eigvecs_tensor.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({3,1,2},{0,1,2}));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;trace(&quot;get_H2<sp/>path:<sp/>log2spin<sp/>&gt;<sp/>log2chiL<sp/>+<sp/>log2chiR<sp/><sp/>and<sp/><sp/>log2chiL<sp/>&lt;<sp/>log2chiR<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H2<sp/>=</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigvecs_tensor</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2R.block,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({2},{0}))</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({0,4},{2,1}))</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2L.block,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({0,4},{0,2}))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({3,2,5},{2,1,0}))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(eigvecs_tensor.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({3,2,1},{0,1,2}));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;trace(&quot;get_H2<sp/>path:<sp/>log2spin<sp/>&lt;=<sp/>log2chiL<sp/>+<sp/>log2chiR&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H2<sp/>=</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigvecs_tensor</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2L.block,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({1},{0}))</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({0,4},{2,0}))</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({5,3},{2,0}))</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(eigvecs_tensor.conjugate(),<sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({5,2},{0,1}))</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2R.block,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" kindref="member">Textra::idx</ref>({0,4,2,3},{0,1,2,3}));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>H2<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigvecs_tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2L.block,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({1},{0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({0,4},{2,0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(mpo<sp/><sp/>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({5,3},{2,0}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(eigvecs_tensor.conjugate(),<sp/>Textra::idx({5,2},{0,1}))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.contract(env2R.block,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Textra::idx({0,4,2,3},{0,1,2,3}));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Contracting<sp/>hamiltonian<sp/>squared<sp/>matrix<sp/>in<sp/>subspace...<sp/>OK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;MType&gt;(H2.data(),H2.dimension(0),H2.dimension(1));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cache.multiham_sq_sub<sp/>=<sp/>Eigen::Map&lt;MType&gt;(H2.data(),H2.dimension(0),H2.dimension(1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>cache.multiham_sq_sub.value();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="classclass__finite__state_1a8f08867b1dd985e0428620b548443213" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a8f08867b1dd985e0428620b548443213" kindref="member">class_finite_state::unset_measurements</ref>()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref><sp/>=<sp/><ref refid="structclass__finite__state_1_1_measurements" kindref="compound">Measurements</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="classclass__finite__state_1aa826b1da2dc225002a215e8741fbcbfb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1aa826b1da2dc225002a215e8741fbcbfb" kindref="member">class_finite_state::clear_cache</ref>()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a91321e72aa979ff6129af307b5e11112" kindref="member">cache</ref><sp/>=<sp/><ref refid="structclass__finite__state_1_1_cache" kindref="compound">Cache</ref>();</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="classclass__finite__state_1a6ae17f6b1115a6e5630beb59cd064ca6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1abe811f34bf53c45089eb7878f7dccdc4" kindref="member">class_finite_state::do_all_measurements</ref>()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a318ad377c472789df9713294b59788f1" kindref="member">length</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a7ea586a94abc0dc2941e01d1c6ceebc5" kindref="member">tools::finite::measure::length</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1af042370ea31d47fdc261e6827e86ac57" kindref="member">bond_dimension_current</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1afa191922f51d01db89c40c7fe8a8588d" kindref="member">tools::finite::measure::bond_dimension_current</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a729ef146fb2e5c81b355e60cb9522ec0" kindref="member">bond_dimension_midchain</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a291f3347e7b6f62644d330bf88cbcca1" kindref="member">tools::finite::measure::bond_dimension_midchain</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1aa65086fe9e146d381d987e1fd2941dc8" kindref="member">bond_dimensions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a24ce7e82c8d286c098cd67e3b9339d68" kindref="member">tools::finite::measure::bond_dimensions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1afa6883ebbbbe1bff5f922d499a19aab4" kindref="member">norm</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" kindref="member">tools::finite::measure::norm</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a7cfa40e6d2c88d78e6418094f603603d" kindref="member">energy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1ad0bf82691db6ea773183f4f38c245636" kindref="member">tools::finite::measure::energy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a7d515b15cfdd205b7ca1bf6e51ebbd15" kindref="member">energy_per_site</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a81b06529556e68f882c591397b39ef2f" kindref="member">tools::finite::measure::energy_per_site</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a8b47be757b3751ca9ee49c07a6102324" kindref="member">energy_variance_mpo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5a593749b940023e4150387fb657fcd6" kindref="member">tools::finite::measure::energy_variance</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a5d9b8e22eb2c5fbb1532ac82658e7157" kindref="member">energy_variance_per_site</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a0435b2ea12613bfa030adc9dab6c8e52" kindref="member">tools::finite::measure::energy_variance_per_site</ref><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a8b1e7873a5a64430a1adba5dd7e5d3c3" kindref="member">spin_components</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a273e4dc80361488ebb574bf6a3caf69d" kindref="member">tools::finite::measure::spin_components</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>automatically<sp/>measure<sp/>sx,sy<sp/>and<sp/>sz<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a5f91cc77cb6af61ae6abd97d311b8da8" kindref="member">entanglement_entropy_current</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a12d36574cc9c432e24fa11fd3e9302de" kindref="member">tools::finite::measure::entanglement_entropy_current</ref><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1ae474957f0142cb20d39632a9797087de" kindref="member">entanglement_entropy_midchain</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a7b50dc2af206a2a62705243ffca08d75" kindref="member">tools::finite::measure::entanglement_entropy_midchain</ref><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1acaa20c4b46a3ca61b278d3f9ab026309" kindref="member">measurements</ref>.<ref refid="structclass__finite__state_1_1_measurements_1a581133f1d7650f3045392243e6b9537c" kindref="member">entanglement_entropies</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5fa07e0eb6987bcc1431afdfbced7016" kindref="member">tools::finite::measure::entanglement_entropies</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="classclass__finite__state_1afcb0a1028025e0eed6a16af39e185753" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1afcb0a1028025e0eed6a16af39e185753" kindref="member">class_finite_state::tag_active_sites_have_been_updated</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tag)</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>.size()<sp/>!=<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>tag<sp/>active<sp/>sites,<sp/>size<sp/>mismatch<sp/>in<sp/>site<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>site:<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>){</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>[site]<sp/>=<sp/>tag;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="classclass__finite__state_1ab83150d3afacac40f97dd1501c95be57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1ab83150d3afacac40f97dd1501c95be57" kindref="member">class_finite_state::tag_all_sites_have_been_updated</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tag)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>.size()<sp/>!=<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>untag<sp/>all<sp/>sites,<sp/>size<sp/>mismatch<sp/>in<sp/>site<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref><sp/>=<sp/>std::vector&lt;bool&gt;(<ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>(),tag);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576" refid="classclass__finite__state_1a180b134fd9d937b46c25f772354b0b50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a180b134fd9d937b46c25f772354b0b50" kindref="member">class_finite_state::all_sites_updated</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>.size()<sp/>!=<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>check<sp/>update<sp/>status<sp/>on<sp/>all<sp/>sites,<sp/>size<sp/>mismatch<sp/>in<sp/>site<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>std::all_of(<ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>.begin(),<sp/><ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>.end(),<sp/>[](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;<sp/>});</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="classclass__finite__state_1a96e11ec3280e0fb87286fe1a2c69258e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classclass__finite__state_1a96e11ec3280e0fb87286fe1a2c69258e" kindref="member">class_finite_state::active_sites_updated</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>.size()<sp/>!=<sp/><ref refid="classclass__finite__state_1ae39835ff5932221d63fa83dc679b1ed7" kindref="member">get_length</ref>())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>check<sp/>update<sp/>status<sp/>on<sp/>all<sp/>sites,<sp/>size<sp/>mismatch<sp/>in<sp/>site<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_site_ptr<sp/>=<sp/><sp/><ref refid="classclass__finite__state_1a6a41e4855733b813d016d8ca5b453267" kindref="member">site_update_tags</ref>.begin()<sp/>+<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.front();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_site_ptr<sp/><sp/>=<sp/><sp/>first_site_ptr<sp/>+<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>.size()-1;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>update<sp/>status<sp/>on<sp/>sites:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" kindref="member">active_sites</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>std::all_of(first_site_ptr,<sp/>last_site_ptr,<sp/>[](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;<sp/>});</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/class_finite_state.cpp"/>
  </compounddef>
</doxygen>
