<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class__algorithm__finite_8cpp" kind="file" language="C++">
    <compoundname>class_algorithm_finite.cpp</compoundname>
    <includes refid="class__algorithm__finite_8h" local="yes">class_algorithm_finite.h</includes>
    <includes refid="nmspc__settings_8h" local="no">config/nmspc_settings.h</includes>
    <includes refid="nmspc__exceptions_8h" local="no">general/nmspc_exceptions.h</includes>
    <includes refid="nmspc__iter_8h" local="no">general/nmspc_iter.h</includes>
    <includes local="no">h5pp/h5pp.h</includes>
    <includes refid="num_8h" local="no">math/num.h</includes>
    <includes refid="class__edges__finite_8h" local="no">tensors/edges/class_edges_finite.h</includes>
    <includes refid="class__model__finite_8h" local="no">tensors/model/class_model_finite.h</includes>
    <includes refid="class__state__finite_8h" local="no">tensors/state/class_state_finite.h</includes>
    <includes refid="common_2io_8h" local="no">tools/common/io.h</includes>
    <includes refid="log_8h" local="no">tools/common/log.h</includes>
    <includes refid="prof_8h" local="no">tools/common/prof.h</includes>
    <includes refid="finite_2env_8h" local="no">tools/finite/env.h</includes>
    <includes refid="finite_2io_8h" local="no">tools/finite/io.h</includes>
    <includes refid="finite_2measure_8h" local="no">tools/finite/measure.h</includes>
    <includes refid="finite_2mps_8h" local="no">tools/finite/mps.h</includes>
    <includes refid="ops_8h" local="no">tools/finite/ops.h</includes>
    <includes refid="finite_2print_8h" local="no">tools/finite/print.h</includes>
    <incdepgraph>
      <node id="42">
        <label>measure/state_measure_finite.h</label>
        <link refid="state__measure__finite_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>limits</label>
      </node>
      <node id="15">
        <label>tensors/class_tensors_finite.h</label>
        <link refid="class__tensors__finite_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>config/nmspc_settings.h</label>
        <link refid="nmspc__settings_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>iterator</label>
      </node>
      <node id="47">
        <label>io/spdlog.h</label>
        <link refid="spdlog_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>tools/finite/measure.h</label>
        <link refid="finite_2measure_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>general/nmspc_iter.h</label>
        <link refid="nmspc__iter_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="57">
        <label>tools/finite/print.h</label>
        <link refid="finite_2print_8h"/>
      </node>
      <node id="37">
        <label>cmath</label>
      </node>
      <node id="31">
        <label>debug.h</label>
        <link refid="debug_8h"/>
      </node>
      <node id="45">
        <label>tools/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>numeric</label>
      </node>
      <node id="46">
        <label>io/fmt.h</label>
        <link refid="io_2fmt_8h"/>
      </node>
      <node id="36">
        <label>math/num.h</label>
        <link refid="num_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="38">
        <label>tensors/edges/class_edges_finite.h</label>
        <link refid="class__edges__finite_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>map</label>
      </node>
      <node id="39">
        <label>tensors/model/class_model_finite.h</label>
        <link refid="class__model__finite_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>measure/tensors_measure_finite.h</label>
        <link refid="tensors__measure__finite_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="27">
        <label>tensors/edges/class_env_pair.h</label>
        <link refid="class__env__pair_8h"/>
      </node>
      <node id="24">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorForwardDeclarations.h</label>
      </node>
      <node id="28">
        <label>math/svd/settings.h</label>
        <link refid="svd_2settings_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>unsupported/Eigen/CXX11/src/Tensor/TensorMacros.h</label>
      </node>
      <node id="51">
        <label>tools/finite/env.h</label>
        <link refid="finite_2env_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>fmt/core.h</label>
      </node>
      <node id="10">
        <label>string_view</label>
      </node>
      <node id="54">
        <label>tools/finite/mps.h</label>
        <link refid="finite_2mps_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>optional</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="17">
        <label>general/eigen_tensor_fwd_decl.h</label>
        <link refid="eigen__tensor__fwd__decl_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>tools/common/prof.h</label>
        <link refid="prof_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>tools/finite/ops.h</label>
        <link refid="ops_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>array</label>
      </node>
      <node id="22">
        <label>Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="35">
        <label>h5pp/h5pp.h</label>
      </node>
      <node id="23">
        <label>Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="2">
        <label>class_algorithm_finite.h</label>
        <link refid="class__algorithm__finite_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>general/nmspc_exceptions.h</label>
        <link refid="nmspc__exceptions_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>tools/common/io.h</label>
        <link refid="common_2io_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="52">
        <label>tools/finite/io.h</label>
        <link refid="finite_2io_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>chrono</label>
      </node>
      <node id="20">
        <label>Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="3">
        <label>algorithms/class_algorithm_base.h</label>
        <link refid="class__algorithm__base_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>general/class_tic_toc.h</label>
        <link refid="class__tic__toc_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp</label>
        <link refid="class__algorithm__finite_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="55">
        <label>set</label>
      </node>
      <node id="5">
        <label>complex</label>
      </node>
      <node id="41">
        <label>tensors/state/class_state_finite.h</label>
        <link refid="class__state__finite_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="7">
        <label>config/enums.h</label>
        <link refid="config_2enums_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithms/class_algorithm_status.h</label>
        <link refid="class__algorithm__status_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>david<sp/>on<sp/>2019-06-24.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__algorithm__finite_8h" kindref="compound">class_algorithm_finite.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__settings_8h" kindref="compound">config/nmspc_settings.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__exceptions_8h" kindref="compound">general/nmspc_exceptions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmspc__iter_8h" kindref="compound">general/nmspc_iter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;h5pp/h5pp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="num_8h" kindref="compound">math/num.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__edges__finite_8h" kindref="compound">tensors/edges/class_edges_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__model__finite_8h" kindref="compound">tensors/model/class_model_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="class__state__finite_8h" kindref="compound">tensors/state/class_state_finite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="common_2io_8h" kindref="compound">tools/common/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="log_8h" kindref="compound">tools/common/log.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prof_8h" kindref="compound">tools/common/prof.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="finite_2env_8h" kindref="compound">tools/finite/env.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="finite_2io_8h" kindref="compound">tools/finite/io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="finite_2measure_8h" kindref="compound">tools/finite/measure.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="finite_2mps_8h" kindref="compound">tools/finite/mps.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ops_8h" kindref="compound">tools/finite/ops.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="finite_2print_8h" kindref="compound">tools/finite/print.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classclass__algorithm__finite_1a82a008615f845f5ad5a40e25f5abc671" refkind="member"><highlight class="normal"><ref refid="classclass__algorithm__finite_1a82a008615f845f5ad5a40e25f5abc671" kindref="member">class_algorithm_finite::class_algorithm_finite</ref>(std::shared_ptr&lt;h5pp::File&gt;<sp/>h5ppFile_,<sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9" kindref="member">AlgorithmType</ref><sp/>algo_type)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classclass__algorithm__base" kindref="compound">class_algorithm_base</ref>(std::move(h5ppFile_),<sp/>algo_type)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Constructing<sp/>class_algorithm_finite&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1abb0972d3e7bb9032719b3884cb47a84d" kindref="member">initialize</ref>(<ref refid="namespacesettings_1_1model_1a3628af587c3663ba75c2a3d6db7e16e6" kindref="member">settings::model::model_type</ref>,<sp/><ref refid="namespacesettings_1_1model_1aabf0ff2a07a4b8ae7e4141b1bde089cd" kindref="member">settings::model::model_size</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;set_algorithm(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a96d01fcfd2c06e9b4ecf2e1da197b2a9" kindref="member">entropy_iter</ref>.resize(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2821ebade96b96a7ac4a8c26d0e64b8e" kindref="member">get_length</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5f272b18fd4eb5fee0f35f231b2dfb89" kindref="member">max_stuck_iters</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a42c23fd7b3ec56da172093d3fe3dbdaf" kindref="member">settings::precision::max_stuck_iters</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a72360228d7c045aee8c2ae3b7c7a8a4f" kindref="member">min_saturation_iters</ref><sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a2c6742b586617b54d970842244484650" kindref="member">settings::precision::min_saturation_iters</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a8908aad72db98c88a37d4d0696c1a330" kindref="member">max_saturation_iters</ref><sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a378586f56d48f833d44265b12da47d83" kindref="member">settings::precision::max_saturation_iters</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1ae154da6dd4bb4836a6577505abed6b25" kindref="member">max_expansion_iters</ref><sp/><sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a92b84ec65f0128f6a826d5a804493a63" kindref="member">settings::precision::max_expansion_iters</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>make<sp/>a<sp/>destructor<sp/>manually<sp/>for<sp/>the<sp/>enclosing<sp/>class<sp/>&quot;class_model_finite&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>encloses<sp/>&quot;class_model_base&quot;.<sp/>Otherwise<sp/>unique_ptr<sp/>will<sp/>forcibly<sp/>inline<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>own<sp/>default<sp/>deleter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>allows<sp/>us<sp/>to<sp/>forward<sp/>declare<sp/>the<sp/>abstract<sp/>base<sp/>class<sp/>&quot;class_model_base&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>more:<sp/>https://stackoverflow.com/questions/33212686/how-to-use-unique-ptr-with-forward-declared-type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>And<sp/>here:<sp/><sp/>https://stackoverflow.com/questions/6012157/is-stdunique-ptrt-required-to-know-the-full-definition-of-t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class_algorithm_finite::~class_algorithm_finite()<sp/>=<sp/>default;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classclass__algorithm__finite_1a9bc7b209ddc5b1c246038d33ca327640" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a9bc7b209ddc5b1c246038d33ca327640" kindref="member">class_algorithm_finite::run</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">t_tot</ref><sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">tools::common::profile::t_tot</ref>-&gt;tic_token();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>may<sp/>want<sp/>to<sp/>resume<sp/>this<sp/>simulation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>-&gt;linkExists(</highlight><highlight class="stringliteral">&quot;common/storage_level&quot;</highlight><highlight class="normal">)<sp/>and</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacesettings_1_1output_1a62dca95e107f4fe3989df2c42eb4b8b2" kindref="member">settings::output::file_collision_policy</ref><sp/>==<sp/><ref refid="config_2enums_8h_1ad7a337341b5fd69ba5a7a7dd2058ea56abac2aec3ee8d7d495123dbe5ca2fdac9" kindref="member">FileCollisionPolicy::RESUME</ref><sp/>or</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesettings_1_1output_1a62dca95e107f4fe3989df2c42eb4b8b2" kindref="member">settings::output::file_collision_policy</ref><sp/>==<sp/><ref refid="config_2enums_8h_1ad7a337341b5fd69ba5a7a7dd2058ea56afd597b5cf72d5cf1df84a017a16969e8" kindref="member">FileCollisionPolicy::REVIVE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1aa9fc4a0111ae78e0a61e5b97223eda8b" kindref="member">resume</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classexcept_1_1state__error" kindref="compound">except::state_error</ref><sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classexcept_1_1resume__error" kindref="compound">except::resume_error</ref>(fmt::format(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resume<sp/>state<sp/>from<sp/>file<sp/>[{}]:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>-&gt;getFilePath(),<sp/>ex.what()));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classexcept_1_1load__error" kindref="compound">except::load_error</ref><sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classexcept_1_1resume__error" kindref="compound">except::resume_error</ref>(fmt::format(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resume<sp/>state<sp/>from<sp/>file<sp/>[{}]:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>-&gt;getFilePath(),<sp/>ex.what()));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;ex)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>resume<sp/>state<sp/>from<sp/>file<sp/>[{}]:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>-&gt;getFilePath(),<sp/>ex.what()));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a449bdbc5c87a4f8bb46509278a1e0688" kindref="member">run_default_task_list</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classclass__algorithm__finite_1a37993b5dd8c0999078d23f699d533efc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a37993b5dd8c0999078d23f699d533efc" kindref="member">class_algorithm_finite::run_postprocessing</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Running<sp/>default<sp/>postprocessing<sp/>for<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_pos<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" kindref="member">tools::common::profile::prof</ref>[<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>][</highlight><highlight class="stringliteral">&quot;t_pos&quot;</highlight><highlight class="normal">]-&gt;tic_token();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a0f15e1247e93ddfa95c008106eb0d22f" kindref="member">StorageReason::CHECKPOINT</ref>,<sp/><ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5a88559a0cfd8250c9d65970cc145c92d4" kindref="member">CopyPolicy::OFF</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a786913b585b4a8a603375da88293b140" kindref="member">StorageReason::PROJ_STATE</ref>,<sp/><ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5a88559a0cfd8250c9d65970cc145c92d4" kindref="member">CopyPolicy::OFF</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a2c616b2713e2e0aed04b4c4752c88133" kindref="member">StorageReason::FINISHED</ref>,<sp/><ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5a2884c991e71a112e70c186a5c4458a24" kindref="member">CopyPolicy::FORCE</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a31460024ef07df92bc57719b2234a725" kindref="member">print_status_full</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Finished<sp/>default<sp/>postprocessing<sp/>for<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1profile_1a6f00c4f75456402247086cdbb823aeb3" kindref="member">tools::common::profile::print_profiling_all</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classclass__algorithm__finite_1aa51f43031831b46cef58fabde7410452" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1aa51f43031831b46cef58fabde7410452" kindref="member">class_algorithm_finite::move_center_point</ref>(std::optional&lt;long&gt;<sp/>num_moves)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>num_moves.has_value())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.empty())</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_moves<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_sites<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.size());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_direction()<sp/>==<sp/>1<sp/>and<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.back()<sp/>==<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2821ebade96b96a7ac4a8c26d0e64b8e" kindref="member">get_length</ref>()<sp/>-<sp/>1)<sp/>or</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_direction()<sp/>==<sp/>-1<sp/>and<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.front()<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>case<sp/>we<sp/>have<sp/>just<sp/>updated<sp/>from<sp/>here<sp/>to<sp/>the<sp/>edge.<sp/>No<sp/>point<sp/>in<sp/>updating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>closer<sp/>and<sp/>closer<sp/>to<sp/>the<sp/>edge.<sp/>Just<sp/>move<sp/>until<sp/>reaching<sp/>the<sp/>edge<sp/>without<sp/>flip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_moves<sp/>=<sp/>std::max&lt;long&gt;(1,<sp/>num_sites<sp/>-<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>edge<sp/>without<sp/>flipping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1a05ca0f4ce55f306ded9efc25186fc223" kindref="member">settings::strategy::multisite_mps_step</ref><sp/>==<sp/><ref refid="config_2enums_8h_1a01f43889dba436bb43267502af8f3b8dabc21e6484530fc9d0313cb816b733396" kindref="member">MultisiteMove::ONE</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_moves<sp/>=<sp/>1ul;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1a05ca0f4ce55f306ded9efc25186fc223" kindref="member">settings::strategy::multisite_mps_step</ref><sp/>==<sp/><ref refid="config_2enums_8h_1a01f43889dba436bb43267502af8f3b8da18e48bbdf6d326bd88d3ebb99ad7515d" kindref="member">MultisiteMove::MID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_moves<sp/>=<sp/>std::max&lt;long&gt;(1,<sp/>num_sites<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1a05ca0f4ce55f306ded9efc25186fc223" kindref="member">settings::strategy::multisite_mps_step</ref><sp/>==<sp/><ref refid="config_2enums_8h_1a01f43889dba436bb43267502af8f3b8da26a4b44a837bf97b972628509912b4a5" kindref="member">MultisiteMove::MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_moves<sp/>=<sp/>std::max&lt;long&gt;(1,<sp/>num_sites<sp/>-<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>so<sp/>that<sp/>the<sp/>center<sp/>point<sp/>moves<sp/>out<sp/>of<sp/>the<sp/>active<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>determine<sp/>how<sp/>many<sp/>sites<sp/>to<sp/>move&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num_moves<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>move<sp/>center<sp/>point<sp/>{}<sp/>sites&quot;</highlight><highlight class="normal">,<sp/>num_moves.value()));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Moving<sp/>center<sp/>point<sp/>{}<sp/>steps<sp/>in<sp/>direction<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>num_moves.value(),<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_direction());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1af5df2ebd912224ebd94d844e23afecdc" kindref="member">clear_cache</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ab3d5261d2d65539332c6b67fedf10ad6" kindref="member">clear_measurements</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>moves<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(num_moves<sp/>&gt;<sp/>moves++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a1e63eab967c9d9340d9205c3dc7507ce" kindref="member">chi_quench_steps</ref><sp/>&gt;<sp/>0)<sp/><ref refid="classclass__algorithm__finite_1a1e63eab967c9d9340d9205c3dc7507ce" kindref="member">chi_quench_steps</ref>--;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a9b889f000f4d210fa54d8d2aa0f62ab8" kindref="member">position_is_outward_edge</ref>())<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>++;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Moving<sp/>center<sp/>position<sp/>step<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0071e2c8a215558eadd08fe35d5591ef" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0071e2c8a215558eadd08fe35d5591ef" kindref="member">step</ref><sp/>+=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae77245435874c4308e128798c3411c4f" kindref="member">move_center_point</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>go<sp/>past<sp/>the<sp/>edge<sp/>if<sp/>you<sp/>aren&apos;t<sp/>there<sp/>already!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>important<sp/>to<sp/>stay<sp/>at<sp/>the<sp/>inward<sp/>edge<sp/>so<sp/>we<sp/>can<sp/>do<sp/>convergence<sp/>checks<sp/>and<sp/>so<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.clear();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;active_sites.clear();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>-&gt;active_sites.clear();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ad4f2b4660b0e219fcbf111461044c375" kindref="member">edges</ref>-&gt;active_sites.clear();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1print_1a1e1262915b86672358ac45af9dbb46ef" kindref="member">tools::finite::print::dimensions</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>move<sp/>center<sp/>point:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a92eedac9b796e697deaa83ebf4125800" kindref="member">position</ref><sp/><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_position&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a2a63919e0178cff8d5fede2d23916331" kindref="member">direction</ref><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_direction();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a72b4aa7bd0e8d16a2a98a13d8770dd58" kindref="member">has_projected</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classclass__algorithm__finite_1a18d4f093525edb51068e78656195370c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a18d4f093525edb51068e78656195370c" kindref="member">class_algorithm_finite::reduce_mpo_energy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1precision_1af241365d45c25fd1f464b664f358e982" kindref="member">settings::precision::use_reduced_energy</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduce<sp/>mpo<sp/>energy<sp/>to<sp/>avoid<sp/>catastrophic<sp/>cancellation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>operation<sp/>makes<sp/>the<sp/>Hamiltonian<sp/>nearly<sp/>singular,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>tough<sp/>for<sp/>Lanczos/Arnoldi<sp/>iterations<sp/>to<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a8a147db5ea006d2067ee4ca3260d9da1" kindref="member">reduce_mpo_energy</ref>(std::nullopt);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>reduction<sp/>clears<sp/>our<sp/>squared<sp/>mpo&apos;s.<sp/>So<sp/>we<sp/>have<sp/>to<sp/>rebuild.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1af9b89cf9cc5921e4fce483944eb0ce15" kindref="member">rebuild_mpo_squared</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classclass__algorithm__finite_1af9b89cf9cc5921e4fce483944eb0ce15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1af9b89cf9cc5921e4fce483944eb0ce15" kindref="member">class_algorithm_finite::rebuild_mpo_squared</ref>()<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compress<sp/>=<sp/><sp/><ref refid="namespacesettings_1_1precision_1abf0aa221c854f220f8accb1b83baf719" kindref="member">settings::precision::compress_mpo_squared</ref><sp/>and<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae2d391ce59e94a30ecc300ce63dd7333" kindref="member">rebuild_mpo_squared</ref>(compress);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classclass__algorithm__finite_1ad4868cc94f2a7dc1e543fcaf10a79296" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1ad4868cc94f2a7dc1e543fcaf10a79296" kindref="member">class_algorithm_finite::update_variance_max_digits</ref>(std::optional&lt;double&gt;<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref>)<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">tools::finite::measure::energy</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energy_abs<sp/>=<sp/>std::abs(<ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref>.value());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energy_pow<sp/>=<sp/>energy_abs<sp/>*<sp/>energy_abs;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>digits10<sp/>=<sp/>std::numeric_limits&lt;double&gt;::digits10;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energy_top<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1af241365d45c25fd1f464b664f358e982" kindref="member">settings::precision::use_reduced_energy</ref><sp/>?<sp/>energy_abs<sp/>:<sp/>energy_pow;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energy_exp<sp/>=<sp/>std::ceil(std::max(0.0,<sp/>std::log10(energy_top)))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_digits<sp/>=<sp/>std::floor(std::max(0.0,digits10<sp/>-<sp/>energy_exp));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aecd580f42c5bc43cf968c3e540665463" kindref="member">energy_variance_max_digits</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(max_digits);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a49499e18c7113953dc151e19b946c52d" kindref="member">energy_variance_prec_limit</ref><sp/>=<sp/>std::pow(10.0,-max_digits);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>variance<sp/>precision<sp/>limit:<sp/>{:.4e}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a49499e18c7113953dc151e19b946c52d" kindref="member">energy_variance_prec_limit</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classclass__algorithm__finite_1af95402763a137d45e2b25ceecc9252af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1af95402763a137d45e2b25ceecc9252af" kindref="member">class_algorithm_finite::update_bond_dimension_limit</ref>([[maybe_unused]]<sp/>std::optional&lt;long&gt;<sp/>tmp_bond_limit)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" kindref="member">chi_lim_has_reached_chi_max</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>&gt;=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" kindref="member">cfg_chi_lim_grow</ref>())<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" kindref="member">chi_lim_has_reached_chi_max</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>got<sp/>here<sp/>we<sp/>want<sp/>increase<sp/>the<sp/>bond<sp/>dimension<sp/>limit<sp/>progressively<sp/>during<sp/>the<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>increment<sp/>the<sp/>bond<sp/>dimension<sp/>if<sp/>the<sp/>following<sp/>are<sp/>all<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>No<sp/>experiments<sp/>are<sp/>on-going<sp/>like<sp/>perturbation<sp/>or<sp/>damping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>the<sp/>simulation<sp/>is<sp/>stuck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*<sp/>the<sp/>state<sp/>is<sp/>limited<sp/>by<sp/>bond<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>-&gt;is_damped())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;State<sp/>is<sp/>undergoing<sp/>disorder<sp/>damping<sp/>--<sp/>cannot<sp/>increase<sp/>bond<sp/>dimension<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>-&gt;is_perturbed())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;State<sp/>is<sp/>undergoing<sp/>perturbation<sp/>--<sp/>cannot<sp/>increase<sp/>bond<sp/>dimension<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/>==<sp/>0<sp/>and<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>&gt;=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>is<sp/>not<sp/>stuck<sp/>yet.<sp/>Kept<sp/>current<sp/>limit<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;level()<sp/>&lt;<sp/>spdlog::level::info)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>truncation_threshold<sp/>=<sp/>2*<ref refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" kindref="member">settings::precision::svd_threshold</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trunc_bond_count<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;num_sites_truncated(truncation_threshold);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bond_at_lim_count<sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;num_bonds_reached_chi(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Truncation<sp/>threshold<sp/><sp/>:<sp/>{:&lt;.8e}&quot;</highlight><highlight class="normal">,<sp/>truncation_threshold);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Truncation<sp/>errors<sp/><sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_truncation_errors());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Bond<sp/>dimensions<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">tools::finite::measure::bond_dimensions</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Truncated<sp/>bond<sp/>count<sp/><sp/>:<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>trunc_bond_count);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Bonds<sp/>at<sp/>limit<sp/><sp/>count<sp/>:<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>bond_at_lim_count);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Entanglement<sp/>entropies:<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a4515a169c43487b9dd80ed581c0d1d5e" kindref="member">tools::finite::measure::entanglement_entropies</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state_is_bond_limited<sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;is_bond_limited(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>,<sp/>2<sp/>*<sp/><ref refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" kindref="member">settings::precision::svd_threshold</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>state_is_bond_limited)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;State<sp/>is<sp/>not<sp/>limited<sp/>by<sp/>its<sp/>bond<sp/>dimension.<sp/>Kept<sp/>current<sp/>limit<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>current<sp/>results<sp/>before<sp/>updating<sp/>bond<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a897773140ef9a63d5de751d88edd0436" kindref="member">StorageReason::CHI_UPDATE</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1ad34290da23c5440587bdd5a8b7b28ae0" kindref="member">settings::strategy::randomize_on_chi_update</ref><sp/>and<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>&gt;=<sp/>32)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a39433db5a7d4de5b17d342f8cd6e9be8" kindref="member">randomize_state</ref>(<ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11a897773140ef9a63d5de751d88edd0436" kindref="member">ResetReason::CHI_UPDATE</ref>,<sp/><ref refid="config_2enums_8h_1adbe3cea8d0d506925fa70531119e2976ab41377597a6f78d88d48f1a54edad189" kindref="member">StateInit::RANDOMIZE_PREVIOUS_STATE</ref>,<sp/>std::nullopt,<sp/>std::nullopt,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>chi_new<sp/>=<sp/>std::min(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>*<sp/>2,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Updating<sp/>bond<sp/>dimension<sp/>limit<sp/>{}<sp/>-&gt;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>,<sp/>chi_new);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>=<sp/>chi_new;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" kindref="member">chi_lim_has_reached_chi_max</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>==<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>sanity<sp/>check<sp/>before<sp/>leaving<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>&gt;<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;chi_lim<sp/>is<sp/>larger<sp/>than<sp/>chi_lim_max!<sp/>{}<sp/>&gt;<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a9c6881b9887afeabd4fdc42dab57fd5e" kindref="member">chi_lim_max</ref>));</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classclass__algorithm__finite_1a3f9c4aa638fb9ca80033657be16903b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a3f9c4aa638fb9ca80033657be16903b8" kindref="member">class_algorithm_finite::randomize_model</ref>()<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Randomizing<sp/>model&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a77a4796817a5c630ee4d243ce3fde178" kindref="member">randomize_model</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classclass__algorithm__finite_1a39433db5a7d4de5b17d342f8cd6e9be8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a39433db5a7d4de5b17d342f8cd6e9be8" kindref="member">class_algorithm_finite::randomize_state</ref>(<ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11" kindref="member">ResetReason</ref><sp/>reason,<sp/><ref refid="config_2enums_8h_1adbe3cea8d0d506925fa70531119e2976" kindref="member">StateInit</ref><sp/>state_init,<sp/>std::optional&lt;StateInitType&gt;<sp/>state_type,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;std::string&gt;<sp/>sector,<sp/>std::optional&lt;long&gt;<sp/>chi_lim,<sp/>std::optional&lt;bool&gt;<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref>,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;long&gt;<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref>,<sp/>std::optional&lt;double&gt;<sp/><ref refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" kindref="member">svd_threshold</ref>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Randomizing<sp/>state<sp/>[{}]<sp/>to<sp/>[{}]<sp/>|<sp/>Reason<sp/>[{}]<sp/>...&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_name(),<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(state_init),<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(reason));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reason<sp/>==<sp/><ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11a5c290ac23e3d60150ad896708595fcb7" kindref="member">ResetReason::SATURATED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ad4b4ffe76b177cd283996700470a84de" kindref="member">num_resets</ref><sp/>&gt;=<sp/><ref refid="namespacesettings_1_1strategy_1a76327e2fce6635a9905107bf20ed8ae5" kindref="member">settings::strategy::max_resets</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Skipped<sp/>reset:<sp/>num<sp/>resets<sp/>{}<sp/>&gt;=<sp/>max<sp/>resets<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ad4b4ffe76b177cd283996700470a84de" kindref="member">num_resets</ref>,<sp/><ref refid="namespacesettings_1_1strategy_1a76327e2fce6635a9905107bf20ed8ae5" kindref="member">settings::strategy::max_resets</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ad4b4ffe76b177cd283996700470a84de" kindref="member">num_resets</ref>++;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>increment<sp/>if<sp/>doing<sp/>it<sp/>for<sp/>saturation<sp/>reasons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_rnd<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" kindref="member">tools::common::profile::prof</ref>[<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>][</highlight><highlight class="stringliteral">&quot;t_rnd&quot;</highlight><highlight class="normal">]-&gt;tic_token();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>state_type)<sp/>state_type<sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;is_real()<sp/>?<sp/><ref refid="config_2enums_8h_1ab9aca94621ab32fee58ebbbd4dbdcc0ba8cf125b0e31559ba75a9d9b4f818a554" kindref="member">StateInitType::REAL</ref><sp/>:<sp/><ref refid="config_2enums_8h_1ab9aca94621ab32fee58ebbbd4dbdcc0ba958448d4909b92010c81d52d3e6ad8f1" kindref="member">StateInitType::CPLX</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>sector)<sp/>sector<sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref>)<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref><sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">settings::strategy::use_eigenspinors</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref>)<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref><sp/>=<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">settings::input::bitfield</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" kindref="member">svd_threshold</ref><sp/>and<sp/>state_init<sp/>==<sp/><ref refid="config_2enums_8h_1adbe3cea8d0d506925fa70531119e2976ab41377597a6f78d88d48f1a54edad189" kindref="member">StateInit::RANDOMIZE_PREVIOUS_STATE</ref>)<sp/><ref refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" kindref="member">svd_threshold</ref><sp/>=<sp/>1e-2;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>chi_lim)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi_lim<sp/>=<sp/><ref refid="classclass__algorithm__base_1a02248bae999554bcbbc84ba8bbaf6eb0" kindref="member">cfg_chi_lim_init</ref>();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" kindref="member">cfg_chi_lim_grow</ref>()<sp/>and<sp/>state_init<sp/>==<sp/><ref refid="config_2enums_8h_1adbe3cea8d0d506925fa70531119e2976ab41377597a6f78d88d48f1a54edad189" kindref="member">StateInit::RANDOMIZE_PREVIOUS_STATE</ref>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi_lim<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::pow(2,<sp/>std::floor(std::log2(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;find_largest_chi()))));<sp/></highlight><highlight class="comment">//<sp/>Nearest<sp/>power<sp/>of<sp/>two<sp/>from<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chi_lim.value()<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>chi_lim:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>chi_lim.value()));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsvd_1_1settings" kindref="compound">svd::settings</ref><sp/>svd_settings;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>svd_settings.<ref refid="structsvd_1_1settings_1abb1784f960b306432bd857a066052b7c" kindref="member">threshold</ref><sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" kindref="member">svd_threshold</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a1015bc7ece281135769ee4a0b1ff1996" kindref="member">randomize_state</ref>(state_init,<sp/>sector.value(),<sp/>chi_lim.value(),<sp/><ref refid="namespacesettings_1_1strategy_1a59f890d5cd99ba257fac12c9ebe361bb" kindref="member">use_eigenspinors</ref>.value(),<sp/><ref refid="namespacesettings_1_1input_1ac26e006d28280b3712305f9e7c39824d" kindref="member">bitfield</ref>,<sp/>std::nullopt,<sp/>svd_settings);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>tensors.move_center_point_to_edge(chi_lim.value());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0cc790dff1efd9971b89bbf9ff360e5f" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0071e2c8a215558eadd08fe35d5591ef" kindref="member">step</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a92eedac9b796e697deaa83ebf4125800" kindref="member">position</ref><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_position&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a2a63919e0178cff8d5fede2d23916331" kindref="member">direction</ref><sp/><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_direction();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a070190f822e54d4aec142238a47d1f09" kindref="member">num_perturbations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a57bbed424c2236370bd488cc54600f0a" kindref="member">num_chi_quenches</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1ae599a2883b5e576b0b69f03faca28b8c" kindref="member">num_discards</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a291b852dab91aa7f869d9c4250dab429" kindref="member">num_dampings</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a6d3e78c2e18dc5878763bbd914c0d490" kindref="member">stop_reason</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="config_2enums_8h_1ab8279e4b5d29d07b4893295770e72e65ab50339a10e1de285ac99d4c3990b8693" kindref="member">StopReason::NONE</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" kindref="member">cfg_chi_lim_grow</ref>())<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref><sp/>=<sp/>chi_lim.value();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reason<sp/>==<sp/><ref refid="config_2enums_8h_1a06d9333e5541d14a05e83e78d4a07e11a027dd9c4928fd30c46f765fa10526c8d" kindref="member">ResetReason::NEW_STATE</ref>)<sp/><ref refid="classclass__algorithm__finite_1a8cd8f956556aebf98f6ed5b35ef1df4a" kindref="member">excited_state_number</ref>++;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;find_largest_chi()<sp/>&gt;<sp/>chi_lim.value())</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tools::log-&gt;warn(&quot;Faulty<sp/>truncation<sp/>after<sp/>randomize.<sp/>Max<sp/>found<sp/>chi<sp/>is<sp/>{},<sp/>but<sp/>chi<sp/>limit<sp/>is<sp/>{}&quot;,<sp/>tensors.state-&gt;find_largest_chi(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chi_lim.value());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;Faulty<sp/>truncation<sp/>after<sp/>randomize.<sp/>Max<sp/>found<sp/>chi<sp/>is<sp/>{},<sp/>but<sp/>chi<sp/>limit<sp/>is<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;find_largest_chi(),<sp/>chi_lim.value()));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a3f0270865f0f39435fe06f90ab43b31a" kindref="member">activate_sites</ref>(<ref refid="namespacesettings_1_1precision_1a73b0dfad8ed491d99ddec60ea23aa0ac" kindref="member">settings::precision::max_size_part_diag</ref>,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Activate<sp/>a<sp/>pair<sp/>of<sp/>sites<sp/>to<sp/>make<sp/>some<sp/>measurements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Randomizing<sp/>state<sp/>[{}]<sp/>to<sp/>[{}]<sp/>|<sp/>Reason<sp/>[{}]<sp/>...<sp/>OK!&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_name(),<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(state_init),<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(reason));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;--<sp/>Normalization<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5dedbb3ba59f53f43b2df35faa0d6a4a" kindref="member">tools::finite::measure::norm</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;--<sp/>Spin<sp/>components<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{:.6f}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(<ref refid="namespacetools_1_1finite_1_1measure_1a22e2b3240464cf0e14082b7386acbe3b" kindref="member">tools::finite::measure::spin_components</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>),<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;--<sp/>Bond<sp/>dimensions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">tools::finite::measure::bond_dimensions</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;--<sp/>Energy<sp/>per<sp/>site<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8145a38b82bae9aa25597372b688670e" kindref="member">tools::finite::measure::energy_per_site</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;--<sp/>Energy<sp/>density<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a132f292ec9d3f89e658fb77572d12a9f" kindref="member">tools::finite::measure::energy_normalized</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a6a4d044f86d512e6c9e43a61f50fc5d2" kindref="member">energy_min_per_site</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a529e687471b62fbd48844bacd824359f" kindref="member">energy_max_per_site</ref>));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;--<sp/>Energy<sp/>variance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>std::log10(<ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>)));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;--<sp/>State<sp/>labels<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_labels());</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classclass__algorithm__finite_1a4f369185f794545116447b1a3a587625" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a4f369185f794545116447b1a3a587625" kindref="member">class_algorithm_finite::try_projection</ref>(std::optional&lt;std::string&gt;<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref><sp/>and<sp/><ref refid="classclass__algorithm__finite_1a72b4aa7bd0e8d16a2a98a13d8770dd58" kindref="member">has_projected</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacesettings_1_1strategy_1a367e6efe4b3911540bf19b35b17d1db1" kindref="member">project_on_saturation</ref><sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1a367e6efe4b3911540bf19b35b17d1db1" kindref="member">settings::strategy::project_on_saturation</ref><sp/>&gt;<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" kindref="member">algorithm_saturated_for</ref><sp/>&gt;<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" kindref="member">algorithm_saturated_for</ref>-1,<sp/><ref refid="namespacesettings_1_1strategy_1a367e6efe4b3911540bf19b35b17d1db1" kindref="member">settings::strategy::project_on_saturation</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacesettings_1_1strategy_1a917ca6fba0621aab901d3b46cc836bde" kindref="member">project_on_every_iter</ref><sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1a917ca6fba0621aab901d3b46cc836bde" kindref="member">settings::strategy::project_on_every_iter</ref><sp/>&gt;<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>,<sp/><ref refid="namespacesettings_1_1strategy_1a917ca6fba0621aab901d3b46cc836bde" kindref="member">settings::strategy::project_on_every_iter</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>project_to_given_sector<sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.has_value();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1a917ca6fba0621aab901d3b46cc836bde" kindref="member">project_on_every_iter</ref><sp/>or<sp/><ref refid="namespacesettings_1_1strategy_1a367e6efe4b3911540bf19b35b17d1db1" kindref="member">project_on_saturation</ref><sp/>or<sp/>project_to_given_sector)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>)<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref><sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Trying<sp/>projection<sp/>to<sp/>{}<sp/>|<sp/>pos<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value(),<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a8862aaf845937a6c6ad82c5df61d3958" kindref="member">get_position</ref>&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&gt;());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sector_sign<sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1mps_1_1internal_1af50ad4a2ee14680748e5760b9df4b296" kindref="member">tools::finite::mps::internal::get_sign</ref>(<ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variance_old<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spincomp_old<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a22e2b3240464cf0e14082b7386acbe3b" kindref="member">tools::finite::measure::spin_components</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sector_sign<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a9130ac7d08b21bd051bbb31bdb59e47a" kindref="member">project_to_nearest_sector</ref>(<ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>choice<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>sector<sp/>sign<sp/>has<sp/>been<sp/>given,<sp/>and<sp/>the<sp/>spin<sp/>component<sp/>along<sp/>the<sp/>requested<sp/>axis<sp/>is<sp/>near<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>we<sp/>may<sp/>inadvertently<sp/>project<sp/>to<sp/>a<sp/>sector<sp/>opposite<sp/>to<sp/>the<sp/>target<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>that<sp/>happened,<sp/>we<sp/>would<sp/>get<sp/>stuck<sp/>in<sp/>a<sp/>local<sp/>minima.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>reasonable<sp/>thing<sp/>to<sp/>do<sp/>here<sp/>is<sp/>to<sp/>compare<sp/>the<sp/>variance<sp/>of<sp/>both<sp/>projections,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>keep<sp/>the<sp/>one<sp/>with<sp/>lowest<sp/>variance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Of<sp/>course,<sp/>one<sp/>problem<sp/>is<sp/>that<sp/>if<sp/>the<sp/>spin<sp/>component<sp/>is<sp/>already<sp/>in<sp/>one<sp/>sector,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>projecting<sp/>to<sp/>the<sp/>other<sp/>sector<sp/>will<sp/>zero<sp/>the<sp/>norm.<sp/>So<sp/>we<sp/>can<sp/>only<sp/>make<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decision<sp/>if<sp/>the<sp/>the<sp/>|spin<sp/>component|<sp/>&lt;&lt;<sp/>1.<sp/>Maybe<sp/>&lt;<sp/>0.5<sp/>is<sp/>enough?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spin_component_along_requested_axis<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1ab70288b0d3d905f3ec211b994699861d" kindref="member">tools::finite::measure::spin_component</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Spin<sp/>component<sp/>along<sp/>{}<sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value(),<sp/>spin_component_along_requested_axis);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(spin_component_along_requested_axis)<sp/>&lt;<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>deem<sp/>the<sp/>spin<sp/>component<sp/>undecided<sp/>enough<sp/>to<sp/>warrant<sp/>a<sp/>safe<sp/>projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tensors_neg<sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tensors_pos<sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors_neg.<ref refid="classclass__tensors__finite_1a9130ac7d08b21bd051bbb31bdb59e47a" kindref="member">project_to_nearest_sector</ref>(fmt::format(</highlight><highlight class="stringliteral">&quot;-{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value()),std::nullopt);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;ex)<sp/>{<sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Projection<sp/>to<sp/>-x<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">,<sp/>ex.what());<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensors_pos.project_to_nearest_sector(fmt::format(</highlight><highlight class="stringliteral">&quot;+{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value()),std::nullopt);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;ex)<sp/>{<sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Projection<sp/>to<sp/>-x<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">,<sp/>ex.what());<sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variance_neg<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(tensors_neg);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variance_pos<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(tensors_pos);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Variance<sp/>after<sp/>projection<sp/>to<sp/>-{}<sp/>=<sp/>{:.6f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value(),<sp/>std::log10(variance_neg));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Variance<sp/>after<sp/>projection<sp/>to<sp/>+{}<sp/>=<sp/>{:.6f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value(),<sp/>std::log10(variance_pos));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(variance_neg<sp/>&lt;<sp/>variance_pos)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref><sp/>=<sp/>tensors_neg;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref><sp/>=<sp/>tensors_pos;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>the<sp/>spin<sp/>component<sp/>is<sp/>close<sp/>to<sp/>one<sp/>sector.<sp/>We<sp/>just<sp/>project<sp/>to<sp/>the<sp/>nearest<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a9130ac7d08b21bd051bbb31bdb59e47a" kindref="member">project_to_nearest_sector</ref>(<ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value(),std::nullopt);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variance_new<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spincomp_new<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a22e2b3240464cf0e14082b7386acbe3b" kindref="member">tools::finite::measure::spin_components</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Projection<sp/>change:<sp/>variance<sp/>{:.6f}<sp/>-&gt;<sp/>{:.6f}<sp/><sp/>|<sp/>spin<sp/>components<sp/>{:.16f}<sp/>-&gt;<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(variance_old),</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::log10(variance_new),<sp/>fmt::join(spincomp_old,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">),<sp/>fmt::join(spincomp_new,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>.value()<sp/>==<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>)<sp/><ref refid="classclass__algorithm__finite_1a72b4aa7bd0e8d16a2a98a13d8770dd58" kindref="member">has_projected</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a786913b585b4a8a603375da88293b140" kindref="member">StorageReason::PROJ_STATE</ref>,<sp/>*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>,<sp/><ref refid="config_2enums_8h_1a51a9760605ac8e44f3479429f911dad5a88559a0cfd8250c9d65970cc145c92d4" kindref="member">CopyPolicy::OFF</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classclass__algorithm__finite_1a42c3ba8f6917186a93577844aed4392b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a42c3ba8f6917186a93577844aed4392b" kindref="member">class_algorithm_finite::try_full_expansion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a1f1777e94b4f4385bb13f9bef95c61dc" kindref="member">has_expanded</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacesettings_1_1strategy_1abdf7957cf7467cf78375ebc1d07f692e" kindref="member">expand_on_saturation</ref><sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1abdf7957cf7467cf78375ebc1d07f692e" kindref="member">settings::strategy::expand_on_saturation</ref><sp/>&gt;<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" kindref="member">algorithm_saturated_for</ref><sp/>&gt;<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" kindref="member">algorithm_saturated_for</ref>-1,<sp/><ref refid="namespacesettings_1_1strategy_1abdf7957cf7467cf78375ebc1d07f692e" kindref="member">settings::strategy::expand_on_saturation</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1abdf7957cf7467cf78375ebc1d07f692e" kindref="member">expand_on_saturation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variance_old<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Trying<sp/>expansion<sp/>to<sp/>H|psi&gt;<sp/>|<sp/>pos<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a8862aaf845937a6c6ad82c5df61d3958" kindref="member">get_position</ref>());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a7fbd14ff2884c6a2f59c5ed9f22ee46c" kindref="member">apply_hamiltonian_on_state</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variance_new<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a1f1777e94b4f4385bb13f9bef95c61dc" kindref="member">has_expanded</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Expansion<sp/>change:<sp/>variance<sp/>{:.6f}<sp/>-&gt;<sp/>{:.6f}&quot;</highlight><highlight class="normal">,<sp/>std::log10(variance_old),<sp/>std::log10(variance_new));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="classclass__algorithm__finite_1a661ad455699f881c2ff834bbc0388f99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a661ad455699f881c2ff834bbc0388f99" kindref="member">class_algorithm_finite::try_discard_small_schmidt</ref>()<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1a4934a85418d80b478d159b260e1b4048" kindref="member">settings::strategy::discard_schmidt_when_stuck</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1ae599a2883b5e576b0b69f03faca28b8c" kindref="member">num_discards</ref><sp/>&gt;=<sp/><ref refid="classclass__algorithm__finite_1ad5f7168d2eec06732eb74e4b97d8805c" kindref="member">max_discards</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1strategy_1a4934a85418d80b478d159b260e1b4048" kindref="member">settings::strategy::discard_schmidt_when_stuck</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Expected<sp/>positive<sp/>discard<sp/>threshold.<sp/>Got:<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1a4934a85418d80b478d159b260e1b4048" kindref="member">settings::strategy::discard_schmidt_when_stuck</ref>));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Trying<sp/>discard<sp/>of<sp/>smallest<sp/>schmidt<sp/>values:<sp/>trials<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1ae599a2883b5e576b0b69f03faca28b8c" kindref="member">num_discards</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1aa9d83144dbc7e1bdfa0a2df91894c473" kindref="member">normalize_state</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>,<sp/>std::nullopt,<sp/><ref refid="config_2enums_8h_1a299b68d9f1bb1395a4cba7781fe37da7af3fc827ade4b968e50406496907ef962" kindref="member">NormPolicy::ALWAYS</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a59a18d1613c3d26af1d5a8d39f39bf2e" kindref="member">iter_discard</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1ae599a2883b5e576b0b69f03faca28b8c" kindref="member">num_discards</ref>++;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classclass__algorithm__finite_1a31675464960455f0e8fc7294a8f14c47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a31675464960455f0e8fc7294a8f14c47" kindref="member">class_algorithm_finite::try_bond_dimension_quench</ref>()<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1strategy_1ab90f8ca6374d7342c811c185e821ca19" kindref="member">settings::strategy::chi_quench_when_stuck</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a1e63eab967c9d9340d9205c3dc7507ce" kindref="member">chi_quench_steps</ref><sp/>&gt;<sp/>0)<sp/><ref refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a1e63eab967c9d9340d9205c3dc7507ce" kindref="member">chi_quench_steps</ref><sp/>&gt;=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2821ebade96b96a7ac4a8c26d0e64b8e" kindref="member">get_length</ref>())<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Chi<sp/>quench<sp/>continues<sp/>--<sp/>{}<sp/>steps<sp/>left&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a1e63eab967c9d9340d9205c3dc7507ce" kindref="member">chi_quench_steps</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1mps_1ac4e0069b3b431db82d106381d128d954" kindref="member">tools::finite::mps::truncate_all_sites</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>,<sp/><ref refid="classclass__algorithm__finite_1a2adefbd0f1620458a28f24ec0044ed7f" kindref="member">chi_lim_quench_ahead</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/>&lt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Chi<sp/>quench<sp/>skipped:<sp/>simulation<sp/>not<sp/>been<sp/>stuck<sp/>for<sp/>long<sp/>enough&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a57bbed424c2236370bd488cc54600f0a" kindref="member">num_chi_quenches</ref><sp/>&gt;=<sp/><ref refid="classclass__algorithm__finite_1a7ccd0bb5100ff67ce4df7c4478bcb319" kindref="member">max_chi_quenches</ref>)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Chi<sp/>quench<sp/>skipped:<sp/>max<sp/>number<sp/>of<sp/>chi<sp/>quenches<sp/>({})<sp/>have<sp/>been<sp/>made<sp/>already&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a57bbed424c2236370bd488cc54600f0a" kindref="member">num_chi_quenches</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>)<sp/>&lt;<sp/>10<sp/>*<sp/>std::max(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a49499e18c7113953dc151e19b946c52d" kindref="member">energy_variance_prec_limit</ref>,<sp/><ref refid="namespacesettings_1_1precision_1ae7fb706e3fd5e6c63bd9ed074313224a" kindref="member">settings::precision::variance_convergence_threshold</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>truncation_threshold<sp/>=<sp/>5<sp/>*<sp/><ref refid="namespacesettings_1_1precision_1a0cc3a40383a3e2795dd38b77a6790872" kindref="member">settings::precision::svd_threshold</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trunc_bond_count<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;num_sites_truncated(truncation_threshold);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bond_at_lim_count<sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;num_bonds_reached_chi(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Truncation<sp/>threshold<sp/>:<sp/>{:.4e}&quot;</highlight><highlight class="normal">,<sp/>std::pow(truncation_threshold,<sp/>2));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Truncation<sp/>errors<sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_truncation_errors());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Bond<sp/>dimensions<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">tools::finite::measure::bond_dimensions</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Entanglement<sp/>entr<sp/><sp/><sp/><sp/>:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a4515a169c43487b9dd80ed581c0d1d5e" kindref="member">tools::finite::measure::entanglement_entropies</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Truncated<sp/>bond<sp/>count<sp/>:<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>trunc_bond_count);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Bonds<sp/>at<sp/>limit<sp/><sp/>count:<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>bond_at_lim_count);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;is_bond_limited(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>,<sp/>truncation_threshold))<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Chi<sp/>quench<sp/>skipped:<sp/>state<sp/>is<sp/>bond<sp/>limited<sp/>-<sp/>prefer<sp/>updating<sp/>bond<sp/>dimension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">bond_dimensions</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">tools::finite::measure::bond_dimensions</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>max_bond_dimension<sp/>=<sp/>*max_element(std::begin(<ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">bond_dimensions</ref>),<sp/>std::end(<ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">bond_dimensions</ref>));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Chi<sp/>quench<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1mps_1ac4e0069b3b431db82d106381d128d954" kindref="member">tools::finite::mps::truncate_all_sites</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>,<sp/>max_bond_dimension<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;debug(</highlight><highlight class="stringliteral">&quot;Bond<sp/>dimensions:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">tools::finite::measure::bond_dimensions</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a1e63eab967c9d9340d9205c3dc7507ce" kindref="member">chi_quench_steps</ref><sp/>=<sp/>1<sp/>*<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2821ebade96b96a7ac4a8c26d0e64b8e" kindref="member">get_length</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a57bbed424c2236370bd488cc54600f0a" kindref="member">num_chi_quenches</ref>++;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="classclass__algorithm__finite_1a92c41533b4b93b564a710bedd3eb98a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a92c41533b4b93b564a710bedd3eb98a2" kindref="member">class_algorithm_finite::try_hamiltonian_perturbation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1strategy_1a28bc2125f2103ecec8457ba113aa4f3e" kindref="member">settings::strategy::perturb_when_stuck</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a48c182668fed94c08ce984956b0ec6c1" kindref="member">perturbation_steps</ref>--<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Perturbation<sp/>skipped:<sp/>algorithm<sp/>not<sp/>stuck&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a070190f822e54d4aec142238a47d1f09" kindref="member">num_perturbations</ref><sp/>&gt;=<sp/><ref refid="classclass__algorithm__finite_1a8862acc0cbf67cb0ec5329eafbc7a715" kindref="member">max_perturbations</ref>)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Perturbation<sp/>skipped:<sp/>max<sp/>number<sp/>of<sp/>perturbation<sp/>trials<sp/>({})<sp/>have<sp/>been<sp/>made<sp/>already&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a070190f822e54d4aec142238a47d1f09" kindref="member">num_perturbations</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>-&gt;is_perturbed())<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a9e87e4be948f0ca46c807d0318746de8" kindref="member">perturb_model_params</ref>(0,<sp/>0,<sp/><ref refid="config_2enums_8h_1a62a25a37ff4b6aad36c0b87a5dbdc09ba8249c2d2fe8566785cbc2f7720baf278" kindref="member">PerturbMode::UNIFORM_RANDOM_PERCENTAGE</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a9e87e4be948f0ca46c807d0318746de8" kindref="member">perturb_model_params</ref>(1e-2,<sp/>1e-2,<sp/><ref refid="config_2enums_8h_1a62a25a37ff4b6aad36c0b87a5dbdc09ba8249c2d2fe8566785cbc2f7720baf278" kindref="member">PerturbMode::UNIFORM_RANDOM_PERCENTAGE</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a48c182668fed94c08ce984956b0ec6c1" kindref="member">perturbation_steps</ref><sp/>=<sp/>2<sp/>*<sp/>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2821ebade96b96a7ac4a8c26d0e64b8e" kindref="member">get_length</ref>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="classclass__algorithm__finite_1afb58057c87ac28cb03296240205ab7d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1afb58057c87ac28cb03296240205ab7d7" kindref="member">class_algorithm_finite::try_disorder_damping</ref>()<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(not<sp/>state.position_is_inward_edge())<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>damping<sp/>exponents<sp/>to<sp/>process,<sp/>do<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Setting<sp/>damping<sp/>exponent<sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.back());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1adfed632e73224e818fa2ac113ac3da04" kindref="member">damp_model_disorder</ref>(<ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.back(),<sp/>0);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.pop_back();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.empty()<sp/>and<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>-&gt;is_damped())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Damping<sp/>trial<sp/>ended<sp/>but<sp/>the<sp/>state<sp/>is<sp/>still<sp/>damped&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="namespacesettings_1_1strategy_1aaf0483338e1d9ad60d1fda5b1f2f1e2b" kindref="member">settings::strategy::damping_when_stuck</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>-&gt;is_damped())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Damping<sp/>skipped:<sp/>algorithm<sp/>not<sp/>stuck&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a291b852dab91aa7f869d9c4250dab429" kindref="member">num_dampings</ref><sp/>&gt;=<sp/><ref refid="classclass__algorithm__finite_1a184e1fc5c38564d1eff775fa9555e562" kindref="member">max_dampings</ref>)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Damping<sp/>skipped:<sp/>max<sp/>number<sp/>of<sp/>damping<sp/>trials<sp/>({})<sp/>have<sp/>been<sp/>made<sp/>already&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a291b852dab91aa7f869d9c4250dab429" kindref="member">num_dampings</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>damping_exponents<sp/>=<sp/>num::LogSpaced(6,0.0,0.25,0.001);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>damping_exponents<sp/>=<sp/>{0.0,0.1};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref><sp/>=<sp/>{0.0,<sp/>0.01,<sp/>0.02,<sp/>0.04,<sp/>0.08,<sp/>0.16,<sp/>0.256};</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Generating<sp/>damping<sp/>exponents<sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1afe739ece30be039df7bb6333da5acf39" kindref="member">has_damped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" kindref="member">clear_convergence_status</ref>();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Setting<sp/>damping<sp/>exponent<sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.back());</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1adfed632e73224e818fa2ac113ac3da04" kindref="member">damp_model_disorder</ref>(<ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.back(),<sp/>0);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.pop_back();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1af42260924092ccb272c5ca4f700038fe" kindref="member">damping_exponents</ref>.empty()<sp/>and<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>-&gt;is_damped())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;Damping<sp/>trial<sp/>ended<sp/>but<sp/>the<sp/>state<sp/>is<sp/>still<sp/>damped&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="classclass__algorithm__finite_1a9e5ff92799e6f46ed6e32d544e59d981" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a9e5ff92799e6f46ed6e32d544e59d981" kindref="member">class_algorithm_finite::check_convergence_variance</ref>(std::optional&lt;double&gt;<sp/>threshold,<sp/>std::optional&lt;double&gt;<sp/>saturation_sensitivity)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>convergence<sp/>of<sp/>variance<sp/>mpo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>threshold)<sp/>threshold<sp/>=<sp/>std::max(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a49499e18c7113953dc151e19b946c52d" kindref="member">energy_variance_prec_limit</ref>,<sp/><ref refid="namespacesettings_1_1precision_1ae7fb706e3fd5e6c63bd9ed074313224a" kindref="member">settings::precision::variance_convergence_threshold</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>saturation_sensitivity)<sp/>saturation_sensitivity<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a715185ed1f1d7ffce7a3f2837aca7223" kindref="member">settings::precision::variance_saturation_sensitivity</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a15cff998705259e12405380d943d26bb" kindref="member">var_mpo_iter</ref>.emplace_back(<ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>report<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" kindref="member">check_saturation</ref>(<ref refid="classclass__algorithm__finite_1a15cff998705259e12405380d943d26bb" kindref="member">var_mpo_iter</ref>,<sp/>saturation_sensitivity.value());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(report.has_computed)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" kindref="member">variance_mpo_converged_for</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1ab4a97d8b985c6743d829ff5ec668ebe3" kindref="member">count_convergence</ref>(<ref refid="classclass__algorithm__finite_1a15cff998705259e12405380d943d26bb" kindref="member">var_mpo_iter</ref>,<sp/>threshold.value(),<sp/>report.saturated_point);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref><sp/>=<sp/>report.saturated_count;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;level()<sp/>&gt;=<sp/><ref refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" kindref="member">spdlog::level::debug</ref>)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>variance<sp/>convergence:<sp/>saturated<sp/>{}<sp/>iters<sp/>(since<sp/>{})&quot;</highlight><highlight class="normal">,report.saturated_count,<sp/>report.saturated_point);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;level()<sp/>==<sp/><ref refid="namespace_textra_1ae011dc74fd0ff312cc0d957a688142c9" kindref="member">spdlog::level::trace</ref>)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Energy<sp/>variance<sp/>slope<sp/>details:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>sensitivity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>saturation_sensitivity.value());</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>saturated<sp/>point<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>report.saturated_point);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>saturated<sp/>count<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>report.saturated_count);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>converged<sp/>count<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" kindref="member">variance_mpo_converged_for</ref>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>var<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_vec,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>variance<sp/>slope<sp/>details:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>sensitivity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>saturation_sensitivity.value());</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>saturated<sp/>point<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>report.saturated_point);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>saturated<sp/>count<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>report.saturated_count);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>converged<sp/>count<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" kindref="member">variance_mpo_converged_for</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>var<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_vec,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>avg<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_avg,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>std<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_std,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>stn<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_stn,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>slp<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_slp,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="classclass__algorithm__finite_1aeaabc1b9ca94f6d5bef1462941718687" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1aeaabc1b9ca94f6d5bef1462941718687" kindref="member">class_algorithm_finite::check_convergence_entg_entropy</ref>(std::optional&lt;double&gt;<sp/>saturation_sensitivity)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2c432d9a56f244a5f5b14cb2b4f70d16" kindref="member">position_is_inward_edge</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Checking<sp/>convergence<sp/>of<sp/>entanglement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>saturation_sensitivity)<sp/>saturation_sensitivity<sp/>=<sp/><ref refid="namespacesettings_1_1precision_1a34f76495a655f0d1f76755b8c5aa3633" kindref="member">settings::precision::entropy_saturation_sensitivity</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entropies<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a4515a169c43487b9dd80ed581c0d1d5e" kindref="member">tools::finite::measure::entanglement_entropies</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SaturationReport&gt;<sp/>reports(entropies.size());</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>site<sp/>=<sp/>0;<sp/>site<sp/>&lt;<sp/>entropies.size();<sp/>site++)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a96d01fcfd2c06e9b4ecf2e1da197b2a9" kindref="member">entropy_iter</ref>[site].emplace_back(entropies[site]);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reports[site]<sp/>=<sp/><ref refid="classclass__algorithm__base_1ab832ca5e6b3de23ee408c760c68c843f" kindref="member">check_saturation</ref>(<ref refid="classclass__algorithm__finite_1a96d01fcfd2c06e9b4ecf2e1da197b2a9" kindref="member">entropy_iter</ref>[site],<sp/>saturation_sensitivity.value());</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_computed<sp/>=<sp/>std::all_of(reports.begin(),<sp/>reports.end(),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structclass__algorithm__base_1_1_saturation_report" kindref="compound">SaturationReport</ref><sp/>&amp;r)<sp/>{<sp/>return<sp/>r.has_computed;<sp/>});</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(all_computed)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>report<sp/>which<sp/>has<sp/>the<sp/>greatest<sp/>change<sp/>recently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>last_saturated_site<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>last_saturated_idx<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[site,<sp/>r]<sp/>:<sp/><ref refid="namespaceiter_1aa13063344fcd21c395fe1c4c2ea6e9a0" kindref="member">iter::enumerate</ref>(reports))<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>r.<ref refid="structclass__algorithm__base_1_1_saturation_report_1a75abc27fbf13a0be2547b307cc7d8528" kindref="member">saturated_point</ref><sp/>&gt;=<sp/>last_saturated_idx){</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_saturated_site<sp/>=<sp/>site;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_saturated_idx<sp/>=<sp/><sp/>r.<ref refid="structclass__algorithm__base_1_1_saturation_report_1a75abc27fbf13a0be2547b307cc7d8528" kindref="member">saturated_point</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;report<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>reports[last_saturated_site];</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref><sp/>=<sp/>report.saturated_count;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;level()<sp/>&gt;=<sp/><ref refid="namespacesettings_1a9aa08a0392a2f6f3084d65af2f7841ba" kindref="member">spdlog::level::debug</ref>)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Entanglement<sp/>ent.<sp/>convergence<sp/>at<sp/>site<sp/>{}:<sp/>saturated<sp/>{}<sp/>iters<sp/>(since<sp/>{})&quot;</highlight><highlight class="normal">,<sp/>last_saturated_site,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.saturated_count,<sp/>report.saturated_point);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;level()<sp/>==<sp/><ref refid="namespace_textra_1ae011dc74fd0ff312cc0d957a688142c9" kindref="member">spdlog::level::trace</ref>)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Entanglement<sp/>slope<sp/>details:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>site<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>last_saturated_site);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>sensitivity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>saturation_sensitivity.value());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>saturated<sp/>point<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>report.saturated_point);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>saturated<sp/>count<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>report.saturated_count);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Entanglement<sp/>slope<sp/>details:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>site<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>last_saturated_site);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>sensitivity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>saturation_sensitivity.value());</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>saturated<sp/>point<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>report.saturated_point);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>saturated<sp/>count<sp/><sp/><sp/><sp/>=<sp/>{}<sp/>&quot;</highlight><highlight class="normal">,<sp/>report.saturated_count);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>ent<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_vec,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>avg<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_avg,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>std<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_std,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>stn<sp/>history<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:7.4e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(report.Y_stn,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" kindref="member">entanglement_converged_for</ref><sp/>=<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="classclass__algorithm__finite_1a8afbac16dc34dd49f2ad7decc965b98a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a8afbac16dc34dd49f2ad7decc965b98a" kindref="member">class_algorithm_finite::check_convergence_spin_parity_sector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;std::string,<sp/>9&gt;<sp/>valid_sectors<sp/><sp/><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-z&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sector_is_valid<sp/>=<sp/>std::find(valid_sectors.begin(),<sp/>valid_sectors.end(),<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>)<sp/>!=<sp/>valid_sectors.end();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sector_is_valid)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>axis<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1mps_1_1internal_1af51338fdae4e7ba8380099ab81215909" kindref="member">tools::finite::mps::internal::get_axis</ref>(<ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sign<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1mps_1_1internal_1af50ad4a2ee14680748e5760b9df4b296" kindref="member">tools::finite::mps::internal::get_sign</ref>(<ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spin_component_along_axis<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1ab70288b0d3d905f3ec211b994699861d" kindref="member">tools::finite::measure::spin_component</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a664d1d8a535c41b65f59eb20c2fcf4ab" kindref="member">spin_parity_has_converged</ref><sp/><sp/>=<sp/>std::abs(std::abs(spin_component_along_axis)<sp/>-<sp/>1)<sp/>&lt;=<sp/>threshold<sp/>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a664d1d8a535c41b65f59eb20c2fcf4ab" kindref="member">spin_parity_has_converged</ref><sp/>and<sp/>spin_component_along_axis<sp/>*<sp/>sign<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;warn(</highlight><highlight class="stringliteral">&quot;Spin<sp/>parity<sp/>has<sp/>converged<sp/>to<sp/>{}<sp/>=<sp/>{:.16f}<sp/>but<sp/>requested<sp/>sector<sp/>was<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>axis,<sp/>spin_component_along_axis,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Spin<sp/>component<sp/>convergence:<sp/>{}<sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">target_sector</ref>,<sp/>spin_component_along_axis);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a664d1d8a535c41b65f59eb20c2fcf4ab" kindref="member">spin_parity_has_converged</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Probably<sp/>no<sp/>sector<sp/>was<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a8fa80baac08c61d142ac0114329a1592" kindref="member">class_algorithm_finite::clear_convergence_status</ref>()<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;trace(</highlight><highlight class="stringliteral">&quot;Clearing<sp/>convergence<sp/>status&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;e<sp/>:<sp/><ref refid="classclass__algorithm__finite_1a96d01fcfd2c06e9b4ecf2e1da197b2a9" kindref="member">entropy_iter</ref>)<sp/>{<sp/>e.clear();<sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a15cff998705259e12405380d943d26bb" kindref="member">var_mpo_iter</ref>.clear();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a7f82f92ac61f4efae5486ce310077088" kindref="member">var_mpo_step</ref>.clear();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1ab20a7a1af7d6f146f13dff0ad2d302b3" kindref="member">algorithm_has_finished</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" kindref="member">algorithm_has_succeeded</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0717b75fabecbe8f25b2d6b795ac0fde" kindref="member">algorithm_has_to_stop</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" kindref="member">algorithm_saturated_for</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a70442280f41b8930c1d4da6078dc3ea9" kindref="member">algorithm_converged_for</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" kindref="member">entanglement_converged_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" kindref="member">variance_mpo_converged_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af0827c369a54dd6c76f0def763c89ad0" kindref="member">chi_lim_has_reached_chi_max</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a664d1d8a535c41b65f59eb20c2fcf4ab" kindref="member">spin_parity_has_converged</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a72b4aa7bd0e8d16a2a98a13d8770dd58" kindref="member">has_projected</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1afe739ece30be039df7bb6333da5acf39" kindref="member">has_damped</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="classclass__algorithm__finite_1a8acca60239cbdd96b5d36d3d63b0c499" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a8acca60239cbdd96b5d36d3d63b0c499" kindref="member">class_algorithm_finite::setup_prefix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref><sp/>&amp;storage_reason,<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref><sp/>&amp;storage_level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;state_name,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>&amp;state_prefix,<sp/>std::string<sp/>&amp;model_prefix,<sp/>std::vector&lt;std::string&gt;<sp/>&amp;table_prefxs)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>this<sp/>save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>state_prefix<sp/><sp/>=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}/{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref>,<sp/>state_name);<sp/></highlight><highlight class="comment">//<sp/>May<sp/>get<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>model_prefix<sp/><sp/>=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}/{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>table_prefxs<sp/><sp/>=<sp/>{fmt::format(</highlight><highlight class="stringliteral">&quot;{}/{}&quot;</highlight><highlight class="normal">,<sp/>state_prefix,<sp/></highlight><highlight class="stringliteral">&quot;tables&quot;</highlight><highlight class="normal">)};<sp/></highlight><highlight class="comment">//<sp/>Common<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693" kindref="member">StorageLevel::NONE</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(storage_reason)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a2c616b2713e2e0aed04b4c4752c88133" kindref="member">StorageReason::FINISHED</ref>:<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" kindref="member">algorithm_has_succeeded</ref>)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a53db66979510d116e12e429852c23df7" kindref="member">settings::output::storage_level_good_state</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1ae406dc66f399d0c0e3902f7e9e81f8bc" kindref="member">settings::output::storage_level_fail_state</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/finished&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs.emplace_back(state_prefix);<sp/></highlight><highlight class="comment">//<sp/>Appends<sp/>to<sp/>its<sp/>own<sp/>table<sp/>as<sp/>well<sp/>as<sp/>the<sp/>common<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a083da148a19edd2e36a68d82c8e87377" kindref="member">StorageReason::SAVEPOINT</ref>:<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a3fd8aec52aa269851a694889bcccddce" kindref="member">settings::output::storage_level_savepoint</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a6d3e78c2e18dc5878763bbd914c0d490" kindref="member">stop_reason</ref><sp/>==<sp/><ref refid="config_2enums_8h_1ab8279e4b5d29d07b4893295770e72e65ab50339a10e1de285ac99d4c3990b8693" kindref="member">StopReason::NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>,<sp/><ref refid="namespacesettings_1_1output_1ad5202a6741248d828cf767c4f4631bc8" kindref="member">settings::output::savepoint_frequency</ref>)<sp/>!=<sp/>0)<sp/>storage_level<sp/>=<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693" kindref="member">StorageLevel::NONE</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/savepoint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1output_1a2856ae621b13993f89f10592ac0de3ba" kindref="member">settings::output::savepoint_keep_newest_only</ref>)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/iter_last&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;/iter_{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>pollute<sp/>common<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a0f15e1247e93ddfa95c008106eb0d22f" kindref="member">StorageReason::CHECKPOINT</ref>:<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a3cbc247c13365395ccf3b64df8051dfc" kindref="member">settings::output::storage_level_checkpoint</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a6d3e78c2e18dc5878763bbd914c0d490" kindref="member">stop_reason</ref><sp/>==<sp/><ref refid="config_2enums_8h_1ab8279e4b5d29d07b4893295770e72e65ab50339a10e1de285ac99d4c3990b8693" kindref="member">StopReason::NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>,<sp/><ref refid="namespacesettings_1_1output_1ad85175fd319fb912f37941b0cc5117b5" kindref="member">settings::output::checkpoint_frequency</ref>)<sp/>!=<sp/>0)<sp/>storage_level<sp/>=<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693" kindref="member">StorageLevel::NONE</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/checkpoint&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacesettings_1_1output_1a8f8d5bc74d093621d32d071760fa35e7" kindref="member">settings::output::checkpoint_keep_newest_only</ref>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/iter_last&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;/iter_{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs.emplace_back(state_prefix);<sp/></highlight><highlight class="comment">//<sp/>Appends<sp/>to<sp/>its<sp/>own<sp/>table<sp/>as<sp/>well<sp/>as<sp/>the<sp/>common<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a897773140ef9a63d5de751d88edd0436" kindref="member">StorageReason::CHI_UPDATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a3cbc247c13365395ccf3b64df8051dfc" kindref="member">settings::output::storage_level_checkpoint</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" kindref="member">cfg_chi_lim_grow</ref>())<sp/>storage_level<sp/>=<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693" kindref="member">StorageLevel::NONE</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>updated<sp/>chi<sp/>we<sp/>may<sp/>want<sp/>to<sp/>write<sp/>a<sp/>projection<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;/checkpoint/chi_{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>pollute<sp/>common<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a786913b585b4a8a603375da88293b140" kindref="member">StorageReason::PROJ_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a5be0e26e29c2bb54e41789a5896583ca" kindref="member">settings::output::storage_level_proj_state</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/projection&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>pollute<sp/>common<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a67a088c9d3535b13104e21e618f59382" kindref="member">StorageReason::INIT_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a82a9057be394d13264d9213aa909ef5c" kindref="member">settings::output::storage_level_init_state</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/state_init&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_prefxs<sp/>=<sp/>{state_prefix};<sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>pollute<sp/>common<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01aed63a7bd13e4906bc2e1bbe74f89ac5a" kindref="member">StorageReason::EMIN_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a9d632b055bf34f4a8cb2a8b393682774" kindref="member">settings::output::storage_level_emin_state</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01ae33d0e9926067a3fcfd37361b6b30f9f" kindref="member">StorageReason::EMAX_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a47e6a89a65d530cf23d22088b19f3150" kindref="member">settings::output::storage_level_emax_state</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e" kindref="member">StorageReason::MODEL</ref>:<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level<sp/>=<sp/><ref refid="namespacesettings_1_1output_1a1f406e829d64fd245a9856b91025cdfb" kindref="member">settings::output::storage_level_model</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">class_algorithm_finite::write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref><sp/>storage_reason,<sp/>std::optional&lt;CopyPolicy&gt;<sp/>copy_policy)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">write_to_file</ref>(storage_reason,<sp/>*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>,<sp/>copy_policy);</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696" refid="classclass__algorithm__finite_1a11374bc0a7b530f8dbb6409db71f261e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">class_algorithm_finite::write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref><sp/>storage_reason,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classclass__state__finite" kindref="compound">class_state_finite</ref><sp/>&amp;state,<sp/>std::optional&lt;CopyPolicy&gt;<sp/>copy_policy)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>this<sp/>save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_prefix;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>table_prefxs;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a8acca60239cbdd96b5d36d3d63b0c499" kindref="member">setup_prefix</ref>(storage_reason,<sp/>storage_level,<sp/>state.<ref refid="classclass__state__finite_1abb83259eaa9424a83af61225fb0b73a7" kindref="member">get_name</ref>(),<sp/>state_prefix,<sp/>model_prefix,<sp/>table_prefxs);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(storage_reason)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a2c616b2713e2e0aed04b4c4752c88133" kindref="member">StorageReason::FINISHED</ref>:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a083da148a19edd2e36a68d82c8e87377" kindref="member">StorageReason::SAVEPOINT</ref>:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a0f15e1247e93ddfa95c008106eb0d22f" kindref="member">StorageReason::CHECKPOINT</ref>:<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a6d3e78c2e18dc5878763bbd914c0d490" kindref="member">stop_reason</ref><sp/>==<sp/><ref refid="config_2enums_8h_1ab8279e4b5d29d07b4893295770e72e65ab50339a10e1de285ac99d4c3990b8693" kindref="member">StopReason::NONE</ref>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/>state.<ref refid="classclass__state__finite_1ae534d298a65fde25c043aedf9b009392" kindref="member">position_is_inward_edge</ref>())<sp/>storage_level<sp/>=<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693" kindref="member">StorageLevel::NONE</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a897773140ef9a63d5de751d88edd0436" kindref="member">StorageReason::CHI_UPDATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(not<sp/><ref refid="classclass__algorithm__base_1a9e2ef57748396e00830b20111c59bdd9" kindref="member">cfg_chi_lim_grow</ref>())<sp/>storage_level<sp/>=<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693" kindref="member">StorageLevel::NONE</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a786913b585b4a8a603375da88293b140" kindref="member">StorageReason::PROJ_STATE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abs_spin_component<sp/>=<sp/>std::abs(<ref refid="namespacetools_1_1finite_1_1measure_1ab70288b0d3d905f3ec211b994699861d" kindref="member">tools::finite::measure::spin_component</ref>(state,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(abs_spin_component<sp/>-<sp/>1.0)<sp/>&gt;<sp/>1e-6)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>state_projected<sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a7f267e2080f7c82ec353e72290469f27" kindref="member">get_state_projected_to_nearest_sector</ref>(<ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs_spin_component<sp/><sp/><sp/>=<sp/>std::abs(<ref refid="namespacetools_1_1finite_1_1measure_1ab70288b0d3d905f3ec211b994699861d" kindref="member">tools::finite::measure::spin_component</ref>(state_projected,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>));</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::abs(abs_spin_component<sp/>-<sp/>1.0)<sp/>&gt;<sp/>1e-6)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(fmt::format(</highlight><highlight class="stringliteral">&quot;Projection<sp/>failed:<sp/>spin<sp/>{}<sp/>=<sp/>{:.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacesettings_1_1strategy_1aa22c188c182105105eb8a3dba1588d23" kindref="member">settings::strategy::target_sector</ref>,<sp/>abs_spin_component));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">write_to_file</ref>(storage_reason,<sp/>state_projected,<sp/>copy_policy);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a67a088c9d3535b13104e21e618f59382" kindref="member">StorageReason::INIT_STATE</ref>:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01aed63a7bd13e4906bc2e1bbe74f89ac5a" kindref="member">StorageReason::EMIN_STATE</ref>:</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01ae33d0e9926067a3fcfd37361b6b30f9f" kindref="member">StorageReason::EMAX_STATE</ref>:</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e" kindref="member">StorageReason::MODEL</ref>:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(storage_level<sp/>==<sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071ab50339a10e1de285ac99d4c3990b8693" kindref="member">StorageLevel::NONE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(state_prefix.empty())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;State<sp/>prefix<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Writing<sp/>to<sp/>file:<sp/>Reason<sp/>[{}]<sp/>|<sp/>Level<sp/>[{}]<sp/>|<sp/>state<sp/>prefix<sp/>[{}]<sp/>|<sp/>model<sp/>prefix<sp/>[{}]&quot;</highlight><highlight class="normal">,<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(storage_reason),<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(storage_level),</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix,<sp/>model_prefix);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>file<sp/>cam<sp/>be<sp/>kept<sp/>open<sp/>during<sp/>writes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>-&gt;setKeepFileOpened();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>saving<sp/>tensors<sp/>and<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(storage_reason<sp/>==<sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e" kindref="member">StorageReason::MODEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5table_1a57ec03d1579b8139509698780c1674b3" kindref="member">tools::finite::io::h5table::save_model</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>model_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/hamiltonian&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/>*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5dset_1ab438427d45b47486dd5f0bbf9c4e6381" kindref="member">tools::finite::io::h5dset::save_model</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>model_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/mpo&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/>*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ae5292cd1a9588909b060778ef0ec8092" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5dset_1a4a1497464dfeb9f046aa69f5e03137f8" kindref="member">tools::finite::io::h5dset::save_state</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>state_prefix,<sp/>storage_level,<sp/>state,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5dset_1a971db612bb64ae688935e17dabb9eea7" kindref="member">tools::finite::io::h5dset::save_entgm</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>state_prefix,<sp/>storage_level,<sp/>state,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1io_1_1h5attr_1ad3d6b8303c5a1215fa858eb9c6329f7d" kindref="member">tools::common::io::h5attr::save_meta</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>storage_level,<sp/>storage_reason,<sp/><ref refid="namespacesettings_1_1model_1a3628af587c3663ba75c2a3d6db7e16e6" kindref="member">settings::model::model_type</ref>,<sp/><ref refid="namespacesettings_1_1model_1aabf0ff2a07a4b8ae7e4141b1bde089cd" kindref="member">settings::model::model_size</ref>,<sp/><ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.<ref refid="classclass__state__finite_1abb83259eaa9424a83af61225fb0b73a7" kindref="member">get_name</ref>(),<sp/>state_prefix,<sp/>model_prefix,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>results<sp/>have<sp/>now<sp/>been<sp/>written.<sp/>Next<sp/>we<sp/>append<sp/>data<sp/>to<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;table_prefix<sp/>:<sp/>table_prefxs)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(storage_reason<sp/>==<sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e" kindref="member">StorageReason::MODEL</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5table_1a156b7dac31a63f91dac37e9e47f0e39e" kindref="member">tools::finite::io::h5table::save_sim_status</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>table_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/status&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5table_1ae7ea13a2d98d5ccf418a72a9d2a8e333" kindref="member">tools::finite::io::h5table::save_profiling</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>table_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/profiling&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5table_1a4bf36d7e5205aacf329d78f6d48d5cee" kindref="member">tools::finite::io::h5table::save_mem_usage</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>table_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/mem_usage&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5table_1a187ac1870ecb52df88efde9f9e739848" kindref="member">tools::finite::io::h5table::save_measurements</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>table_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/measurements&quot;</highlight><highlight class="normal">,<sp/>storage_level,<sp/>state,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>,<sp/><ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>-&gt;setKeepFileClosed();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>from<sp/>temporary<sp/>location<sp/>to<sp/>destination<sp/>depending<sp/>on<sp/>given<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_hdf<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" kindref="member">tools::common::profile::prof</ref>[<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>][</highlight><highlight class="stringliteral">&quot;t_hdf&quot;</highlight><highlight class="normal">]-&gt;tic_token();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" kindref="member">copy_from_tmp</ref>(storage_reason,<sp/>copy_policy);</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="768" refid="classclass__algorithm__finite_1a174599c66d34bffb32d466f1fc68c2d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">class_algorithm_finite::write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref><sp/>storage_reason,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,<sp/>std::optional&lt;CopyPolicy&gt;<sp/>copy_policy)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>this<sp/>save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config_2enums_8h_1a27ddd8557d89817da29a3fb110318071" kindref="member">StorageLevel</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_level;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_prefix;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_prefix;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>table_prefxs;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a8acca60239cbdd96b5d36d3d63b0c499" kindref="member">setup_prefix</ref>(storage_reason,<sp/>storage_level,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_name(),<sp/>state_prefix,<sp/>model_prefix,<sp/>table_prefxs);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>data_path<sp/>=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}/{}&quot;</highlight><highlight class="normal">,<sp/>state_prefix,<sp/>name);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(storage_reason<sp/>==<sp/><ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01a7a03bac2692f8d17e2cda1b0721ffd0e" kindref="member">StorageReason::MODEL</ref>)<sp/>data_path<sp/>=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}/{}&quot;</highlight><highlight class="normal">,<sp/>model_prefix,<sp/>name);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1io_1_1h5dset_1a2e76eaff45783e77b0899689bf6ccc41" kindref="member">tools::finite::io::h5dset::save_data</ref>(*<ref refid="classclass__algorithm__base_1a39fdccbd48afa02c5526ecce4e7cf0e8" kindref="member">h5pp_file</ref>,<sp/>data,<sp/>data_path,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>from<sp/>temporary<sp/>location<sp/>to<sp/>destination<sp/>depending<sp/>on<sp/>given<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_hdf<sp/>=<sp/><ref refid="namespacetools_1_1common_1_1profile_1afc3a25a71835997f1a9aa7838e4de0aa" kindref="member">tools::common::profile::prof</ref>[<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref>][</highlight><highlight class="stringliteral">&quot;t_hdf&quot;</highlight><highlight class="normal">]-&gt;tic_token();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a9f9cf23bd9a37bb6bf4ad7da366beda2" kindref="member">copy_from_tmp</ref>(storage_reason,<sp/>copy_policy);</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a24226affd3cb1be61308e79c9d5225b2" kindref="member">class_algorithm_finite::write_to_file</ref>(<ref refid="config_2enums_8h_1a88f884ec2f6314f2c5abc9eb2438fc01" kindref="member">StorageReason</ref><sp/>storage_reason,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Tensor&lt;Scalar,<sp/>2&gt;<sp/>&amp;data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;CopyPolicy&gt;<sp/>copy_policy);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="classclass__algorithm__finite_1a36a983fdccbfe7f72e5bdf81fe06c23d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a36a983fdccbfe7f72e5bdf81fe06c23d" kindref="member">class_algorithm_finite::print_status_update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacenum_1a8f78d63b0e3b71f75f5a141900ba202a" kindref="member">num::mod</ref>(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0071e2c8a215558eadd08fe35d5591ef" kindref="member">step</ref>,<sp/><ref refid="classclass__algorithm__base_1a1ff5ab0d312d132dd30243885d07dbd1" kindref="member">cfg_print_freq</ref>())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a1ff5ab0d312d132dd30243885d07dbd1" kindref="member">cfg_print_freq</ref>()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;position_is_outward_edge())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>report;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(&quot;{:&lt;}<sp/>&quot;,<sp/>algo_name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:&lt;}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_name());</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;iter:{:&lt;4}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;step:{:&lt;5}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0071e2c8a215558eadd08fe35d5591ef" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;L:{}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2821ebade96b96a7ac4a8c26d0e64b8e" kindref="member">get_length</ref>());</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.empty())</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;l:[{:&gt;2}<sp/>{:&lt;2}]<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a92eedac9b796e697deaa83ebf4125800" kindref="member">position</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a92eedac9b796e697deaa83ebf4125800" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_direction()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;l:[{:&gt;2}<sp/>{:&lt;2}]<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.front(),<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.back());</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_direction()<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;l:[{:&gt;2}<sp/>{:&lt;2}]<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.back(),<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.front());</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.empty()<sp/>?<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN()<sp/>:<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8145a38b82bae9aa25597372b688670e" kindref="member">tools::finite::measure::energy_per_site</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;E/L:{:&lt;20.16f}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8ae7478d97212560ade16da80c5284ea" kindref="member">energy</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref><sp/>==<sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9ab5612e395f07bd6a022360eb707e73ae" kindref="member">AlgorithmType::xDMRG</ref>)<sp/>{<sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;ε:{:&lt;6.4f}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a7c101a128225018ef3e651a2aadf29a6" kindref="member">energy_dens</ref>);<sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;Sₑ(l):{:&lt;10.8f}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1ad4d342b14748aa9b6e9238a708a2ba8f" kindref="member">tools::finite::measure::entanglement_entropy_current</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.empty()<sp/>?<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN()<sp/>:<sp/>std::log10(<ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;log₁₀σ²E:{:&lt;10.6f}<sp/>[{:&lt;10.6f}]<sp/>&quot;</highlight><highlight class="normal">,<sp/>variance,<sp/>std::log10(<ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a1329f0aae3fa4eeae14609ea9c3df7cf" kindref="member">energy_variance_lowest</ref>));</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;χ:{:&lt;3}|{:&lt;3}|&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>(),<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1af09e39e39e315094313b3ac3c5a20baf" kindref="member">chi_lim</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>comma_width<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacesettings_1_1strategy_1aeb593f360e13adb30f9e1b5a1d4a98d0" kindref="member">settings::strategy::multisite_mps_size_max</ref><sp/>&lt;=<sp/>2<sp/>?<sp/>0<sp/>:<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bond_single_width<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::log10(<ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>()))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bond_string_width<sp/>=</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>+<sp/>(bond_single_width<sp/>+<sp/>comma_width)<sp/>*<sp/>(<ref refid="namespacesettings_1_1strategy_1aeb593f360e13adb30f9e1b5a1d4a98d0" kindref="member">settings::strategy::multisite_mps_size_max</ref><sp/>==<sp/>1<sp/>?<sp/>1<sp/>:<sp/><ref refid="namespacesettings_1_1strategy_1aeb593f360e13adb30f9e1b5a1d4a98d0" kindref="member">settings::strategy::multisite_mps_size_max</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;long&gt;<sp/>bonds_merged<sp/>=<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a9c0dce46c5a4056954221dd72c614f5c" kindref="member">tools::finite::measure::bond_dimensions_merged</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bonds_merged.empty())</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{0:&lt;{1}}<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>bond_string_width);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>bonds_string<sp/>=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>bonds_merged);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{0:&lt;{1}}<sp/>&quot;</highlight><highlight class="normal">,<sp/>bonds_string,<sp/>bond_string_width);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__finite_1a1a2ed7db66089814ced016d0f93ccd7b" kindref="member">last_optmode</ref><sp/>and<sp/><ref refid="classclass__algorithm__finite_1a7dce1f378997193fffda76e73314db75" kindref="member">last_optspace</ref>)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;opt:[{}|{}]<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(<ref refid="classclass__algorithm__finite_1a1a2ed7db66089814ced016d0f93ccd7b" kindref="member">last_optmode</ref>.value()).substr(0,<sp/>3),<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(<ref refid="classclass__algorithm__finite_1a7dce1f378997193fffda76e73314db75" kindref="member">last_optspace</ref>.value()).substr(0,<sp/>3));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;log₁₀trnc:{:&lt;8.4f}<sp/>&quot;</highlight><highlight class="normal">,<sp/>std::log10(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_truncation_error()));</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;stk:{:&lt;1}<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref>);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;sat:[σ²<sp/>{:&lt;1}<sp/>Sₑ<sp/>{:&lt;1}]<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref>);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;time:{:&lt;}<sp/>&quot;</highlight><highlight class="normal">,<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;{:&gt;6.2f}s&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">tools::common::profile::t_tot</ref>-&gt;get_measured_time()));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/>fmt::format(</highlight><highlight class="stringliteral">&quot;mem[rss<sp/>{:&lt;.1f}|peak<sp/>{:&lt;.1f}|vm<sp/>{:&lt;.1f}]MB<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1common_1_1profile_1a61312a9c72e719580b551122f0ac1e33" kindref="member">tools::common::profile::mem_rss_in_mb</ref>(),<sp/><ref refid="namespacetools_1_1common_1_1profile_1afd7671b1a2c5267039b7ebcac14e4f46" kindref="member">tools::common::profile::mem_hwm_in_mb</ref>(),</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1profile_1a6f1f875a4b0d19fe53aa9c97d11182c1" kindref="member">tools::common::profile::mem_vm_in_mb</ref>());</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(report);</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="classclass__algorithm__finite_1a31460024ef07df92bc57719b2234a725" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classclass__algorithm__finite_1a31460024ef07df92bc57719b2234a725" kindref="member">class_algorithm_finite::print_status_full</ref>()<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ad67b16320ceff79cf7ccc7351b5a0769" kindref="member">rebuild_edges</ref>();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1ab6f2e7adb1f543555adb56ad993a86a6" kindref="member">do_all_measurements</ref>();</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;{:=^60}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;=<sp/>{:<sp/>^56}<sp/>=&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Full<sp/>status:<sp/>[&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classclass__algorithm__base_1a80c582c2364a996836b5c7fe29076c13" kindref="member">algo_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;][&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;{:=^60}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Stop<sp/>reason<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="config_2enums_8h_1aa363e0dc56d2bdef0a2c3bf927637a0b" kindref="member">enum2str</ref>(<ref refid="classclass__algorithm__base_1a6d3e78c2e18dc5878763bbd914c0d490" kindref="member">stop_reason</ref>));</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Sites<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a2821ebade96b96a7ac4a8c26d0e64b8e" kindref="member">get_length</ref>());</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Position<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a92eedac9b796e697deaa83ebf4125800" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Direction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a2a63919e0178cff8d5fede2d23916331" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Iterations<sp/>(full<sp/>chain<sp/>sweeps)<sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a747785006ce496cf72c58be2ad89b79a" kindref="member">iter</ref>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Steps<sp/>(moves<sp/>along<sp/>the<sp/>chain)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0071e2c8a215558eadd08fe35d5591ef" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Total<sp/>time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;.1f}<sp/>s<sp/>=<sp/>{:&lt;.2f}<sp/>min&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">tools::common::profile::t_tot</ref>-&gt;get_measured_time(),</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1common_1_1profile_1a8c6c2572fa440dca7617003021f38319" kindref="member">tools::common::profile::t_tot</ref>-&gt;get_measured_time()<sp/>/<sp/>60);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8145a38b82bae9aa25597372b688670e" kindref="member">energy_per_site</ref><sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.empty()<sp/>?<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN()<sp/>:<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8145a38b82bae9aa25597372b688670e" kindref="member">tools::finite::measure::energy_per_site</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>per<sp/>site<sp/>E/L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;.16f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a8145a38b82bae9aa25597372b688670e" kindref="member">energy_per_site</ref>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref><sp/>==<sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9ab5612e395f07bd6a022360eb707e73ae" kindref="member">AlgorithmType::xDMRG</ref>)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>density<sp/>(rescaled<sp/>0<sp/>to<sp/>1)<sp/>ε<sp/>=<sp/>{:&lt;6.4f}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1_1finite_1_1measure_1a132f292ec9d3f89e658fb77572d12a9f" kindref="member">tools::finite::measure::energy_normalized</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a6a4d044f86d512e6c9e43a61f50fc5d2" kindref="member">energy_min_per_site</ref>,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a529e687471b62fbd48844bacd824359f" kindref="member">energy_max_per_site</ref>));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/><ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a44e973267db664b0bc453a3e0323d565" kindref="member">active_sites</ref>.empty()<sp/>?<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN()<sp/>:<sp/>std::log10(<ref refid="namespacetools_1_1finite_1_1measure_1a8a96f8adaa39895086a3feae2a0e5b47" kindref="member">tools::finite::measure::energy_variance</ref>(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Energy<sp/>variance<sp/>log₁₀<sp/>σ²(E)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;.16f}&quot;</highlight><highlight class="normal">,<sp/>variance);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Bond<sp/>dimension<sp/>maximum<sp/>χmax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a3e25541163969ac43885855e9a701455" kindref="member">cfg_chi_lim_max</ref>());</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Bond<sp/>dimensions<sp/>χ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a017b45589c0286dc0f5ccf99d3f669c2" kindref="member">tools::finite::measure::bond_dimensions</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Bond<sp/>dimension<sp/><sp/>χ<sp/>(mid)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1ae78241c83c7ea8018a9f93026bfd1b2e" kindref="member">tools::finite::measure::bond_dimension_midchain</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>));</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Entanglement<sp/>entropies<sp/>Sₑ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.5f}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(<ref refid="namespacetools_1_1finite_1_1measure_1a4515a169c43487b9dd80ed581c0d1d5e" kindref="member">tools::finite::measure::entanglement_entropies</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>),<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Entanglement<sp/>entropy<sp/><sp/><sp/>Sₑ<sp/>(mid)<sp/><sp/><sp/><sp/>=<sp/>{:.5f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a5da3c6001a1e7c6f3897afb3f30b3150" kindref="member">tools::finite::measure::entanglement_entropy_midchain</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>),<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classclass__algorithm__base_1a4c3f79ef6e69fe89a7e5b6d1f3ad3f34" kindref="member">algo_type</ref><sp/>==<sp/><ref refid="config_2enums_8h_1a9243adfb7445f1adcf51b73329e774c9a098abf727fec7ef7c238795a33b490f1" kindref="member">AlgorithmType::fLBIT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Number<sp/>entropies<sp/>Sₙ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.5f}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(<ref refid="namespacetools_1_1finite_1_1measure_1a7b3cfd48994fe5cb94a3ecd234797b60" kindref="member">tools::finite::measure::number_entropies</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>),<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Number<sp/>entropy<sp/><sp/><sp/>Sₙ<sp/>(mid)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.5f}&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacetools_1_1finite_1_1measure_1a485ac0c2835bcac4a71f1cb15e5e3254" kindref="member">tools::finite::measure::number_entropy_midchain</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>),<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Spin<sp/>components<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.5f}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(<ref refid="namespacetools_1_1finite_1_1measure_1a22e2b3240464cf0e14082b7386acbe3b" kindref="member">tools::finite::measure::spin_components</ref>(*<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>),<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Truncation<sp/>Errors<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:.3e}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(<ref refid="classclass__algorithm__finite_1a5dd8e3c8c4c49db67834c08b02dfea77" kindref="member">tensors</ref>.<ref refid="classclass__tensors__finite_1a4679ab6f9da1e325569d20d5503bc0b5" kindref="member">state</ref>-&gt;get_truncation_errors(),<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>has<sp/>succeeded<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a25307318d8c82f505565b8d3111c9b7b" kindref="member">algorithm_has_succeeded</ref>);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>has<sp/>saturated<sp/>for<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a09485291655893db0fae4f8926720e6d" kindref="member">algorithm_saturated_for</ref>);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>has<sp/>got<sp/>stuck<sp/>for<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a0896e67c1671a42d02d16753049ff0f3" kindref="member">algorithm_has_stuck_for</ref>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Algorithm<sp/>has<sp/>converged<sp/>for<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{:&lt;}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a70442280f41b8930c1d4da6078dc3ea9" kindref="member">algorithm_converged_for</ref>);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;σ²<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Converged<sp/>:<sp/>{:&lt;4}<sp/><sp/>Saturated:<sp/>{:&lt;4}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1aa8537b958c81af667b35771c9329f0c6" kindref="member">variance_mpo_converged_for</ref>,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a07b27428a52843f05dd319346cb413cf" kindref="member">variance_mpo_saturated_for</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;Sₑ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Converged<sp/>:<sp/>{:&lt;4}<sp/><sp/>Saturated:<sp/>{:&lt;4}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a3dda7ded0a40d10f04c9c671ae53910f" kindref="member">entanglement_converged_for</ref>,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classclass__algorithm__base_1a7eb3f86503fff1d7d00ec3cc61beb60b" kindref="member">status</ref>.<ref refid="classclass__algorithm__status_1a98228c70c597f29b11e5f20c808fd5b8" kindref="member">entanglement_saturated_for</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" kindref="member">tools::log</ref>-&gt;info(</highlight><highlight class="stringliteral">&quot;{:=^60}&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/david/GitProjects/DMRG++/source/algorithms/class_algorithm_finite.cpp"/>
  </compounddef>
</doxygen>
