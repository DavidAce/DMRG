<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacetools_1_1finite_1_1opt" kind="namespace" language="C++">
    <compoundname>tools::finite::opt</compoundname>
    <innernamespace refid="namespacetools_1_1finite_1_1opt_1_1internals">tools::finite::opt::internals</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacetools_1_1finite_1_1opt_1afe78a5dc46145a3a7d8f51168226e0f6" prot="public" static="no">
        <name>OptMode</name>
        <enumvalue id="namespacetools_1_1finite_1_1opt_1afe78a5dc46145a3a7d8f51168226e0f6a8c009c8dd4d4f9dde7515c00d5cd4661" prot="public">
          <name>OVERLAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetools_1_1finite_1_1opt_1afe78a5dc46145a3a7d8f51168226e0f6ace18bb9a2b22515d0cd36bca6b998bde" prot="public">
          <name>VARIANCE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="70" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetools_1_1finite_1_1opt_1a04ca8f4b4cd4ea8fb0700927cbae11b6" prot="public" static="no">
        <name>OptSpace</name>
        <enumvalue id="namespacetools_1_1finite_1_1opt_1a04ca8f4b4cd4ea8fb0700927cbae11b6a75420cb18c5b572ad779b8c95d797cf6" prot="public">
          <name>SUBSPACE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetools_1_1finite_1_1opt_1a04ca8f4b4cd4ea8fb0700927cbae11b6a4c5d06b02c97731aaa976179c62dcf76" prot="public">
          <name>DIRECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="71" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetools_1_1finite_1_1opt_1ad30f78663f0e38d32ba7964276f33d4e" prot="public" static="no">
        <name>OptType</name>
        <enumvalue id="namespacetools_1_1finite_1_1opt_1ad30f78663f0e38d32ba7964276f33d4ea8cf125b0e31559ba75a9d9b4f818a554" prot="public">
          <name>REAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetools_1_1finite_1_1opt_1ad30f78663f0e38d32ba7964276f33d4ea958448d4909b92010c81d52d3e6ad8f1" prot="public">
          <name>CPLX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="72" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" bodystart="72" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetools_1_1finite_1_1opt_1a2323c488f0d980d959f6ad8e335c03f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>, 3 &gt;</type>
        <definition>Eigen::Tensor&lt; class_finite_state::Scalar, 3 &gt; tools::finite::opt::find_excited_state</definition>
        <argsstring>(const class_finite_state &amp;state, const class_simulation_status &amp;sim_status, OptMode optMode, OptSpace optSpace, OptType optType)</argsstring>
        <name>find_excited_state</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classclass__simulation__status" kindref="compound">class_simulation_status</ref> &amp;</type>
          <declname>sim_status</declname>
        </param>
        <param>
          <type><ref refid="namespacetools_1_1finite_1_1opt_1afe78a5dc46145a3a7d8f51168226e0f6" kindref="member">OptMode</ref></type>
          <declname>optMode</declname>
        </param>
        <param>
          <type><ref refid="namespacetools_1_1finite_1_1opt_1a04ca8f4b4cd4ea8fb0700927cbae11b6" kindref="member">OptSpace</ref></type>
          <declname>optSpace</declname>
        </param>
        <param>
          <type><ref refid="namespacetools_1_1finite_1_1opt_1ad30f78663f0e38d32ba7964276f33d4e" kindref="member">OptType</ref></type>
          <declname>optType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="73" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/opt.cpp" bodystart="17" bodyend="39"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="classclass__finite__state_1af815d761506be3a8e1aa9845cc41d1b5" compoundref="class__finite__state_8cpp" startline="230" endline="239">class_finite_state::active_dimensions</references>
        <references refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" compoundref="class__finite__state_8cpp" startline="46" endline="46">class_finite_state::get_position</references>
        <references refid="namespacetools_1_1finite_1_1opt_1_1internals_1ad8dd1bea73386ce201be145dbeb0e57d" compoundref="ceres_8cpp" startline="18" endline="109">tools::finite::opt::internals::ceres_optimization</references>
        <references refid="namespacetools_1_1finite_1_1opt_1_1internals_1a54d55d18dbbbf7f0258c049658e4858b" compoundref="subspace_8cpp" startline="212" endline="329">tools::finite::opt::internals::subspace_optimization</references>
        <references refid="namespacetools_1_1finite_1_1opt_1_1internals_1afc4f5fa072ebf99048b4e3b939700b31" compoundref="direct_8cpp" startline="31" endline="107">tools::finite::opt::internals::direct_optimization</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1opt_1a6aea4ac2180f6024a1346897354861d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; std::complex&lt; double &gt;, 4 &gt; tools::finite::opt::find_ground_state</definition>
        <argsstring>(const class_finite_state &amp;state, std::string ritz=&quot;SR&quot;)</argsstring>
        <name>find_ground_state</name>
        <param>
          <type>const <ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>ritz</declname>
          <defval>&quot;SR&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="74" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/opt.cpp" bodystart="41" bodyend="45"/>
        <references refid="namespacetools_1_1finite_1_1opt_1_1internals_1a4c06ba68e3212f27854e1b739aa189f4" compoundref="ground__state_8cpp" startline="11" endline="45">tools::finite::opt::internals::ground_state_optimization</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1opt_1a50821e31a47ff88e9bf4db457e9da5dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::opt::truncate_theta</definition>
        <argsstring>(Eigen::Tensor&lt; Scalar, 3 &gt; &amp;theta, class_finite_state &amp;state, long chi_, double SVDThreshold)</argsstring>
        <name>truncate_theta</name>
        <param>
          <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>long</type>
          <declname>chi_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>SVDThreshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="75" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/svd.cpp" bodystart="81" bodyend="98"/>
        <references refid="classclass__finite__state_1a8f08867b1dd985e0428620b548443213" compoundref="class__finite__state_8cpp" startline="346" endline="348">class_finite_state::unset_measurements</references>
        <references refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" compoundref="class__finite__state_8h" startline="103">class_finite_state::active_sites</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
        <references refid="classclass__finite__state_1a304474ccfccd73c3371441ab4b1c2e0e" compoundref="class__finite__state_8cpp" startline="52" endline="52">class_finite_state::get_direction</references>
        <references refid="namespacetools_1_1finite_1_1opt_1a3bc38a43130ecfed5634e7d177f7af54" compoundref="svd_8cpp" startline="102" endline="170">truncate_right</references>
        <references refid="namespacetools_1_1finite_1_1opt_1aac1f95698474f5d162e983fb6958cd7f" compoundref="svd_8cpp" startline="173" endline="240">truncate_left</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1opt_1aac1f95698474f5d162e983fb6958cd7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::opt::truncate_left</definition>
        <argsstring>(Eigen::Tensor&lt; Scalar, 3 &gt; &amp;theta, class_finite_state &amp;state, long chi_, double SVDThreshold)</argsstring>
        <name>truncate_left</name>
        <param>
          <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>long</type>
          <declname>chi_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>SVDThreshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="76" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/svd.cpp" bodystart="173" bodyend="240"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="classclass___s_v_d_1a7568da355eba7526e68a51faf9545059" compoundref="class__svd__wrapper_8cpp" startline="34" endline="36">class_SVD::setThreshold</references>
        <references refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" compoundref="views_8cpp" startline="22">tools::common::views::theta</references>
        <references refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" compoundref="class__finite__state_8h" startline="103">class_finite_state::active_sites</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
        <references refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" compoundref="class__finite__state_8cpp" startline="106" endline="118">class_finite_state::get_MPS</references>
        <references refid="classclass__vidal__site_1a4e630c363c4ce0619593ba7c21f3a0e1" compoundref="class__vidal__site_8cpp" startline="20" endline="20">class_vidal_site::get_spin_dim</references>
        <references refid="classclass___s_v_d_1ade26c2e7264d4dcac3fcaeda7fe4c443" compoundref="class__svd__wrapper_8h" startline="184" endline="191">class_SVD::schmidt_with_norm</references>
        <references refid="classclass__finite__state_1ac698101229f4b0af09c22a12a45fc5c1" compoundref="class__finite__state_8h" startline="119">class_finite_state::truncation_error</references>
        <references refid="classclass___s_v_d_1a70a15fb97a1af53d053ae02a407b2bb2" compoundref="class__svd__wrapper_8cpp" startline="30" endline="32">class_SVD::get_truncation_error</references>
        <references refid="namespace_textra_1a0943a701e495e3c6c3211a7407e7a312" compoundref="nmspc__tensor__extra_8h" startline="131" endline="133">Textra::asDiagonalInversed</references>
        <references refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" compoundref="class__finite__state_8cpp" startline="154" endline="159">class_finite_state::get_L</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" compoundref="class__finite__state_8cpp" startline="146" endline="148">class_finite_state::get_G</references>
        <references refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" compoundref="nmspc__tensor__extra_8h" startline="121" endline="123">Textra::asDiagonal</references>
        <references refid="classclass__finite__state_1a329621889f03d2af14130fda0b834457" compoundref="class__finite__state_8cpp" startline="95" endline="97">class_finite_state::get_B</references>
        <references refid="namespace_textra_1a9860b63ba377587f29fa84cbce5702c0" compoundref="nmspc__tensor__extra_8h" startline="214" endline="216">Textra::Tensor2_to_Matrix</references>
        <references refid="classclass__vidal__site_1a91fb27d7a9d6bcaad921fc1e683aa438" compoundref="class__vidal__site_8cpp" startline="16" endline="16">class_vidal_site::get_A</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1opt_1a3bc38a43130ecfed5634e7d177f7af54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::opt::truncate_right</definition>
        <argsstring>(Eigen::Tensor&lt; Scalar, 3 &gt; &amp;theta, class_finite_state &amp;state, long chi_, double SVDThreshold)</argsstring>
        <name>truncate_right</name>
        <param>
          <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>, 3 &gt; &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>long</type>
          <declname>chi_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>SVDThreshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="77" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/svd.cpp" bodystart="102" bodyend="170"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="classclass___s_v_d_1a7568da355eba7526e68a51faf9545059" compoundref="class__svd__wrapper_8cpp" startline="34" endline="36">class_SVD::setThreshold</references>
        <references refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" compoundref="views_8cpp" startline="22">tools::common::views::theta</references>
        <references refid="classclass__finite__state_1a4dec10a30b4294f02ae3e40a7fd8de26" compoundref="class__finite__state_8h" startline="103">class_finite_state::active_sites</references>
        <references refid="namespacetools_1_1finite_1_1measure_1af8a40ef6c20e8ca83cdc5e8c238f9340" compoundref="finite_2measure_8cpp" startline="35" endline="59">tools::finite::measure::norm</references>
        <references refid="classclass__finite__state_1a78659c1d9014d5b5e795e0829167ebe3" compoundref="class__finite__state_8cpp" startline="106" endline="118">class_finite_state::get_MPS</references>
        <references refid="classclass__vidal__site_1a4e630c363c4ce0619593ba7c21f3a0e1" compoundref="class__vidal__site_8cpp" startline="20" endline="20">class_vidal_site::get_spin_dim</references>
        <references refid="classclass___s_v_d_1ade26c2e7264d4dcac3fcaeda7fe4c443" compoundref="class__svd__wrapper_8h" startline="184" endline="191">class_SVD::schmidt_with_norm</references>
        <references refid="classclass__finite__state_1ac698101229f4b0af09c22a12a45fc5c1" compoundref="class__finite__state_8h" startline="119">class_finite_state::truncation_error</references>
        <references refid="classclass___s_v_d_1a70a15fb97a1af53d053ae02a407b2bb2" compoundref="class__svd__wrapper_8cpp" startline="30" endline="32">class_SVD::get_truncation_error</references>
        <references refid="namespace_textra_1a0943a701e495e3c6c3211a7407e7a312" compoundref="nmspc__tensor__extra_8h" startline="131" endline="133">Textra::asDiagonalInversed</references>
        <references refid="classclass__finite__state_1a2671b50504bd387e8153151fb7556e24" compoundref="class__finite__state_8cpp" startline="154" endline="159">class_finite_state::get_L</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="classclass__finite__state_1a0f966b0ed7c085b399674ca7c67494bd" compoundref="class__finite__state_8cpp" startline="146" endline="148">class_finite_state::get_G</references>
        <references refid="namespace_textra_1a42b2f8b0c5883c74c9fb806db83762da" compoundref="nmspc__tensor__extra_8h" startline="121" endline="123">Textra::asDiagonal</references>
        <references refid="classclass__finite__state_1a96207fcc3378d0bcc7c884055d9862b0" compoundref="class__finite__state_8cpp" startline="91" endline="93">class_finite_state::get_A</references>
        <references refid="namespace_textra_1a9860b63ba377587f29fa84cbce5702c0" compoundref="nmspc__tensor__extra_8h" startline="214" endline="216">Textra::Tensor2_to_Matrix</references>
        <references refid="classclass__finite__state_1a329621889f03d2af14130fda0b834457" compoundref="class__finite__state_8cpp" startline="95" endline="97">class_finite_state::get_B</references>
      </memberdef>
      <memberdef kind="function" id="namespacetools_1_1finite_1_1opt_1aa1f7f648d761d5f59f0c782ccea498bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tools::finite::opt::truncate_theta</definition>
        <argsstring>(Eigen::Tensor&lt; Scalar, 4 &gt; &amp;theta, class_finite_state &amp;state, long chi_, double SVDThreshold)</argsstring>
        <name>truncate_theta</name>
        <param>
          <type>Eigen::Tensor&lt; <ref refid="namespacetools_1_1finite_1a88c40d69fb3fa1a7a0e3c7208effa6f6" kindref="member">Scalar</ref>, 4 &gt; &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type><ref refid="classclass__finite__state" kindref="compound">class_finite_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>long</type>
          <declname>chi_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>SVDThreshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/nmspc_tools.h" line="78" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/svd.cpp" bodystart="243" bodyend="254"/>
        <references refid="namespacetools_1a68a5becb2c794cab385cbb38d9f0d44a" compoundref="nmspc__tools_8h" startline="29">tools::log</references>
        <references refid="classclass___s_v_d_1a7568da355eba7526e68a51faf9545059" compoundref="class__svd__wrapper_8cpp" startline="34" endline="36">class_SVD::setThreshold</references>
        <references refid="classclass___s_v_d_1a3cf73c9f6ec470f77f6fbacfffd32792" compoundref="class__svd__wrapper_8h" startline="145" endline="153">class_SVD::schmidt</references>
        <references refid="namespacetools_1_1common_1_1views_1a456b60de2e6a0cdc1197ac9b30a18a09" compoundref="views_8cpp" startline="22">tools::common::views::theta</references>
        <references refid="classclass__finite__state_1ac698101229f4b0af09c22a12a45fc5c1" compoundref="class__finite__state_8h" startline="119">class_finite_state::truncation_error</references>
        <references refid="classclass__finite__state_1a914b197428fdcc43b7571381e3422071" compoundref="class__finite__state_8cpp" startline="46" endline="46">class_finite_state::get_position</references>
        <references refid="classclass___s_v_d_1a70a15fb97a1af53d053ae02a407b2bb2" compoundref="class__svd__wrapper_8cpp" startline="30" endline="32">class_SVD::get_truncation_error</references>
        <references refid="classclass__finite__state_1a781bc0bab32617bf299a11124ab136f6" compoundref="class__finite__state_8h" startline="51">class_finite_state::MPS_C</references>
        <references refid="namespace_textra_1a0943a701e495e3c6c3211a7407e7a312" compoundref="nmspc__tensor__extra_8h" startline="131" endline="133">Textra::asDiagonalInversed</references>
        <references refid="classclass__finite__state_1a14b46df5eaca65e179a7e569b96760a1" compoundref="class__finite__state_8h" startline="49">class_finite_state::MPS_L</references>
        <references refid="namespace_textra_1ad322c080214d3af95e19d611c077ea76" compoundref="nmspc__tensor__extra_8h" startline="40" endline="43">Textra::idx</references>
        <references refid="classclass__finite__state_1ab218814d43faec51bf410db562b7c68a" compoundref="class__finite__state_8h" startline="50">class_finite_state::MPS_R</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/state/tools/finite/opt.h" line="17" column="1"/>
  </compounddef>
</doxygen>
