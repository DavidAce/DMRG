<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classpcg__detail_1_1engine" kind="class" language="C++" prot="public">
    <compoundname>pcg_detail::engine</compoundname>
    <basecompoundref prot="protected" virt="non-virtual">output_mixin</basecompoundref>
    <basecompoundref refid="classpcg__detail_1_1oneseq__stream" prot="public" virt="non-virtual">pcg_detail::oneseq_stream&lt; itype &gt;</basecompoundref>
    <basecompoundref refid="structpcg__detail_1_1default__multiplier" prot="protected" virt="non-virtual">pcg_detail::default_multiplier&lt; itype &gt;</basecompoundref>
    <includes refid="pcg__random_8hpp" local="no">pcg_random.hpp</includes>
    <innerclass refid="structpcg__detail_1_1engine_1_1can__specify__stream__tag" prot="protected">pcg_detail::engine::can_specify_stream_tag</innerclass>
    <innerclass refid="structpcg__detail_1_1engine_1_1no__specifiable__stream__tag" prot="protected">pcg_detail::engine::no_specifiable_stream_tag</innerclass>
    <templateparamlist>
      <param>
        <type>typename xtype</type>
      </param>
      <param>
        <type>typename itype</type>
      </param>
      <param>
        <type>typename output_mixin</type>
      </param>
      <param>
        <type>bool</type>
        <declname>output_previous</declname>
        <defname>output_previous</defname>
        <defval>true</defval>
      </param>
      <param>
        <type>typename stream_mixin</type>
        <defval><ref refid="classpcg__detail_1_1oneseq__stream" kindref="compound">oneseq_stream</ref>&lt;itype&gt;</defval>
      </param>
      <param>
        <type>typename multiplier_mixin</type>
        <defval><ref refid="structpcg__detail_1_1default__multiplier" kindref="compound">default_multiplier</ref>&lt;itype&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpcg__detail_1_1engine_1af7b21de08e98c837c5ac79ac0fb40260" prot="public" static="no">
        <type>xtype</type>
        <definition>typedef xtype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="306" column="23" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpcg__detail_1_1engine_1a551fea1601c043e1162c790593c51b58" prot="public" static="no">
        <type>itype</type>
        <definition>typedef itype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::state_type</definition>
        <argsstring></argsstring>
        <name>state_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="307" column="23" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classpcg__detail_1_1engine_1a8e29a3b26c9966667b6ea7a7f153b145" prot="protected" static="no" mutable="no">
        <type>itype</type>
        <definition>itype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="297" column="15" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classpcg__detail_1_1engine_1ae534d703d6ecccf0c7a3da12e1f9bf5e" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>static constexpr size_t pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::period_pow2</definition>
        <argsstring>()</argsstring>
        <name>period_pow2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="309" column="33" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="309" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a875ea02e42ccc2286b3966520e0faed5" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classpcg__detail_1_1engine_1af7b21de08e98c837c5ac79ac0fb40260" kindref="member">result_type</ref></type>
        <definition>static constexpr result_type pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::min</definition>
        <argsstring>()</argsstring>
        <name>min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="314" column="38" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="314" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1afb796307012f539f9ac31eb4390a9ead" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classpcg__detail_1_1engine_1af7b21de08e98c837c5ac79ac0fb40260" kindref="member">result_type</ref></type>
        <definition>static constexpr result_type pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::max</definition>
        <argsstring>()</argsstring>
        <name>max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="316" column="38" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="316" bodyend="316"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classpcg__detail_1_1engine_1abc83b5b934e2acfa6fac6501db0bb703" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>itype</type>
        <definition>itype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::bump</definition>
        <argsstring>(itype state)</argsstring>
        <name>bump</name>
        <param>
          <type>itype</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="319" column="15" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="319" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a6024d002bdbe9ac269cc7deefb5746d8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>itype</type>
        <definition>itype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::base_generate</definition>
        <argsstring>()</argsstring>
        <name>base_generate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="321" column="15" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a9c75cb00bd3a81f316546acca79a2ca7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>itype</type>
        <definition>itype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::base_generate0</definition>
        <argsstring>()</argsstring>
        <name>base_generate0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="323" column="15" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="323" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a00e9d352d7c83b5c5287d7b55b19b4bc" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>itype</type>
        <definition>itype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::distance</definition>
        <argsstring>(itype newstate, itype mask=~itype(0U)) const</argsstring>
        <name>distance</name>
        <param>
          <type>itype</type>
          <declname>newstate</declname>
        </param>
        <param>
          <type>itype</type>
          <declname>mask</declname>
          <defval>~itype(0U)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="344" column="15" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="344" bodyend="344"/>
        <references refid="classpcg__detail_1_1engine_1a00e9d352d7c83b5c5287d7b55b19b4bc" compoundref="pcg__random_8hpp" startline="344" endline="344">pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::distance</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpcg__detail_1_1engine_1af26836cecbdaa218abfd1182f2e84402" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpcg__detail_1_1engine_1af7b21de08e98c837c5ac79ac0fb40260" kindref="member">result_type</ref></type>
        <definition>result_type pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="330" column="21" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="330" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a24520f8e9105cd463b84d545e6777be9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpcg__detail_1_1engine_1af7b21de08e98c837c5ac79ac0fb40260" kindref="member">result_type</ref></type>
        <definition>result_type pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::operator()</definition>
        <argsstring>(result_type upper_bound)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classpcg__detail_1_1engine_1af7b21de08e98c837c5ac79ac0fb40260" kindref="member">result_type</ref></type>
          <declname>upper_bound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="337" column="21" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="337" bodyend="337"/>
        <references refid="namespacepcg__extras_1a09fe30ab14f4bae059b13199966e6562" compoundref="pcg__extras_8hpp" startline="459" endline="466">pcg_extras::bounded_rand</references>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1ad825cdb944e1a8c9e58e1b20dcbdf042" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::advance</definition>
        <argsstring>(itype delta)</argsstring>
        <name>advance</name>
        <param>
          <type>itype</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="347" column="14" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="347" bodyend="347"/>
        <references refid="classpcg__detail_1_1engine_1ad825cdb944e1a8c9e58e1b20dcbdf042" compoundref="pcg__random_8hpp" startline="347" endline="347">pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::advance</references>
        <references refid="namespacesettings_1_1model_1_1ising__sdual_1a2121cbdb3135ff0ba4c0d382b81ddc9a" compoundref="nmspc__settings_8h" startline="112">settings::model::ising_sdual::delta</references>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1adfb7a9ba483de8ef30e53ea3a9a7ba0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::backstep</definition>
        <argsstring>(itype delta)</argsstring>
        <name>backstep</name>
        <param>
          <type>itype</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="349" column="14" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="349" bodyend="349"/>
        <references refid="namespacesettings_1_1model_1_1ising__sdual_1a2121cbdb3135ff0ba4c0d382b81ddc9a" compoundref="nmspc__settings_8h" startline="112">settings::model::ising_sdual::delta</references>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1ab47ab15e70c4ac7d284509642a4628a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::discard</definition>
        <argsstring>(itype delta)</argsstring>
        <name>discard</name>
        <param>
          <type>itype</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="351" column="14" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="351" bodyend="351"/>
        <references refid="namespacesettings_1_1model_1_1ising__sdual_1a2121cbdb3135ff0ba4c0d382b81ddc9a" compoundref="nmspc__settings_8h" startline="112">settings::model::ising_sdual::delta</references>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a142a7d2853ddc5e0583e0398da4c77b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::wrapped</definition>
        <argsstring>()</argsstring>
        <name>wrapped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="353" column="14" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="353" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1ac02de8c934480730d861cfcf5626b697" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::engine</definition>
        <argsstring>(itype state=itype(0xcafef00dd15ea5e5ULL))</argsstring>
        <name>engine</name>
        <param>
          <type>itype</type>
          <declname>state</declname>
          <defval>itype(0xcafef00dd15ea5e5ULL)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="364" column="9" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="364" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a911dbf0e47820abfe544bde5e63f5645" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename sm</type>
            <defval>stream_mixin</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::engine</definition>
        <argsstring>(itype state, typename sm::stream_state stream_seed)</argsstring>
        <name>engine</name>
        <param>
          <type>itype</type>
          <declname>state</declname>
        </param>
        <param>
          <type>typename sm::stream_state</type>
          <declname>stream_seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="372" column="9" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a346579aae6e9f583d1db948bc666c665" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SeedSeq</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::engine</definition>
        <argsstring>(SeedSeq &amp;&amp;seedSeq, typename std::enable_if&lt;!stream_mixin::can_specify_stream &amp;&amp;!std::is_convertible&lt; SeedSeq, itype &gt;::value &amp;&amp;!std::is_convertible&lt; SeedSeq, engine &gt;::value, no_specifiable_stream_tag &gt;::type={})</argsstring>
        <name>engine</name>
        <param>
          <type>SeedSeq &amp;&amp;</type>
          <declname>seedSeq</declname>
        </param>
        <param>
          <type>typename std::enable_if&lt;!stream_mixin::can_specify_stream &amp;&amp;!std::is_convertible&lt; SeedSeq, itype &gt;::value &amp;&amp;!std::is_convertible&lt; SeedSeq, <ref refid="classpcg__detail_1_1engine" kindref="compound">engine</ref> &gt;::value, <ref refid="structpcg__detail_1_1engine_1_1no__specifiable__stream__tag" kindref="compound">no_specifiable_stream_tag</ref> &gt;::type</type>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="378" column="9" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="378" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a4a5018b2637964646c6623442d68d24d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SeedSeq</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::engine</definition>
        <argsstring>(SeedSeq &amp;&amp;seedSeq, typename std::enable_if&lt; stream_mixin::can_specify_stream &amp;&amp;!std::is_convertible&lt; SeedSeq, itype &gt;::value &amp;&amp;!std::is_convertible&lt; SeedSeq, engine &gt;::value, can_specify_stream_tag &gt;::type={})</argsstring>
        <name>engine</name>
        <param>
          <type>SeedSeq &amp;&amp;</type>
          <declname>seedSeq</declname>
        </param>
        <param>
          <type>typename std::enable_if&lt; stream_mixin::can_specify_stream &amp;&amp;!std::is_convertible&lt; SeedSeq, itype &gt;::value &amp;&amp;!std::is_convertible&lt; SeedSeq, <ref refid="classpcg__detail_1_1engine" kindref="compound">engine</ref> &gt;::value, <ref refid="structpcg__detail_1_1engine_1_1can__specify__stream__tag" kindref="compound">can_specify_stream_tag</ref> &gt;::type</type>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="386" column="9" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="386" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1acb79a230fcce852a7fc414d1194dd5a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::seed</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>seed</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="394" column="14" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="394" bodyend="396"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classpcg__detail_1_1engine_1a12d3653cfe490a59f7ce55d028f1a7e0" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>itype</type>
        <definition>itype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::advance</definition>
        <argsstring>(itype state, itype delta, itype cur_mult, itype cur_plus)</argsstring>
        <name>advance</name>
        <param>
          <type>itype</type>
          <declname>state</declname>
        </param>
        <param>
          <type>itype</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>itype</type>
          <declname>cur_mult</declname>
        </param>
        <param>
          <type>itype</type>
          <declname>cur_plus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="340" column="22" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="464" bodyend="488"/>
        <references refid="namespacesettings_1_1model_1_1ising__sdual_1a2121cbdb3135ff0ba4c0d382b81ddc9a" compoundref="nmspc__settings_8h" startline="112">settings::model::ising_sdual::delta</references>
        <references refid="config_2enums_8h_1a01f43889dba436bb43267502af8f3b8dabc21e6484530fc9d0313cb816b733396">ONE</references>
      </memberdef>
      <memberdef kind="function" id="classpcg__detail_1_1engine_1aa58dc06aeb00200b73dbb890abc50fbf" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>itype</type>
        <definition>itype pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;::distance</definition>
        <argsstring>(itype cur_state, itype newstate, itype cur_mult, itype cur_plus, itype mask=~itype(0U))</argsstring>
        <name>distance</name>
        <param>
          <type>itype</type>
          <declname>cur_state</declname>
        </param>
        <param>
          <type>itype</type>
          <declname>newstate</declname>
        </param>
        <param>
          <type>itype</type>
          <declname>cur_mult</declname>
        </param>
        <param>
          <type>itype</type>
          <declname>cur_plus</declname>
        </param>
        <param>
          <type>itype</type>
          <declname>mask</declname>
          <defval>~itype(0U)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="342" column="22" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="491" bodyend="507"/>
        <references refid="config_2enums_8h_1a01f43889dba436bb43267502af8f3b8dabc21e6484530fc9d0313cb816b733396">ONE</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpcg__detail_1_1engine_1af79f90f1b65a5d7c932621ae5ab0a603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename xtype1</type>
          </param>
          <param>
            <type>typename itype1</type>
          </param>
          <param>
            <type>typename output_mixin1</type>
          </param>
          <param>
            <type>bool</type>
            <declname>output_previous1</declname>
            <defname>output_previous1</defname>
          </param>
          <param>
            <type>typename stream_mixin_lhs</type>
          </param>
          <param>
            <type>typename multiplier_mixin_lhs</type>
          </param>
          <param>
            <type>typename stream_mixin_rhs</type>
          </param>
          <param>
            <type>typename multiplier_mixin_rhs</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const engine&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin_lhs, multiplier_mixin_lhs &gt; &amp;, const engine&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin_rhs, multiplier_mixin_rhs &gt; &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classpcg__detail_1_1engine" kindref="compound">engine</ref>&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin_lhs, multiplier_mixin_lhs &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classpcg__detail_1_1engine" kindref="compound">engine</ref>&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin_rhs, multiplier_mixin_rhs &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="400" column="21"/>
      </memberdef>
      <memberdef kind="friend" id="classpcg__detail_1_1engine_1a5e668211d96961296a32014645938076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename xtype1</type>
          </param>
          <param>
            <type>typename itype1</type>
          </param>
          <param>
            <type>typename output_mixin1</type>
          </param>
          <param>
            <type>bool</type>
            <declname>output_previous1</declname>
            <defname>output_previous1</defname>
          </param>
          <param>
            <type>typename stream_mixin_lhs</type>
          </param>
          <param>
            <type>typename multiplier_mixin_lhs</type>
          </param>
          <param>
            <type>typename stream_mixin_rhs</type>
          </param>
          <param>
            <type>typename multiplier_mixin_rhs</type>
          </param>
        </templateparamlist>
        <type>itype1</type>
        <definition>itype1 operator-</definition>
        <argsstring>(const engine&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin_lhs, multiplier_mixin_lhs &gt; &amp;, const engine&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin_rhs, multiplier_mixin_rhs &gt; &amp;)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classpcg__detail_1_1engine" kindref="compound">engine</ref>&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin_lhs, multiplier_mixin_lhs &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classpcg__detail_1_1engine" kindref="compound">engine</ref>&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin_rhs, multiplier_mixin_rhs &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="405" column="23"/>
      </memberdef>
      <memberdef kind="friend" id="classpcg__detail_1_1engine_1a76bbaeddcc0707b168374c22d8fe8eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharT</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
          <param>
            <type>typename xtype1</type>
          </param>
          <param>
            <type>typename itype1</type>
          </param>
          <param>
            <type>typename output_mixin1</type>
          </param>
          <param>
            <type>bool</type>
            <declname>output_previous1</declname>
            <defname>output_previous1</defname>
          </param>
          <param>
            <type>typename stream_mixin1</type>
          </param>
          <param>
            <type>typename multiplier_mixin1</type>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; CharT, Traits &gt; &amp;</type>
        <definition>std::basic_ostream&lt;CharT, Traits&gt;&amp; operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; CharT, Traits &gt; &amp;out, const engine&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin1, multiplier_mixin1 &gt; &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; CharT, Traits &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classpcg__detail_1_1engine" kindref="compound">engine</ref>&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin1, multiplier_mixin1 &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="410" column="9"/>
      </memberdef>
      <memberdef kind="friend" id="classpcg__detail_1_1engine_1a3e972b7259cfc9501cc55e2b7201a4f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharT</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
          <param>
            <type>typename xtype1</type>
          </param>
          <param>
            <type>typename itype1</type>
          </param>
          <param>
            <type>typename output_mixin1</type>
          </param>
          <param>
            <type>bool</type>
            <declname>output_previous1</declname>
            <defname>output_previous1</defname>
          </param>
          <param>
            <type>typename stream_mixin1</type>
          </param>
          <param>
            <type>typename multiplier_mixin1</type>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; CharT, Traits &gt; &amp;</type>
        <definition>std::basic_istream&lt;CharT, Traits&gt;&amp; operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; CharT, Traits &gt; &amp;in, engine&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin1, multiplier_mixin1 &gt; &amp;rng)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; CharT, Traits &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classpcg__detail_1_1engine" kindref="compound">engine</ref>&lt; xtype1, itype1, output_mixin1, output_previous1, stream_mixin1, multiplier_mixin1 &gt; &amp;</type>
          <declname>rng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="415" column="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>pcg_detail::default_increment&lt; itype &gt;</label>
        <link refid="structpcg__detail_1_1default__increment"/>
      </node>
      <node id="5">
        <label>pcg_detail::default_multiplier&lt; itype &gt;</label>
        <link refid="structpcg__detail_1_1default__multiplier"/>
      </node>
      <node id="1">
        <label>pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;</label>
        <link refid="classpcg__detail_1_1engine"/>
        <childnode refid="2" relation="protected-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>output_mixin</label>
      </node>
      <node id="3">
        <label>pcg_detail::oneseq_stream&lt; itype &gt;</label>
        <link refid="classpcg__detail_1_1oneseq__stream"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>pcg_detail::default_increment&lt; itype &gt;</label>
        <link refid="structpcg__detail_1_1default__increment"/>
      </node>
      <node id="5">
        <label>pcg_detail::default_multiplier&lt; itype &gt;</label>
        <link refid="structpcg__detail_1_1default__multiplier"/>
      </node>
      <node id="1">
        <label>pcg_detail::engine&lt; xtype, itype, output_mixin, output_previous, stream_mixin, multiplier_mixin &gt;</label>
        <link refid="classpcg__detail_1_1engine"/>
        <childnode refid="2" relation="protected-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>output_mixin</label>
      </node>
      <node id="3">
        <label>pcg_detail::oneseq_stream&lt; itype &gt;</label>
        <link refid="classpcg__detail_1_1oneseq__stream"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" line="295" column="5" bodyfile="/home/david/GitProjects/DMRG++/source/math/rnd/pcg_random.hpp" bodystart="295" bodyend="417"/>
    <listofallmembers>
      <member refid="classpcg__detail_1_1engine_1a12d3653cfe490a59f7ce55d028f1a7e0" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>advance</name></member>
      <member refid="classpcg__detail_1_1engine_1ad825cdb944e1a8c9e58e1b20dcbdf042" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>advance</name></member>
      <member refid="classpcg__detail_1_1engine_1adfb7a9ba483de8ef30e53ea3a9a7ba0e" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>backstep</name></member>
      <member refid="classpcg__detail_1_1engine_1a6024d002bdbe9ac269cc7deefb5746d8" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>base_generate</name></member>
      <member refid="classpcg__detail_1_1engine_1a9c75cb00bd3a81f316546acca79a2ca7" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>base_generate0</name></member>
      <member refid="classpcg__detail_1_1engine_1abc83b5b934e2acfa6fac6501db0bb703" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>bump</name></member>
      <member refid="classpcg__detail_1_1oneseq__stream_1abacdb579b5a3930ab4143c2fc01aa73b" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>can_specify_stream</name></member>
      <member refid="classpcg__detail_1_1engine_1ab47ab15e70c4ac7d284509642a4628a1" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>discard</name></member>
      <member refid="classpcg__detail_1_1engine_1aa58dc06aeb00200b73dbb890abc50fbf" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>distance</name></member>
      <member refid="classpcg__detail_1_1engine_1a00e9d352d7c83b5c5287d7b55b19b4bc" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>distance</name></member>
      <member refid="classpcg__detail_1_1engine_1ac02de8c934480730d861cfcf5626b697" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>engine</name></member>
      <member refid="classpcg__detail_1_1engine_1a911dbf0e47820abfe544bde5e63f5645" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>engine</name></member>
      <member refid="classpcg__detail_1_1engine_1a346579aae6e9f583d1db948bc666c665" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>engine</name></member>
      <member refid="classpcg__detail_1_1engine_1a4a5018b2637964646c6623442d68d24d" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>engine</name></member>
      <member refid="classpcg__detail_1_1oneseq__stream_1ac15eabd5d288cd794e5b74af6c927336" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>is_mcg</name></member>
      <member refid="classpcg__detail_1_1engine_1afb796307012f539f9ac31eb4390a9ead" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>max</name></member>
      <member refid="classpcg__detail_1_1engine_1a875ea02e42ccc2286b3966520e0faed5" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>min</name></member>
      <member refid="classpcg__detail_1_1oneseq__stream_1a3bd1152cb63171e71ef739d44bd392fa" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>oneseq_stream</name></member>
      <member refid="classpcg__detail_1_1engine_1af26836cecbdaa218abfd1182f2e84402" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>operator()</name></member>
      <member refid="classpcg__detail_1_1engine_1a24520f8e9105cd463b84d545e6777be9" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>operator()</name></member>
      <member refid="classpcg__detail_1_1engine_1a5e668211d96961296a32014645938076" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>operator-</name></member>
      <member refid="classpcg__detail_1_1engine_1a76bbaeddcc0707b168374c22d8fe8eb8" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>operator&lt;&lt;</name></member>
      <member refid="classpcg__detail_1_1engine_1af79f90f1b65a5d7c932621ae5ab0a603" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>operator==</name></member>
      <member refid="classpcg__detail_1_1engine_1a3e972b7259cfc9501cc55e2b7201a4f1" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>operator&gt;&gt;</name></member>
      <member refid="classpcg__detail_1_1engine_1ae534d703d6ecccf0c7a3da12e1f9bf5e" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>period_pow2</name></member>
      <member refid="classpcg__detail_1_1engine_1af7b21de08e98c837c5ac79ac0fb40260" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>result_type</name></member>
      <member refid="classpcg__detail_1_1engine_1acb79a230fcce852a7fc414d1194dd5a9" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>seed</name></member>
      <member refid="classpcg__detail_1_1oneseq__stream_1a12107cf1c4f41caf6f3fc1366e7edf0d" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>set_stream</name></member>
      <member refid="classpcg__detail_1_1engine_1a8e29a3b26c9966667b6ea7a7f153b145" prot="protected" virt="non-virtual"><scope>pcg_detail::engine</scope><name>state_</name></member>
      <member refid="classpcg__detail_1_1engine_1a551fea1601c043e1162c790593c51b58" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>state_type</name></member>
      <member refid="classpcg__detail_1_1oneseq__stream_1a4cd0f9d49faf542f139bed6a0cdf6722" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>stream</name></member>
      <member refid="classpcg__detail_1_1oneseq__stream_1ad9841f094abb6a076c7b2fb31460dae1" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>streams_pow2</name></member>
      <member refid="classpcg__detail_1_1engine_1a142a7d2853ddc5e0583e0398da4c77b7" prot="public" virt="non-virtual"><scope>pcg_detail::engine</scope><name>wrapped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
