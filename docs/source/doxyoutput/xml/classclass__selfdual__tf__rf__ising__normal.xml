<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classclass__selfdual__tf__rf__ising__normal" kind="class" language="C++" prot="public">
    <compoundname>class_selfdual_tf_rf_ising_normal</compoundname>
    <basecompoundref refid="classclass__model__base" prot="public" virt="non-virtual">class_model_base</basecompoundref>
    <includes refid="class__selfdual__tf__rf__ising__normal_8h" local="no">class_selfdual_tf_rf_ising_normal.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classclass__selfdual__tf__rf__ising__normal_1a5187f891827841bc682bdde9a0672937" prot="private" static="no">
        <type>std::complex&lt; double &gt;</type>
        <definition>using class_selfdual_tf_rf_ising_normal::Scalar =  std::complex&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="17" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1a7457e998db97bc8c422cc7aff7a94869" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int class_selfdual_tf_rf_ising_normal::spin_dim</definition>
        <argsstring></argsstring>
        <name>spin_dim</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Spin dimension </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="19" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1a22c3ba2b2df43bd7490d0f3f680af21a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::J_rnd</definition>
        <argsstring></argsstring>
        <name>J_rnd</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="20" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1ab0a03632e519a0d7fa83cf5f3a26b6da" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::h_rnd</definition>
        <argsstring></argsstring>
        <name>h_rnd</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="21" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1a884831bdec63ad25c43a59560d86fea3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::J_log_mean</definition>
        <argsstring></argsstring>
        <name>J_log_mean</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="22" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1acaf96f256588b2743a9b1552bd80ee24" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::h_log_mean</definition>
        <argsstring></argsstring>
        <name>h_log_mean</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="23" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1ae900425dc9cf39d9792b787365846da7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::J_avg</definition>
        <argsstring></argsstring>
        <name>J_avg</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="24" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1aee0504fdc6037a1e25f6d5fbdbde8a13" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::h_avg</definition>
        <argsstring></argsstring>
        <name>h_avg</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="25" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1a39d9cf30e6dda63490c13ad7d38d85c3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::J_sigma</definition>
        <argsstring></argsstring>
        <name>J_sigma</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="26" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1a5a3eb9156f7edb710c11b7c9809e53a8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::h_sigma</definition>
        <argsstring></argsstring>
        <name>h_sigma</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="27" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1a7f5ad44b7695d87fbb08ef7105b76091" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="28" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1ac22080176f11f30ff324b7f26eb3b1f9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="29" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1a1c969de51e1d839c057f9a91735f9538" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::J_ptb</definition>
        <argsstring></argsstring>
        <name>J_ptb</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="30" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1aa1992cd34f51e579debb6e64e4e49840" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double class_selfdual_tf_rf_ising_normal::h_ptb</definition>
        <argsstring></argsstring>
        <name>h_ptb</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="31" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classclass__selfdual__tf__rf__ising__normal_1a212a729b806675745eb2ba64261da15f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int class_selfdual_tf_rf_ising_normal::num_params</definition>
        <argsstring></argsstring>
        <name>num_params</name>
        <initializer>= 13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="32" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1ae457f520b7a620a32825604a9df76f22" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>class_selfdual_tf_rf_ising_normal::class_selfdual_tf_rf_ising_normal</definition>
        <argsstring>(size_t position_, std::string logName=&quot;SDUAL-ISING&quot;)</argsstring>
        <name>class_selfdual_tf_rf_ising_normal</name>
        <param>
          <type>size_t</type>
          <declname>position_</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>logName</declname>
          <defval>&quot;SDUAL-ISING&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Spin dimension </para>        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="37" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="17" bodyend="34"/>
        <references refid="classclass__model__base_1aa497c5b51ccea581b9caf8b7d9c1b7a5">class_model_base::MPO_reduced_view</references>
        <references refid="classclass__model__base_1a6a2f96984fa4ce3efec11a5acd2c4fd0" compoundref="class__model__base_8cpp" startline="41" endline="44">class_model_base::class_model_base</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a7457e998db97bc8c422cc7aff7a94869" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="19">spin_dim</references>
        <references refid="namespacesettings_1_1model_1_1selfdual__tf__rf__ising_1a6a8a8d6fa29d9d802a184390079d1668" compoundref="nmspc__settings_8h" startline="89">settings::model::selfdual_tf_rf_ising::d</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a884831bdec63ad25c43a59560d86fea3" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="22">J_log_mean</references>
        <references refid="namespacesettings_1_1model_1_1selfdual__tf__rf__ising_1aac7c5c9f33d713f561f47e74c033ad34" compoundref="nmspc__settings_8h" startline="84">settings::model::selfdual_tf_rf_ising::J_log_mean</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1acaf96f256588b2743a9b1552bd80ee24" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="23">h_log_mean</references>
        <references refid="namespacesettings_1_1model_1_1selfdual__tf__rf__ising_1ac0a60a6a1426c1401c63438ce971aeb7" compoundref="nmspc__settings_8h" startline="85">settings::model::selfdual_tf_rf_ising::h_log_mean</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a39d9cf30e6dda63490c13ad7d38d85c3" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="26">J_sigma</references>
        <references refid="namespacesettings_1_1model_1_1selfdual__tf__rf__ising_1a585356bf92b2413b1cb430de265b0e8e" compoundref="nmspc__settings_8h" startline="86">settings::model::selfdual_tf_rf_ising::J_sigma</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a5a3eb9156f7edb710c11b7c9809e53a8" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="27">h_sigma</references>
        <references refid="namespacesettings_1_1model_1_1selfdual__tf__rf__ising_1a7fbb5db78fbde435ede8a26d946ad2c8" compoundref="nmspc__settings_8h" startline="87">settings::model::selfdual_tf_rf_ising::h_sigma</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a7f5ad44b7695d87fbb08ef7105b76091" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="28">lambda</references>
        <references refid="namespacesettings_1_1model_1_1selfdual__tf__rf__ising_1af8e672e8d9eb0861b3c5419103906a9e" compoundref="nmspc__settings_8h" startline="88">settings::model::selfdual_tf_rf_ising::lambda</references>
        <references refid="classclass__model__base_1ad73746dd49b2da0ac98c308ef6d07def" compoundref="class__model__base_8h" startline="19">class_model_base::e_reduced</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a22c3ba2b2df43bd7490d0f3f680af21a" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="20">J_rnd</references>
        <references refid="namespacern_1a8e7d038cca542f61a74fc3a51ccd0b60" compoundref="nmspc__random__numbers_8cpp" startline="43" endline="46">rn::normal</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1ab0a03632e519a0d7fa83cf5f3a26b6da" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="21">h_rnd</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1ac22080176f11f30ff324b7f26eb3b1f9" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="29">delta</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a726adafbe7cede99d9e0c805cba098de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::set_realization_averages</definition>
        <argsstring>(double J_avg_, double h_avg_)</argsstring>
        <name>set_realization_averages</name>
        <param>
          <type>double</type>
          <declname>J_avg_</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h_avg_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="40" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="79" bodyend="84"/>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1ae900425dc9cf39d9792b787365846da7" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="24">J_avg</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1aee0504fdc6037a1e25f6d5fbdbde8a13" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="25">h_avg</references>
        <references refid="classclass__model__base_1abaa56fa72f7d7c1019e1cf3bd74772b7" compoundref="class__model__base_8h" startline="24">class_model_base::all_mpo_parameters_have_been_set</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1ab4a006d97fe36ada960ec2b8e951391f" compoundref="class__selfdual__tf__rf__ising__normal_8cpp" startline="87" endline="118">build_mpo</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a42660532bdf110941b96bd9237255f96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto class_selfdual_tf_rf_ising_normal::get_J_rnd</definition>
        <argsstring>()</argsstring>
        <name>get_J_rnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="41" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="41" bodyend="41"/>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a22c3ba2b2df43bd7490d0f3f680af21a" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="20">J_rnd</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a27dd544aec5e2c76358783a6cd8973ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto class_selfdual_tf_rf_ising_normal::get_h_rnd</definition>
        <argsstring>()</argsstring>
        <name>get_h_rnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="42" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="42" bodyend="42"/>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1ab0a03632e519a0d7fa83cf5f3a26b6da" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="21">h_rnd</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a8ec07a99a61a1fc712cd43429c161fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::set_hamiltonian</definition>
        <argsstring>(const Eigen::Tensor&lt; Scalar, 4 &gt; &amp;MPO_, std::vector&lt; double &gt; &amp;parameters) override</argsstring>
        <name>set_hamiltonian</name>
        <reimplements refid="classclass__model__base_1a97eac32ea2fdfc6095f6aecaeaa4728f">set_hamiltonian</reimplements>
        <param>
          <type>const Eigen::Tensor&lt; <ref refid="classclass__model__base_1a7eafb862599d2db69b94667f5feb1029" kindref="member">Scalar</ref>, 4 &gt; &amp;</type>
          <declname>MPO_</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="45" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a75c7d68d4b63bad6ffc4213ab85b27dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::set_hamiltonian</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;parameters) override</argsstring>
        <name>set_hamiltonian</name>
        <reimplements refid="classclass__model__base_1a8e096961694e182c62dd2f6d6cda563b">set_hamiltonian</reimplements>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="46" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a423fcc6890e5e63261e01e2ca09a9b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::set_hamiltonian</definition>
        <argsstring>(const Eigen::MatrixXd &amp;all_parameters, int position) override</argsstring>
        <name>set_hamiltonian</name>
        <reimplements refid="classclass__model__base_1aabc61325c660162b98951819168431e6">set_hamiltonian</reimplements>
        <param>
          <type>const Eigen::MatrixXd &amp;</type>
          <declname>all_parameters</declname>
        </param>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="47" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a0c55f87e24d5dd1224b65f8b71be6f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::set_hamiltonian</definition>
        <argsstring>(const Eigen::VectorXd &amp;parameters) override</argsstring>
        <name>set_hamiltonian</name>
        <reimplements refid="classclass__model__base_1a3ee3f369bbd00039866c40bcf6e23f28">set_hamiltonian</reimplements>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="48" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="57" bodyend="75"/>
        <references refid="classclass__model__base_1abaa56fa72f7d7c1019e1cf3bd74772b7" compoundref="class__model__base_8h" startline="24">class_model_base::all_mpo_parameters_have_been_set</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1ab4a006d97fe36ada960ec2b8e951391f" compoundref="class__selfdual__tf__rf__ising__normal_8cpp" startline="87" endline="118">build_mpo</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1ab4a006d97fe36ada960ec2b8e951391f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::build_mpo</definition>
        <argsstring>() override</argsstring>
        <name>build_mpo</name>
        <reimplements refid="classclass__model__base_1a9aef4688065a93324826893011ef8c14">build_mpo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds the MPO hamiltonian as a rank 4 tensor. Notation following Schollwöck (2010)</para><para>H = - Σ J_{i} sz_{i} sz_{i+1} + h_{i} sx_{i} + l*(h_avg sx_i sx_{i+1} + J_avg sz_{i} sz_{i+2})</para><para>| I 0 0 0 0 | | sz 0 0 0 0 | | sx 0 0 0 0 | | 0 I 0 0 0 | | -(h_rnd)*sx -J_rnd*sz -l*h_avg*sx -l*J_avg*sz I | <verbatim>  2
  |
</verbatim> 0<mdash/>H<mdash/>1 | 3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="49" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="87" bodyend="118"/>
        <references refid="classclass__model__base_1abaa56fa72f7d7c1019e1cf3bd74772b7" compoundref="class__model__base_8h" startline="24">class_model_base::all_mpo_parameters_have_been_set</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1abe6a930a336d3baa895f1d49a2def88d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::randomize_hamiltonian</definition>
        <argsstring>() override</argsstring>
        <name>randomize_hamiltonian</name>
        <reimplements refid="classclass__model__base_1ad774bf318ecff3bf13f8e7821aacdf4a">randomize_hamiltonian</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="50" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="120" bodyend="127"/>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a22c3ba2b2df43bd7490d0f3f680af21a" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="20">J_rnd</references>
        <references refid="namespacern_1a8e7d038cca542f61a74fc3a51ccd0b60" compoundref="nmspc__random__numbers_8cpp" startline="43" endline="46">rn::normal</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a884831bdec63ad25c43a59560d86fea3" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="22">J_log_mean</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a39d9cf30e6dda63490c13ad7d38d85c3" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="26">J_sigma</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1ab0a03632e519a0d7fa83cf5f3a26b6da" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="21">h_rnd</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1acaf96f256588b2743a9b1552bd80ee24" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="23">h_log_mean</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a5a3eb9156f7edb710c11b7c9809e53a8" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="27">h_sigma</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a9a113ca117b3c616b37f042a99b38d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::perturb_hamiltonian</definition>
        <argsstring>(double amplitude) override</argsstring>
        <name>perturb_hamiltonian</name>
        <reimplements refid="classclass__model__base_1a923bd3048f1b5c53bfdb831b3da2efe2">perturb_hamiltonian</reimplements>
        <param>
          <type>double</type>
          <declname>amplitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="51" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="129" bodyend="138"/>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1aa1992cd34f51e579debb6e64e4e49840" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="31">h_ptb</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1ab0a03632e519a0d7fa83cf5f3a26b6da" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="21">h_rnd</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a1c969de51e1d839c057f9a91735f9538" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="30">J_ptb</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a22c3ba2b2df43bd7490d0f3f680af21a" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="20">J_rnd</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a0b9691d16e331bfa52ad5a0a0c198a69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool class_selfdual_tf_rf_ising_normal::is_perturbed</definition>
        <argsstring>() const override</argsstring>
        <name>is_perturbed</name>
        <reimplements refid="classclass__model__base_1ac76b63a806bf09e1d7c888f0be4fa7c5">is_perturbed</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="52" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="140" bodyend="142"/>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a1c969de51e1d839c057f9a91735f9538" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="30">J_ptb</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1aa1992cd34f51e579debb6e64e4e49840" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="31">h_ptb</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a71376130b8c09b5538202db2617de99b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Eigen::Tensor&lt; <ref refid="classclass__model__base_1a7eafb862599d2db69b94667f5feb1029" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; class_selfdual_tf_rf_ising_normal::MPO_reduced_view</definition>
        <argsstring>() const override</argsstring>
        <name>MPO_reduced_view</name>
        <reimplements refid="classclass__model__base_1a230141d80f84b200729e74fa114bd3e8">MPO_reduced_view</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="53" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a17a9e169ba29ef45230e7bd69da1f196" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Eigen::Tensor&lt; <ref refid="classclass__model__base_1a7eafb862599d2db69b94667f5feb1029" kindref="member">Scalar</ref>, 4 &gt;</type>
        <definition>Eigen::Tensor&lt; Scalar, 4 &gt; class_selfdual_tf_rf_ising_normal::MPO_reduced_view</definition>
        <argsstring>(double site_energy) const override</argsstring>
        <name>MPO_reduced_view</name>
        <reimplements refid="classclass__model__base_1aa497c5b51ccea581b9caf8b7d9c1b7a5">MPO_reduced_view</reimplements>
        <param>
          <type>double</type>
          <declname>site_energy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="54" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="149" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a9b552df8cd8b35c453d737deb544432e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="classclass__model__base" kindref="compound">class_model_base</ref> &gt;</type>
        <definition>std::unique_ptr&lt; class_model_base &gt; class_selfdual_tf_rf_ising_normal::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classclass__model__base_1aa63f907aa0ac70db3a9477ce73c1fdd6">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="55" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a64ee5b8dbe5347553b297cc8aef2001d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t class_selfdual_tf_rf_ising_normal::get_spin_dimension</definition>
        <argsstring>() const override</argsstring>
        <name>get_spin_dimension</name>
        <reimplements refid="classclass__model__base_1a7c8050ed2641e8145fdf30860435986a">get_spin_dimension</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="56" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="174" bodyend="174"/>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a7457e998db97bc8c422cc7aff7a94869" compoundref="class__selfdual__tf__rf__ising__normal_8h" startline="19">spin_dim</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a6137738d3d25f5234c0d1e773441cb7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::print_parameter_names</definition>
        <argsstring>() const override</argsstring>
        <name>print_parameter_names</name>
        <reimplements refid="classclass__model__base_1ade62bca0b950914a94c72c72d6c2cc3c">print_parameter_names</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="57" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="180" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1aa479664d3cbcae163078a00cdbbc021d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::print_parameter_values</definition>
        <argsstring>() const override</argsstring>
        <name>print_parameter_values</name>
        <reimplements refid="classclass__model__base_1a8ed38e3cb48bacc3103be07284b20831">print_parameter_values</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="58" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="199" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1a91e40ec2e2a2933c012b3c86f1d46111" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; class_selfdual_tf_rf_ising_normal::get_parameter_names</definition>
        <argsstring>() const override</argsstring>
        <name>get_parameter_names</name>
        <reimplements refid="classclass__model__base_1a2c8ca66dc1a83c1ddb5ea91aec7fe1ed">get_parameter_names</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="59" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="218" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1aac8c5e1ad7ec3e633e65c912295535ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; class_selfdual_tf_rf_ising_normal::get_parameter_values</definition>
        <argsstring>() const override</argsstring>
        <name>get_parameter_values</name>
        <reimplements refid="classclass__model__base_1aed5208f88cae90c68966c58c1b42526b">get_parameter_values</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="60" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="253" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1ae8072ad0009130616f91d6b4ac5ec9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void class_selfdual_tf_rf_ising_normal::set_full_lattice_parameters</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; double &gt;&gt; chain_parameters, bool reverse=false) override</argsstring>
        <name>set_full_lattice_parameters</name>
        <reimplements refid="classclass__model__base_1a4803a9abc26a3282e512dc7a691dc837">set_full_lattice_parameters</reimplements>
        <param>
          <type>const std::vector&lt; std::vector&lt; double &gt;&gt;</type>
          <declname>chain_parameters</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reverse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="62" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="272" bodyend="301"/>
        <references refid="classclass__model__base_1abaa56fa72f7d7c1019e1cf3bd74772b7" compoundref="class__model__base_8h" startline="24">class_model_base::all_mpo_parameters_have_been_set</references>
        <references refid="classclass__selfdual__tf__rf__ising__normal_1a726adafbe7cede99d9e0c805cba098de" compoundref="class__selfdual__tf__rf__ising__normal_8cpp" startline="79" endline="84">set_realization_averages</references>
      </memberdef>
      <memberdef kind="function" id="classclass__selfdual__tf__rf__ising__normal_1aaa7683838eec5f8bf6dc1ce47ac1b556" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Eigen::MatrixXcd</type>
        <definition>Eigen::MatrixXcd class_selfdual_tf_rf_ising_normal::single_site_hamiltonian</definition>
        <argsstring>(int position, int sites, std::vector&lt; Eigen::MatrixXcd &gt; &amp;SX, std::vector&lt; Eigen::MatrixXcd &gt; &amp;SY, std::vector&lt; Eigen::MatrixXcd &gt; &amp;SZ) const override</argsstring>
        <name>single_site_hamiltonian</name>
        <reimplements refid="classclass__model__base_1a6c6d9ef43a65fbdb4fba2d01676dd3b3">single_site_hamiltonian</reimplements>
        <param>
          <type>int</type>
          <declname>position</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sites</declname>
        </param>
        <param>
          <type>std::vector&lt; Eigen::MatrixXcd &gt; &amp;</type>
          <declname>SX</declname>
        </param>
        <param>
          <type>std::vector&lt; Eigen::MatrixXcd &gt; &amp;</type>
          <declname>SY</declname>
        </param>
        <param>
          <type>std::vector&lt; Eigen::MatrixXcd &gt; &amp;</type>
          <declname>SZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="66" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.cpp" bodystart="156" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="248">
        <label>class_selfdual_tf_rf_ising_normal</label>
        <link refid="classclass__selfdual__tf__rf__ising__normal"/>
        <childnode refid="249" relation="public-inheritance">
        </childnode>
      </node>
      <node id="249">
        <label>class_model_base</label>
        <link refid="classclass__model__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="250">
        <label>class_selfdual_tf_rf_ising_normal</label>
        <link refid="classclass__selfdual__tf__rf__ising__normal"/>
        <childnode refid="251" relation="public-inheritance">
        </childnode>
      </node>
      <node id="251">
        <label>class_model_base</label>
        <link refid="classclass__model__base"/>
      </node>
    </collaborationgraph>
    <location file="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" line="16" column="1" bodyfile="/home/david/Dropbox/PhD/Programming/DMRG++/DMRG++/source/model/class_selfdual_tf_rf_ising_normal.h" bodystart="16" bodyend="78"/>
    <listofallmembers>
      <member refid="classclass__model__base_1abaa56fa72f7d7c1019e1cf3bd74772b7" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>all_mpo_parameters_have_been_set</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1ab4a006d97fe36ada960ec2b8e951391f" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>build_mpo</name></member>
      <member refid="classclass__model__base_1a6a2f96984fa4ce3efec11a5acd2c4fd0" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>class_model_base</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1ae457f520b7a620a32825604a9df76f22" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>class_selfdual_tf_rf_ising_normal</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a9b552df8cd8b35c453d737deb544432e" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>clone</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1ac22080176f11f30ff324b7f26eb3b1f9" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>delta</name></member>
      <member refid="classclass__model__base_1ad73746dd49b2da0ac98c308ef6d07def" prot="protected" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>e_reduced</name></member>
      <member refid="classclass__model__base_1ae61a2ca27b9fd27fd19561285ed4abaf" prot="protected" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>extent2</name></member>
      <member refid="classclass__model__base_1a114e24e0f86452d6dd235fd718731763" prot="protected" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>extent4</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a27dd544aec5e2c76358783a6cd8973ff" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>get_h_rnd</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a42660532bdf110941b96bd9237255f96" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>get_J_rnd</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a91e40ec2e2a2933c012b3c86f1d46111" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>get_parameter_names</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1aac8c5e1ad7ec3e633e65c912295535ff" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>get_parameter_values</name></member>
      <member refid="classclass__model__base_1a691eb7ba6564b8bae48db9ae2e368603" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>get_position</name></member>
      <member refid="classclass__model__base_1a1d6a8fc02b00f4ee83ebaa3d0332cfee" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>get_reduced_energy</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a64ee5b8dbe5347553b297cc8aef2001d" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>get_spin_dimension</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1aee0504fdc6037a1e25f6d5fbdbde8a13" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>h_avg</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1acaf96f256588b2743a9b1552bd80ee24" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>h_log_mean</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1aa1992cd34f51e579debb6e64e4e49840" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>h_ptb</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1ab0a03632e519a0d7fa83cf5f3a26b6da" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>h_rnd</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a5a3eb9156f7edb710c11b7c9809e53a8" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>h_sigma</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a0b9691d16e331bfa52ad5a0a0c198a69" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>is_perturbed</name></member>
      <member refid="classclass__model__base_1ab9f4036f02d2349a1ebf40fbc03fa68c" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>isReal</name></member>
      <member refid="classclass__model__base_1a6bfba5c3d319a16c0451509e98df9b0b" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>isReduced</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1ae900425dc9cf39d9792b787365846da7" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>J_avg</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a884831bdec63ad25c43a59560d86fea3" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>J_log_mean</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a1c969de51e1d839c057f9a91735f9538" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>J_ptb</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a22c3ba2b2df43bd7490d0f3f680af21a" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>J_rnd</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a39d9cf30e6dda63490c13ad7d38d85c3" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>J_sigma</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a7f5ad44b7695d87fbb08ef7105b76091" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>lambda</name></member>
      <member refid="classclass__model__base_1a33433f14a50c45b0aa52873e01076b84" prot="protected" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>log</name></member>
      <member refid="classclass__model__base_1a0789119b3413f70affbdbc5f7b15e829" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>MPO</name></member>
      <member refid="classclass__model__base_1acefbc9336ce05ab10c862610a090c548" prot="protected" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>mpo_internal</name></member>
      <member refid="classclass__model__base_1a22d74bafe839007a10f75ac03585fd25" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>MPO_matrix_view</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a71376130b8c09b5538202db2617de99b" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>MPO_reduced_view</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a17a9e169ba29ef45230e7bd69da1f196" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>MPO_reduced_view</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a212a729b806675745eb2ba64261da15f" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>num_params</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a9a113ca117b3c616b37f042a99b38d7c" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>perturb_hamiltonian</name></member>
      <member refid="classclass__model__base_1a42d247bc9576204556626cbf25702508" prot="protected" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>position</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a6137738d3d25f5234c0d1e773441cb7a" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>print_parameter_names</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1aa479664d3cbcae163078a00cdbbc021d" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>print_parameter_values</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1abe6a930a336d3baa895f1d49a2def88d" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>randomize_hamiltonian</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a5187f891827841bc682bdde9a0672937" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>Scalar</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1ae8072ad0009130616f91d6b4ac5ec9e9" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>set_full_lattice_parameters</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a8ec07a99a61a1fc712cd43429c161fef" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>set_hamiltonian</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a75c7d68d4b63bad6ffc4213ab85b27dc" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>set_hamiltonian</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a423fcc6890e5e63261e01e2ca09a9b02" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>set_hamiltonian</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a0c55f87e24d5dd1224b65f8b71be6f4c" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>set_hamiltonian</name></member>
      <member refid="classclass__model__base_1abcce2b2aa2f4680afcb8e92a72c1a992" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>set_position</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a726adafbe7cede99d9e0c805cba098de" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>set_realization_averages</name></member>
      <member refid="classclass__model__base_1afbd0c80af83c59b9af90d190ec8acaac" prot="public" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>set_reduced_energy</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1aaa7683838eec5f8bf6dc1ce47ac1b556" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>single_site_hamiltonian</name></member>
      <member refid="classclass__selfdual__tf__rf__ising__normal_1a7457e998db97bc8c422cc7aff7a94869" prot="private" virt="non-virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>spin_dim</name></member>
      <member refid="classclass__model__base_1ac281b65a3ef25fe526e43eebec5d0051" prot="public" virt="virtual"><scope>class_selfdual_tf_rf_ising_normal</scope><name>~class_model_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
